"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect+utils@2.21.4_typescript@5.5.4_zod@3.25.75";
exports.ids = ["vendor-chunks/@walletconnect+utils@2.21.4_typescript@5.5.4_zod@3.25.75"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@walletconnect+utils@2.21.4_typescript@5.5.4_zod@3.25.75/node_modules/@walletconnect/utils/dist/index.es.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@walletconnect+utils@2.21.4_typescript@5.5.4_zod@3.25.75/node_modules/@walletconnect/utils/dist/index.es.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE10: () => (/* binding */ $n),\n/* harmony export */   BASE16: () => (/* binding */ tt),\n/* harmony export */   BASE64: () => (/* binding */ Qt),\n/* harmony export */   BASE64URL: () => (/* binding */ De),\n/* harmony export */   COLON: () => (/* binding */ Hs),\n/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ We),\n/* harmony export */   EMPTY_SPACE: () => (/* binding */ Ee),\n/* harmony export */   ENV_MAP: () => (/* binding */ J),\n/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ Qo),\n/* harmony export */   LimitedSet: () => (/* binding */ gi),\n/* harmony export */   MemoryStore: () => (/* binding */ Ha),\n/* harmony export */   ONE_THOUSAND: () => (/* binding */ Ds),\n/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ er),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ Mo),\n/* harmony export */   SDK_ERRORS: () => (/* binding */ Jo),\n/* harmony export */   SDK_TYPE: () => (/* binding */ rr),\n/* harmony export */   SLASH: () => (/* binding */ nr),\n/* harmony export */   TYPE_0: () => (/* binding */ Cn),\n/* harmony export */   TYPE_1: () => (/* binding */ ee),\n/* harmony export */   TYPE_2: () => (/* binding */ ge),\n/* harmony export */   UTF8: () => (/* binding */ te),\n/* harmony export */   addResourceToRecap: () => (/* binding */ Yr),\n/* harmony export */   addSignatureToExtrinsic: () => (/* binding */ bs),\n/* harmony export */   appendToQueryString: () => (/* binding */ or),\n/* harmony export */   assertType: () => (/* binding */ Zs),\n/* harmony export */   assignAbilityToActions: () => (/* binding */ hn),\n/* harmony export */   base64Decode: () => (/* binding */ Zr),\n/* harmony export */   base64Encode: () => (/* binding */ Gr),\n/* harmony export */   buildApprovedNamespaces: () => (/* binding */ pa),\n/* harmony export */   buildAuthObject: () => (/* binding */ mf),\n/* harmony export */   buildNamespacesFromAuth: () => (/* binding */ ga),\n/* harmony export */   buildRecapStatement: () => (/* binding */ Jr),\n/* harmony export */   buildSignedExtrinsicHash: () => (/* binding */ Ka),\n/* harmony export */   calcExpiry: () => (/* binding */ ii),\n/* harmony export */   capitalize: () => (/* binding */ ti),\n/* harmony export */   capitalizeWord: () => (/* binding */ lr),\n/* harmony export */   createDelayedPromise: () => (/* binding */ ei),\n/* harmony export */   createEncodedRecap: () => (/* binding */ Ef),\n/* harmony export */   createExpiringPromise: () => (/* binding */ ni),\n/* harmony export */   createRecap: () => (/* binding */ Wr),\n/* harmony export */   decodeRecap: () => (/* binding */ Lt),\n/* harmony export */   decodeTypeByte: () => (/* binding */ Vt),\n/* harmony export */   decodeTypeTwoEnvelope: () => (/* binding */ Yc),\n/* harmony export */   decrypt: () => (/* binding */ Zc),\n/* harmony export */   deriveExtrinsicHash: () => (/* binding */ ys),\n/* harmony export */   deriveSymKey: () => (/* binding */ Kc),\n/* harmony export */   deserialize: () => (/* binding */ Me),\n/* harmony export */   encodeRecap: () => (/* binding */ Ne),\n/* harmony export */   encodeTypeByte: () => (/* binding */ jn),\n/* harmony export */   encodeTypeTwoEnvelope: () => (/* binding */ Wc),\n/* harmony export */   encrypt: () => (/* binding */ Gc),\n/* harmony export */   engineEvent: () => (/* binding */ ci),\n/* harmony export */   enumify: () => (/* binding */ Qs),\n/* harmony export */   extractSolanaTransactionId: () => (/* binding */ sf),\n/* harmony export */   formatAccountId: () => (/* binding */ Zn),\n/* harmony export */   formatAccountWithChain: () => (/* binding */ Os),\n/* harmony export */   formatChainId: () => (/* binding */ Gn),\n/* harmony export */   formatDeeplinkUrl: () => (/* binding */ dr),\n/* harmony export */   formatExpirerTarget: () => (/* binding */ Xe),\n/* harmony export */   formatIdTarget: () => (/* binding */ oi),\n/* harmony export */   formatMessage: () => (/* binding */ qr),\n/* harmony export */   formatMessageContext: () => (/* binding */ Ws),\n/* harmony export */   formatRelayParams: () => (/* binding */ Ko),\n/* harmony export */   formatRelayRpcUrl: () => (/* binding */ zs),\n/* harmony export */   formatStatementFromRecap: () => (/* binding */ gn),\n/* harmony export */   formatTopicTarget: () => (/* binding */ ri),\n/* harmony export */   formatUA: () => (/* binding */ cr),\n/* harmony export */   formatUri: () => (/* binding */ oa),\n/* harmony export */   fromBase64: () => (/* binding */ Qe),\n/* harmony export */   generateKeyPair: () => (/* binding */ Vc),\n/* harmony export */   generateRandomBytes32: () => (/* binding */ qc),\n/* harmony export */   getAccountsChains: () => (/* binding */ qt),\n/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ _s),\n/* harmony export */   getAddressFromAccount: () => (/* binding */ Wn),\n/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Us),\n/* harmony export */   getAlgorandTransactionId: () => (/* binding */ af),\n/* harmony export */   getAppId: () => (/* binding */ qs),\n/* harmony export */   getAppMetadata: () => (/* binding */ sr),\n/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ us),\n/* harmony export */   getChainFromAccount: () => (/* binding */ Yn),\n/* harmony export */   getChainsFromAccounts: () => (/* binding */ Xn),\n/* harmony export */   getChainsFromNamespace: () => (/* binding */ ve),\n/* harmony export */   getChainsFromNamespaces: () => (/* binding */ Ts),\n/* harmony export */   getChainsFromRecap: () => (/* binding */ Af),\n/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Rs),\n/* harmony export */   getCommonValuesInArrays: () => (/* binding */ Je),\n/* harmony export */   getCryptoKeyFromKeyData: () => (/* binding */ Do),\n/* harmony export */   getDecodedRecapFromResources: () => (/* binding */ Kr),\n/* harmony export */   getDeepLink: () => (/* binding */ ui),\n/* harmony export */   getDidAddress: () => (/* binding */ dn),\n/* harmony export */   getDidAddressSegments: () => (/* binding */ Se),\n/* harmony export */   getDidChainId: () => (/* binding */ Mr),\n/* harmony export */   getEnvironment: () => (/* binding */ Pt),\n/* harmony export */   getHttpUrl: () => (/* binding */ Gs),\n/* harmony export */   getInternalError: () => (/* binding */ Et),\n/* harmony export */   getJavascriptID: () => (/* binding */ fr),\n/* harmony export */   getJavascriptOS: () => (/* binding */ ir),\n/* harmony export */   getLastItems: () => (/* binding */ ur),\n/* harmony export */   getLinkModeURL: () => (/* binding */ sa),\n/* harmony export */   getMethodsFromRecap: () => (/* binding */ If),\n/* harmony export */   getNamespacedDidChainId: () => (/* binding */ Vr),\n/* harmony export */   getNamespacesChains: () => (/* binding */ Go),\n/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Wo),\n/* harmony export */   getNamespacesFromAccounts: () => (/* binding */ Xo),\n/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ Zo),\n/* harmony export */   getNearTransactionIdFromSignedTransaction: () => (/* binding */ cf),\n/* harmony export */   getNearUint8ArrayFromBytes: () => (/* binding */ kr),\n/* harmony export */   getNodeOnlineStatus: () => (/* binding */ ds),\n/* harmony export */   getReCapActions: () => (/* binding */ zr),\n/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ ls),\n/* harmony export */   getRecapAbilitiesFromResource: () => (/* binding */ vf),\n/* harmony export */   getRecapFromResources: () => (/* binding */ Oe),\n/* harmony export */   getRecapResource: () => (/* binding */ Fr),\n/* harmony export */   getRelayClientMetadata: () => (/* binding */ Fs),\n/* harmony export */   getRelayProtocolApi: () => (/* binding */ na),\n/* harmony export */   getRelayProtocolName: () => (/* binding */ ea),\n/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ ha),\n/* harmony export */   getSdkError: () => (/* binding */ Kt),\n/* harmony export */   getSearchParamFromURL: () => (/* binding */ li),\n/* harmony export */   getSignDirectHash: () => (/* binding */ uf),\n/* harmony export */   getSuiDigest: () => (/* binding */ ff),\n/* harmony export */   getUniqueValues: () => (/* binding */ Ge),\n/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ ai),\n/* harmony export */   hasOverlap: () => (/* binding */ It),\n/* harmony export */   hashEthereumMessage: () => (/* binding */ an),\n/* harmony export */   hashKey: () => (/* binding */ Fc),\n/* harmony export */   hashMessage: () => (/* binding */ zc),\n/* harmony export */   isAndroid: () => (/* binding */ Ms),\n/* harmony export */   isAppVisible: () => (/* binding */ Pa),\n/* harmony export */   isBrowser: () => (/* binding */ zt),\n/* harmony export */   isCaipNamespace: () => (/* binding */ Pn),\n/* harmony export */   isConformingNamespaces: () => (/* binding */ cs),\n/* harmony export */   isExpired: () => (/* binding */ fi),\n/* harmony export */   isIframe: () => (/* binding */ gr),\n/* harmony export */   isIos: () => (/* binding */ Vs),\n/* harmony export */   isNode: () => (/* binding */ Ye),\n/* harmony export */   isOnline: () => (/* binding */ ja),\n/* harmony export */   isProposalStruct: () => (/* binding */ wa),\n/* harmony export */   isReactNative: () => (/* binding */ Bt),\n/* harmony export */   isRecap: () => (/* binding */ pn),\n/* harmony export */   isSessionCompatible: () => (/* binding */ ya),\n/* harmony export */   isSessionStruct: () => (/* binding */ xa),\n/* harmony export */   isTelegram: () => (/* binding */ pr),\n/* harmony export */   isTestRun: () => (/* binding */ hi),\n/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Jc),\n/* harmony export */   isTypeTwoEnvelope: () => (/* binding */ Qc),\n/* harmony export */   isUndefined: () => (/* binding */ kt),\n/* harmony export */   isValidAccountId: () => (/* binding */ ts),\n/* harmony export */   isValidAccounts: () => (/* binding */ rs),\n/* harmony export */   isValidActions: () => (/* binding */ ss),\n/* harmony export */   isValidArray: () => (/* binding */ me),\n/* harmony export */   isValidChainId: () => (/* binding */ we),\n/* harmony export */   isValidChains: () => (/* binding */ es),\n/* harmony export */   isValidController: () => (/* binding */ va),\n/* harmony export */   isValidEip1271Signature: () => (/* binding */ jr),\n/* harmony export */   isValidEip191Signature: () => (/* binding */ Lr),\n/* harmony export */   isValidErrorReason: () => (/* binding */ Sa),\n/* harmony export */   isValidEvent: () => (/* binding */ Ua),\n/* harmony export */   isValidId: () => (/* binding */ Ia),\n/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ os),\n/* harmony export */   isValidNamespaceActions: () => (/* binding */ Dn),\n/* harmony export */   isValidNamespaceChains: () => (/* binding */ ns),\n/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ Hn),\n/* harmony export */   isValidNamespaces: () => (/* binding */ is),\n/* harmony export */   isValidNamespacesChainId: () => (/* binding */ _a),\n/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Ra),\n/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Ta),\n/* harmony export */   isValidNumber: () => (/* binding */ qe),\n/* harmony export */   isValidObject: () => (/* binding */ Ve),\n/* harmony export */   isValidParams: () => (/* binding */ Aa),\n/* harmony export */   isValidRecap: () => (/* binding */ bt),\n/* harmony export */   isValidRelay: () => (/* binding */ fs),\n/* harmony export */   isValidRelays: () => (/* binding */ Ba),\n/* harmony export */   isValidRequest: () => (/* binding */ Na),\n/* harmony export */   isValidRequestExpiry: () => (/* binding */ La),\n/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ Ea),\n/* harmony export */   isValidResponse: () => (/* binding */ Oa),\n/* harmony export */   isValidString: () => (/* binding */ it),\n/* harmony export */   isValidUrl: () => (/* binding */ ma),\n/* harmony export */   mapEntries: () => (/* binding */ Js),\n/* harmony export */   mapToObj: () => (/* binding */ Ys),\n/* harmony export */   mergeArrays: () => (/* binding */ ct),\n/* harmony export */   mergeEncodedRecaps: () => (/* binding */ Bf),\n/* harmony export */   mergeRecaps: () => (/* binding */ Xr),\n/* harmony export */   mergeRequiredAndOptionalNamespaces: () => (/* binding */ ba),\n/* harmony export */   normalizeNamespaces: () => (/* binding */ ye),\n/* harmony export */   objToMap: () => (/* binding */ Xs),\n/* harmony export */   openDeeplink: () => (/* binding */ hr),\n/* harmony export */   parseAccountId: () => (/* binding */ ze),\n/* harmony export */   parseChainId: () => (/* binding */ Fe),\n/* harmony export */   parseContextNames: () => (/* binding */ ar),\n/* harmony export */   parseExpirerTarget: () => (/* binding */ si),\n/* harmony export */   parseNamespaceKey: () => (/* binding */ Yo),\n/* harmony export */   parseRelayParams: () => (/* binding */ Vo),\n/* harmony export */   parseTopic: () => (/* binding */ qo),\n/* harmony export */   parseUri: () => (/* binding */ ra),\n/* harmony export */   populateAppMetadata: () => (/* binding */ Ks),\n/* harmony export */   populateAuthPayload: () => (/* binding */ wf),\n/* harmony export */   recapHasResource: () => (/* binding */ xf),\n/* harmony export */   serialize: () => (/* binding */ kn),\n/* harmony export */   sleep: () => (/* binding */ pi),\n/* harmony export */   ss58AddressToPublicKey: () => (/* binding */ gs),\n/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ hs),\n/* harmony export */   subscribeToNetworkChange: () => (/* binding */ ka),\n/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ ps),\n/* harmony export */   toBase64: () => (/* binding */ br),\n/* harmony export */   uuidv4: () => (/* binding */ di),\n/* harmony export */   validateDecoding: () => (/* binding */ Xc),\n/* harmony export */   validateEncoding: () => (/* binding */ Ho),\n/* harmony export */   validateSignedCacao: () => (/* binding */ yf),\n/* harmony export */   verifyP256Jwt: () => (/* binding */ ta),\n/* harmony export */   verifySignature: () => (/* binding */ Cr)\n/* harmony export */ });\n/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! detect-browser */ \"(ssr)/./node_modules/.pnpm/detect-browser@5.3.0/node_modules/detect-browser/es/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/.pnpm/@walletconnect+time@1.0.2/node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/.pnpm/@walletconnect+window-getters@1.0.1/node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/./node_modules/.pnpm/@walletconnect+window-metadata@1.0.1/node_modules/@walletconnect/window-metadata/dist/cjs/index.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.31.0_typescript@5.5.4_zod@3.25.75/node_modules/viem/_esm/utils/signature/recoverAddress.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/.pnpm/bs58@6.0.0/node_modules/bs58/src/esm/index.js\");\n/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @msgpack/msgpack */ \"(ssr)/./node_modules/.pnpm/@msgpack+msgpack@3.1.2/node_modules/@msgpack/msgpack/dist.esm/decode.mjs\");\n/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @msgpack/msgpack */ \"(ssr)/./node_modules/.pnpm/@msgpack+msgpack@3.1.2/node_modules/@msgpack/msgpack/dist.esm/encode.mjs\");\n/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @scure/base */ \"(ssr)/./node_modules/.pnpm/@scure+base@1.2.6/node_modules/@scure/base/lib/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/./node_modules/.pnpm/@walletconnect+relay-auth@1.1.0/node_modules/@walletconnect/relay-auth/dist/index.es.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/relay-api */ \"(ssr)/./node_modules/.pnpm/@walletconnect+relay-api@1.0.11/node_modules/@walletconnect/relay-api/dist/index.es.js\");\n/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! blakejs */ \"(ssr)/./node_modules/.pnpm/blakejs@1.2.1/node_modules/blakejs/index.js\");\n/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(blakejs__WEBPACK_IMPORTED_MODULE_7__);\nconst xe=\":\";function Fe(t){const[e,n]=t.split(xe);return{namespace:e,reference:n}}function Gn(t){const{namespace:e,reference:n}=t;return[e,n].join(xe)}function ze(t){const[e,n,r]=t.split(xe);return{namespace:e,reference:n,address:r}}function Zn(t){const{namespace:e,reference:n,address:r}=t;return[e,n,r].join(xe)}function Ge(t,e){const n=[];return t.forEach(r=>{const o=e(r);n.includes(o)||n.push(o)}),n}function Wn(t){const{address:e}=ze(t);return e}function Yn(t){const{namespace:e,reference:n}=ze(t);return Gn({namespace:e,reference:n})}function Os(t,e){const{namespace:n,reference:r}=Fe(e);return Zn({namespace:n,reference:r,address:t})}function Us(t){return Ge(t,Wn)}function Xn(t){return Ge(t,Yn)}function _s(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...o.accounts)}),n}function Ts(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...Xn(o.accounts))}),n}function Rs(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...ve(r,o))}),n}function ve(t,e){return t.includes(\":\")?[t]:e.chains||[]}var $s=Object.defineProperty,Cs=Object.defineProperties,Ls=Object.getOwnPropertyDescriptors,Jn=Object.getOwnPropertySymbols,js=Object.prototype.hasOwnProperty,ks=Object.prototype.propertyIsEnumerable,Ze=(t,e,n)=>e in t?$s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Qn=(t,e)=>{for(var n in e||(e={}))js.call(e,n)&&Ze(t,n,e[n]);if(Jn)for(var n of Jn(e))ks.call(e,n)&&Ze(t,n,e[n]);return t},Ps=(t,e)=>Cs(t,Ls(e)),tr=(t,e,n)=>Ze(t,typeof e!=\"symbol\"?e+\"\":e,n);const er=\"ReactNative\",J={reactNative:\"react-native\",node:\"node\",browser:\"browser\",unknown:\"unknown\"},Ee=\" \",Hs=\":\",nr=\"/\",We=2,Ds=1e3,rr=\"js\";function Ye(){return typeof process<\"u\"&&typeof process.versions<\"u\"&&typeof process.versions.node<\"u\"}function Bt(){return!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)()&&navigator.product===er}function Ms(){return Bt()&&typeof global<\"u\"&&typeof(global==null?void 0:global.Platform)<\"u\"&&(global==null?void 0:global.Platform.OS)===\"android\"}function Vs(){return Bt()&&typeof global<\"u\"&&typeof(global==null?void 0:global.Platform)<\"u\"&&(global==null?void 0:global.Platform.OS)===\"ios\"}function zt(){return!Ye()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()}function Pt(){return Bt()?J.reactNative:Ye()?J.node:zt()?J.browser:J.unknown}function qs(){var t;try{return Bt()&&typeof global<\"u\"&&typeof(global==null?void 0:global.Application)<\"u\"?(t=global.Application)==null?void 0:t.applicationId:void 0}catch{return}}function or(t,e){const n=new URLSearchParams(t);for(const r of Object.keys(e).sort())if(e.hasOwnProperty(r)){const o=e[r];o!==void 0&&n.set(r,o)}return n.toString()}function Ks(t){var e,n;const r=sr();try{return t!=null&&t.url&&r.url&&new URL(t.url).host!==new URL(r.url).host&&(console.warn(`The configured WalletConnect 'metadata.url':${t.url} differs from the actual page url:${r.url}. This is probably unintended and can lead to issues.`),t.url=r.url),(e=t?.icons)!=null&&e.length&&t.icons.length>0&&(t.icons=t.icons.filter(o=>o!==\"\")),Ps(Qn(Qn({},r),t),{url:t?.url||r.url,name:t?.name||r.name,description:t?.description||r.description,icons:(n=t?.icons)!=null&&n.length&&t.icons.length>0?t.icons:r.icons})}catch(o){return console.warn(\"Error populating app metadata\",o),t||r}}function sr(){return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__.getWindowMetadata)()||{name:\"\",description:\"\",url:\"\",icons:[\"\"]}}function Fs(t,e){var n;const r=Pt(),o={protocol:t,version:e,env:r};return r===\"browser\"&&(o.host=((n=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)())==null?void 0:n.host)||\"unknown\"),o}function ir(){if(Pt()===J.reactNative&&typeof global<\"u\"&&typeof(global==null?void 0:global.Platform)<\"u\"){const{OS:n,Version:r}=global.Platform;return[n,r].join(\"-\")}const t=(0,detect_browser__WEBPACK_IMPORTED_MODULE_8__.detect)();if(t===null)return\"unknown\";const e=t.os?t.os.replace(\" \",\"\").toLowerCase():\"unknown\";return t.type===\"browser\"?[e,t.name,t.version].join(\"-\"):[e,t.version].join(\"-\")}function fr(){var t;const e=Pt();return e===J.browser?[e,((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)())==null?void 0:t.host)||\"unknown\"].join(\":\"):e}function cr(t,e,n){const r=ir(),o=fr();return[[t,e].join(\"-\"),[rr,n].join(\"-\"),r,o].join(\"/\")}function zs({protocol:t,version:e,relayUrl:n,sdkVersion:r,auth:o,projectId:s,useOnCloseEvent:i,bundleId:f,packageName:c}){const u=n.split(\"?\"),a=cr(t,e,r),l={auth:o,ua:a,projectId:s,useOnCloseEvent:i||void 0,packageName:c||void 0,bundleId:f||void 0},h=or(u[1]||\"\",l);return u[0]+\"?\"+h}function Gs(t){let e=(t.match(/^[^:]+(?=:\\/\\/)/gi)||[])[0];const n=typeof e<\"u\"?t.split(\"://\")[1]:t;return e=e===\"wss\"?\"https\":\"http\",[e,n].join(\"://\")}function Zs(t,e,n){if(!t[e]||typeof t[e]!==n)throw new Error(`Missing or invalid \"${e}\" param`)}function ar(t,e=We){return ur(t.split(nr),e)}function Ws(t){return ar(t).join(Ee)}function It(t,e){return t.filter(n=>e.includes(n)).length===t.length}function ur(t,e=We){return t.slice(Math.max(t.length-e,0))}function Ys(t){return Object.fromEntries(t.entries())}function Xs(t){return new Map(Object.entries(t))}function Js(t,e){const n={};return Object.keys(t).forEach(r=>{n[r]=e(t[r])}),n}const Qs=t=>t;function lr(t){return t.trim().replace(/^\\w/,e=>e.toUpperCase())}function ti(t){return t.split(Ee).map(e=>lr(e)).join(Ee)}function ei(t=_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES,e){const n=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(t||_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES);let r,o,s,i;return{resolve:f=>{s&&r&&(clearTimeout(s),r(f),i=Promise.resolve(f))},reject:f=>{s&&o&&(clearTimeout(s),o(f))},done:()=>new Promise((f,c)=>{if(i)return f(i);s=setTimeout(()=>{const u=new Error(e);i=Promise.reject(u),c(u)},n),r=f,o=c})}}function ni(t,e,n){return new Promise(async(r,o)=>{const s=setTimeout(()=>o(new Error(n)),e);try{const i=await t;r(i)}catch(i){o(i)}clearTimeout(s)})}function Xe(t,e){if(typeof e==\"string\"&&e.startsWith(`${t}:`))return e;if(t.toLowerCase()===\"topic\"){if(typeof e!=\"string\")throw new Error('Value must be \"string\" for expirer target type: topic');return`topic:${e}`}else if(t.toLowerCase()===\"id\"){if(typeof e!=\"number\")throw new Error('Value must be \"number\" for expirer target type: id');return`id:${e}`}throw new Error(`Unknown expirer target type: ${t}`)}function ri(t){return Xe(\"topic\",t)}function oi(t){return Xe(\"id\",t)}function si(t){const[e,n]=t.split(\":\"),r={id:void 0,topic:void 0};if(e===\"topic\"&&typeof n==\"string\")r.topic=n;else if(e===\"id\"&&Number.isInteger(Number(n)))r.id=Number(n);else throw new Error(`Invalid target, expected id:number or topic:string, got ${e}:${n}`);return r}function ii(t,e){return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.fromMiliseconds)((e||Date.now())+(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(t))}function fi(t){return Date.now()>=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(t)}function ci(t,e){return`${t}${e?`:${e}`:\"\"}`}function ct(t=[],e=[]){return[...new Set([...t,...e])]}async function ai({id:t,topic:e,wcDeepLink:n}){var r;try{if(!n)return;const o=typeof n==\"string\"?JSON.parse(n):n,s=o?.href;if(typeof s!=\"string\")return;const i=dr(s,t,e),f=Pt();if(f===J.browser){if(!((r=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)())!=null&&r.hasFocus())){console.warn(\"Document does not have focus, skipping deeplink.\");return}hr(i)}else f===J.reactNative&&typeof(global==null?void 0:global.Linking)<\"u\"&&await global.Linking.openURL(i)}catch(o){console.error(o)}}function dr(t,e,n){const r=`requestId=${e}&sessionTopic=${n}`;t.endsWith(\"/\")&&(t=t.slice(0,-1));let o=`${t}`;if(t.startsWith(\"https://t.me\")){const s=t.includes(\"?\")?\"&startapp=\":\"?startapp=\";o=`${o}${s}${br(r,!0)}`}else o=`${o}/wc?${r}`;return o}function hr(t){let e=\"_self\";gr()?e=\"_top\":(pr()||t.startsWith(\"https://\")||t.startsWith(\"http://\"))&&(e=\"_blank\"),window.open(t,e,\"noreferrer noopener\")}async function ui(t,e){let n=\"\";try{if(zt()&&(n=localStorage.getItem(e),n))return n;n=await t.getItem(e)}catch(r){console.error(r)}return n}function Je(t,e){return t.filter(n=>e.includes(n))}function li(t,e){if(!t.includes(e))return null;const n=t.split(/([&,?,=])/),r=n.indexOf(e);return n[r+2]}function di(){return typeof crypto<\"u\"&&crypto!=null&&crypto.randomUUID?crypto.randomUUID():\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/gu,t=>{const e=Math.random()*16|0;return(t===\"x\"?e:e&3|8).toString(16)})}function hi(){return typeof process<\"u\"&&process.env.IS_VITEST===\"true\"}function pr(){return typeof window<\"u\"&&(!!window.TelegramWebviewProxy||!!window.Telegram||!!window.TelegramWebviewProxyProto)}function gr(){try{return window.self!==window.top}catch{return!1}}function br(t,e=!1){const n=Buffer.from(t).toString(\"base64\");return e?n.replace(/[=]/g,\"\"):n}function Qe(t){return Buffer.from(t,\"base64\").toString(\"utf-8\")}function pi(t){return new Promise(e=>setTimeout(e,t))}class gi{constructor({limit:e}){tr(this,\"limit\"),tr(this,\"set\"),this.limit=e,this.set=new Set}add(e){if(!this.set.has(e)){if(this.set.size>=this.limit){const n=this.set.values().next().value;n&&this.set.delete(n)}this.set.add(e)}}has(e){return this.set.has(e)}}const Be=BigInt(2**32-1),yr=BigInt(32);function mr(t,e=!1){return e?{h:Number(t&Be),l:Number(t>>yr&Be)}:{h:Number(t>>yr&Be)|0,l:Number(t&Be)|0}}function wr(t,e=!1){const n=t.length;let r=new Uint32Array(n),o=new Uint32Array(n);for(let s=0;s<n;s++){const{h:i,l:f}=mr(t[s],e);[r[s],o[s]]=[i,f]}return[r,o]}const xr=(t,e,n)=>t>>>n,vr=(t,e,n)=>t<<32-n|e>>>n,At=(t,e,n)=>t>>>n|e<<32-n,St=(t,e,n)=>t<<32-n|e>>>n,se=(t,e,n)=>t<<64-n|e>>>n-32,ie=(t,e,n)=>t>>>n-32|e<<64-n,bi=(t,e)=>e,yi=(t,e)=>t,mi=(t,e,n)=>t<<n|e>>>32-n,wi=(t,e,n)=>e<<n|t>>>32-n,xi=(t,e,n)=>e<<n-32|t>>>64-n,vi=(t,e,n)=>t<<n-32|e>>>64-n;function dt(t,e,n,r){const o=(e>>>0)+(r>>>0);return{h:t+n+(o/2**32|0)|0,l:o|0}}const tn=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),en=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,Ei=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),Bi=(t,e,n,r,o)=>e+n+r+o+(t/2**32|0)|0,Ii=(t,e,n,r,o)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(o>>>0),Ai=(t,e,n,r,o,s)=>e+n+r+o+s+(t/2**32|0)|0,Gt=typeof globalThis==\"object\"&&\"crypto\"in globalThis?globalThis.crypto:void 0;function nn(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name===\"Uint8Array\"}function mt(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(\"positive integer expected, got \"+t)}function at(t,...e){if(!nn(t))throw new Error(\"Uint8Array expected\");if(e.length>0&&!e.includes(t.length))throw new Error(\"Uint8Array expected of length \"+e+\", got length=\"+t.length)}function rn(t){if(typeof t!=\"function\"||typeof t.create!=\"function\")throw new Error(\"Hash should be wrapped by utils.createHasher\");mt(t.outputLen),mt(t.blockLen)}function Nt(t,e=!0){if(t.destroyed)throw new Error(\"Hash instance has been destroyed\");if(e&&t.finished)throw new Error(\"Hash#digest() has already been called\")}function on(t,e){at(t);const n=e.outputLen;if(t.length<n)throw new Error(\"digestInto() expects output buffer of length at least \"+n)}function fe(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function ut(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function sn(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function gt(t,e){return t<<32-e|t>>>e}const Er=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Br(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}const wt=Er?t=>t:t=>Br(t);function Si(t){for(let e=0;e<t.length;e++)t[e]=Br(t[e]);return t}const Ot=Er?t=>t:Si,Ir=typeof Uint8Array.from([]).toHex==\"function\"&&typeof Uint8Array.fromHex==\"function\",Ni=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,\"0\"));function ce(t){if(at(t),Ir)return t.toHex();let e=\"\";for(let n=0;n<t.length;n++)e+=Ni[t[n]];return e}const xt={_0:48,_9:57,A:65,F:70,a:97,f:102};function Ar(t){if(t>=xt._0&&t<=xt._9)return t-xt._0;if(t>=xt.A&&t<=xt.F)return t-(xt.A-10);if(t>=xt.a&&t<=xt.f)return t-(xt.a-10)}function fn(t){if(typeof t!=\"string\")throw new Error(\"hex string expected, got \"+typeof t);if(Ir)return Uint8Array.fromHex(t);const e=t.length,n=e/2;if(e%2)throw new Error(\"hex string expected, got unpadded hex of length \"+e);const r=new Uint8Array(n);for(let o=0,s=0;o<n;o++,s+=2){const i=Ar(t.charCodeAt(s)),f=Ar(t.charCodeAt(s+1));if(i===void 0||f===void 0){const c=t[s]+t[s+1];throw new Error('hex string expected, got non-hex character \"'+c+'\" at index '+s)}r[o]=i*16+f}return r}function Oi(t){if(typeof t!=\"string\")throw new Error(\"string expected\");return new Uint8Array(new TextEncoder().encode(t))}function ht(t){return typeof t==\"string\"&&(t=Oi(t)),at(t),t}function Ht(...t){let e=0;for(let r=0;r<t.length;r++){const o=t[r];at(o),e+=o.length}const n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){const s=t[r];n.set(s,o),o+=s.length}return n}class Ie{}function ae(t){const e=r=>t().update(ht(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function Ui(t){const e=(r,o)=>t(o).update(ht(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function Zt(t=32){if(Gt&&typeof Gt.getRandomValues==\"function\")return Gt.getRandomValues(new Uint8Array(t));if(Gt&&typeof Gt.randomBytes==\"function\")return Uint8Array.from(Gt.randomBytes(t));throw new Error(\"crypto.getRandomValues must be defined\")}const _i=BigInt(0),ue=BigInt(1),Ti=BigInt(2),Ri=BigInt(7),$i=BigInt(256),Ci=BigInt(113),Sr=[],Nr=[],Or=[];for(let t=0,e=ue,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],Sr.push(2*(5*r+n)),Nr.push((t+1)*(t+2)/2%64);let o=_i;for(let s=0;s<7;s++)e=(e<<ue^(e>>Ri)*Ci)%$i,e&Ti&&(o^=ue<<(ue<<BigInt(s))-ue);Or.push(o)}const Ur=wr(Or,!0),Li=Ur[0],ji=Ur[1],_r=(t,e,n)=>n>32?xi(t,e,n):mi(t,e,n),Tr=(t,e,n)=>n>32?vi(t,e,n):wi(t,e,n);function ki(t,e=24){const n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let i=0;i<10;i++)n[i]=t[i]^t[i+10]^t[i+20]^t[i+30]^t[i+40];for(let i=0;i<10;i+=2){const f=(i+8)%10,c=(i+2)%10,u=n[c],a=n[c+1],l=_r(u,a,1)^n[f],h=Tr(u,a,1)^n[f+1];for(let g=0;g<50;g+=10)t[i+g]^=l,t[i+g+1]^=h}let o=t[2],s=t[3];for(let i=0;i<24;i++){const f=Nr[i],c=_r(o,s,f),u=Tr(o,s,f),a=Sr[i];o=t[a],s=t[a+1],t[a]=c,t[a+1]=u}for(let i=0;i<50;i+=10){for(let f=0;f<10;f++)n[f]=t[i+f];for(let f=0;f<10;f++)t[i+f]^=~n[(f+2)%10]&n[(f+4)%10]}t[0]^=Li[r],t[1]^=ji[r]}ut(n)}class qn extends Ie{constructor(e,n,r,o=!1,s=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=o,this.rounds=s,mt(r),!(0<e&&e<200))throw new Error(\"only keccak-f1600 function is supported\");this.state=new Uint8Array(200),this.state32=fe(this.state)}clone(){return this._cloneInto()}keccak(){Ot(this.state32),ki(this.state32,this.rounds),Ot(this.state32),this.posOut=0,this.pos=0}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,state:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(n-this.pos,o-s);for(let f=0;f<i;f++)r[this.pos++]^=e[s++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:r,blockLen:o}=this;e[r]^=n,(n&128)!==0&&r===o-1&&this.keccak(),e[o-1]^=128,this.keccak()}writeInto(e){Nt(this,!1),at(e),this.finish();const n=this.state,{blockLen:r}=this;for(let o=0,s=e.length;o<s;){this.posOut>=r&&this.keccak();const i=Math.min(r-this.posOut,s-o);e.set(n.subarray(this.posOut,this.posOut+i),o),this.posOut+=i,o+=i}return e}xofInto(e){if(!this.enableXOF)throw new Error(\"XOF is not possible for this instance\");return this.writeInto(e)}xof(e){return mt(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(on(e,this),this.finished)throw new Error(\"digest() was already called\");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,ut(this.state)}_cloneInto(e){const{blockLen:n,suffix:r,outputLen:o,rounds:s,enableXOF:i}=this;return e||(e=new qn(n,r,o,i,s)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=s,e.suffix=r,e.outputLen=o,e.enableXOF=i,e.destroyed=this.destroyed,e}}const Pi=(t,e,n)=>ae(()=>new qn(e,t,n)),Hi=Pi(1,136,256/8);function Di(t,e,n,r){if(typeof t.setBigUint64==\"function\")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),c=r?4:0,u=r?0:4;t.setUint32(e+c,i,r),t.setUint32(e+u,f,r)}function Mi(t,e,n){return t&e^~t&n}function Vi(t,e,n){return t&e^t&n^e&n}class Rr extends Ie{constructor(e,n,r,o){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=o,this.buffer=new Uint8Array(e),this.view=sn(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{view:n,buffer:r,blockLen:o}=this,s=e.length;for(let i=0;i<s;){const f=Math.min(o-this.pos,s-i);if(f===o){const c=sn(e);for(;o<=s-i;i+=o)this.process(c,i);continue}r.set(e.subarray(i,i+f),this.pos),this.pos+=f,i+=f,this.pos===o&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Nt(this),on(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:o,isLE:s}=this;let{pos:i}=this;n[i++]=128,ut(this.buffer.subarray(i)),this.padOffset>o-i&&(this.process(r,0),i=0);for(let l=i;l<o;l++)n[l]=0;Di(r,o-8,BigInt(this.length*8),s),this.process(r,0);const f=sn(e),c=this.outputLen;if(c%4)throw new Error(\"_sha2: outputLen should be aligned to 32bit\");const u=c/4,a=this.get();if(u>a.length)throw new Error(\"_sha2: outputLen bigger than state\");for(let l=0;l<u;l++)f.setUint32(4*l,a[l],s)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:o,finished:s,destroyed:i,pos:f}=this;return e.destroyed=i,e.finished=s,e.length=o,e.pos=f,o%n&&e.buffer.set(r),e}clone(){return this._cloneInto()}}const Ut=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),W=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]),Y=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),qi=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),_t=new Uint32Array(64);class Ki extends Rr{constructor(e=32){super(64,e,8,!1),this.A=Ut[0]|0,this.B=Ut[1]|0,this.C=Ut[2]|0,this.D=Ut[3]|0,this.E=Ut[4]|0,this.F=Ut[5]|0,this.G=Ut[6]|0,this.H=Ut[7]|0}get(){const{A:e,B:n,C:r,D:o,E:s,F:i,G:f,H:c}=this;return[e,n,r,o,s,i,f,c]}set(e,n,r,o,s,i,f,c){this.A=e|0,this.B=n|0,this.C=r|0,this.D=o|0,this.E=s|0,this.F=i|0,this.G=f|0,this.H=c|0}process(e,n){for(let l=0;l<16;l++,n+=4)_t[l]=e.getUint32(n,!1);for(let l=16;l<64;l++){const h=_t[l-15],g=_t[l-2],m=gt(h,7)^gt(h,18)^h>>>3,b=gt(g,17)^gt(g,19)^g>>>10;_t[l]=b+_t[l-7]+m+_t[l-16]|0}let{A:r,B:o,C:s,D:i,E:f,F:c,G:u,H:a}=this;for(let l=0;l<64;l++){const h=gt(f,6)^gt(f,11)^gt(f,25),g=a+h+Mi(f,c,u)+qi[l]+_t[l]|0,b=(gt(r,2)^gt(r,13)^gt(r,22))+Vi(r,o,s)|0;a=u,u=c,c=f,f=i+g|0,i=s,s=o,o=r,r=g+b|0}r=r+this.A|0,o=o+this.B|0,s=s+this.C|0,i=i+this.D|0,f=f+this.E|0,c=c+this.F|0,u=u+this.G|0,a=a+this.H|0,this.set(r,o,s,i,f,c,u,a)}roundClean(){ut(_t)}destroy(){this.set(0,0,0,0,0,0,0,0),ut(this.buffer)}}const $r=wr([\"0x428a2f98d728ae22\",\"0x7137449123ef65cd\",\"0xb5c0fbcfec4d3b2f\",\"0xe9b5dba58189dbbc\",\"0x3956c25bf348b538\",\"0x59f111f1b605d019\",\"0x923f82a4af194f9b\",\"0xab1c5ed5da6d8118\",\"0xd807aa98a3030242\",\"0x12835b0145706fbe\",\"0x243185be4ee4b28c\",\"0x550c7dc3d5ffb4e2\",\"0x72be5d74f27b896f\",\"0x80deb1fe3b1696b1\",\"0x9bdc06a725c71235\",\"0xc19bf174cf692694\",\"0xe49b69c19ef14ad2\",\"0xefbe4786384f25e3\",\"0x0fc19dc68b8cd5b5\",\"0x240ca1cc77ac9c65\",\"0x2de92c6f592b0275\",\"0x4a7484aa6ea6e483\",\"0x5cb0a9dcbd41fbd4\",\"0x76f988da831153b5\",\"0x983e5152ee66dfab\",\"0xa831c66d2db43210\",\"0xb00327c898fb213f\",\"0xbf597fc7beef0ee4\",\"0xc6e00bf33da88fc2\",\"0xd5a79147930aa725\",\"0x06ca6351e003826f\",\"0x142929670a0e6e70\",\"0x27b70a8546d22ffc\",\"0x2e1b21385c26c926\",\"0x4d2c6dfc5ac42aed\",\"0x53380d139d95b3df\",\"0x650a73548baf63de\",\"0x766a0abb3c77b2a8\",\"0x81c2c92e47edaee6\",\"0x92722c851482353b\",\"0xa2bfe8a14cf10364\",\"0xa81a664bbc423001\",\"0xc24b8b70d0f89791\",\"0xc76c51a30654be30\",\"0xd192e819d6ef5218\",\"0xd69906245565a910\",\"0xf40e35855771202a\",\"0x106aa07032bbd1b8\",\"0x19a4c116b8d2d0c8\",\"0x1e376c085141ab53\",\"0x2748774cdf8eeb99\",\"0x34b0bcb5e19b48a8\",\"0x391c0cb3c5c95a63\",\"0x4ed8aa4ae3418acb\",\"0x5b9cca4f7763e373\",\"0x682e6ff3d6b2b8a3\",\"0x748f82ee5defb2fc\",\"0x78a5636f43172f60\",\"0x84c87814a1f0ab72\",\"0x8cc702081a6439ec\",\"0x90befffa23631e28\",\"0xa4506cebde82bde9\",\"0xbef9a3f7b2c67915\",\"0xc67178f2e372532b\",\"0xca273eceea26619c\",\"0xd186b8c721c0c207\",\"0xeada7dd6cde0eb1e\",\"0xf57d4f7fee6ed178\",\"0x06f067aa72176fba\",\"0x0a637dc5a2c898a6\",\"0x113f9804bef90dae\",\"0x1b710b35131c471b\",\"0x28db77f523047d84\",\"0x32caab7b40c72493\",\"0x3c9ebe0a15c9bebc\",\"0x431d67c49c100d4c\",\"0x4cc5d4becb3e42b6\",\"0x597f299cfc657e2a\",\"0x5fcb6fab3ad6faec\",\"0x6c44198c4a475817\"].map(t=>BigInt(t))),Fi=$r[0],zi=$r[1],Tt=new Uint32Array(80),Rt=new Uint32Array(80);class cn extends Rr{constructor(e=64){super(128,e,16,!1),this.Ah=Y[0]|0,this.Al=Y[1]|0,this.Bh=Y[2]|0,this.Bl=Y[3]|0,this.Ch=Y[4]|0,this.Cl=Y[5]|0,this.Dh=Y[6]|0,this.Dl=Y[7]|0,this.Eh=Y[8]|0,this.El=Y[9]|0,this.Fh=Y[10]|0,this.Fl=Y[11]|0,this.Gh=Y[12]|0,this.Gl=Y[13]|0,this.Hh=Y[14]|0,this.Hl=Y[15]|0}get(){const{Ah:e,Al:n,Bh:r,Bl:o,Ch:s,Cl:i,Dh:f,Dl:c,Eh:u,El:a,Fh:l,Fl:h,Gh:g,Gl:m,Hh:b,Hl:v}=this;return[e,n,r,o,s,i,f,c,u,a,l,h,g,m,b,v]}set(e,n,r,o,s,i,f,c,u,a,l,h,g,m,b,v){this.Ah=e|0,this.Al=n|0,this.Bh=r|0,this.Bl=o|0,this.Ch=s|0,this.Cl=i|0,this.Dh=f|0,this.Dl=c|0,this.Eh=u|0,this.El=a|0,this.Fh=l|0,this.Fl=h|0,this.Gh=g|0,this.Gl=m|0,this.Hh=b|0,this.Hl=v|0}process(e,n){for(let C=0;C<16;C++,n+=4)Tt[C]=e.getUint32(n),Rt[C]=e.getUint32(n+=4);for(let C=16;C<80;C++){const H=Tt[C-15]|0,_=Rt[C-15]|0,k=At(H,_,1)^At(H,_,8)^xr(H,_,7),P=St(H,_,1)^St(H,_,8)^vr(H,_,7),R=Tt[C-2]|0,d=Rt[C-2]|0,w=At(R,d,19)^se(R,d,61)^xr(R,d,6),p=St(R,d,19)^ie(R,d,61)^vr(R,d,6),y=Ei(P,p,Rt[C-7],Rt[C-16]),x=Bi(y,k,w,Tt[C-7],Tt[C-16]);Tt[C]=x|0,Rt[C]=y|0}let{Ah:r,Al:o,Bh:s,Bl:i,Ch:f,Cl:c,Dh:u,Dl:a,Eh:l,El:h,Fh:g,Fl:m,Gh:b,Gl:v,Hh:L,Hl:V}=this;for(let C=0;C<80;C++){const H=At(l,h,14)^At(l,h,18)^se(l,h,41),_=St(l,h,14)^St(l,h,18)^ie(l,h,41),k=l&g^~l&b,P=h&m^~h&v,R=Ii(V,_,P,zi[C],Rt[C]),d=Ai(R,L,H,k,Fi[C],Tt[C]),w=R|0,p=At(r,o,28)^se(r,o,34)^se(r,o,39),y=St(r,o,28)^ie(r,o,34)^ie(r,o,39),x=r&s^r&f^s&f,B=o&i^o&c^i&c;L=b|0,V=v|0,b=g|0,v=m|0,g=l|0,m=h|0,{h:l,l:h}=dt(u|0,a|0,d|0,w|0),u=f|0,a=c|0,f=s|0,c=i|0,s=r|0,i=o|0;const E=tn(w,y,B);r=en(E,d,p,x),o=E|0}({h:r,l:o}=dt(this.Ah|0,this.Al|0,r|0,o|0)),{h:s,l:i}=dt(this.Bh|0,this.Bl|0,s|0,i|0),{h:f,l:c}=dt(this.Ch|0,this.Cl|0,f|0,c|0),{h:u,l:a}=dt(this.Dh|0,this.Dl|0,u|0,a|0),{h:l,l:h}=dt(this.Eh|0,this.El|0,l|0,h|0),{h:g,l:m}=dt(this.Fh|0,this.Fl|0,g|0,m|0),{h:b,l:v}=dt(this.Gh|0,this.Gl|0,b|0,v|0),{h:L,l:V}=dt(this.Hh|0,this.Hl|0,L|0,V|0),this.set(r,o,s,i,f,c,u,a,l,h,g,m,b,v,L,V)}roundClean(){ut(Tt,Rt)}destroy(){ut(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class Gi extends cn{constructor(){super(48),this.Ah=W[0]|0,this.Al=W[1]|0,this.Bh=W[2]|0,this.Bl=W[3]|0,this.Ch=W[4]|0,this.Cl=W[5]|0,this.Dh=W[6]|0,this.Dl=W[7]|0,this.Eh=W[8]|0,this.El=W[9]|0,this.Fh=W[10]|0,this.Fl=W[11]|0,this.Gh=W[12]|0,this.Gl=W[13]|0,this.Hh=W[14]|0,this.Hl=W[15]|0}}const X=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class Zi extends cn{constructor(){super(32),this.Ah=X[0]|0,this.Al=X[1]|0,this.Bh=X[2]|0,this.Bl=X[3]|0,this.Ch=X[4]|0,this.Cl=X[5]|0,this.Dh=X[6]|0,this.Dl=X[7]|0,this.Eh=X[8]|0,this.El=X[9]|0,this.Fh=X[10]|0,this.Fl=X[11]|0,this.Gh=X[12]|0,this.Gl=X[13]|0,this.Hh=X[14]|0,this.Hl=X[15]|0}}const Ae=ae(()=>new Ki),Wi=ae(()=>new cn),Yi=ae(()=>new Gi),Xi=ae(()=>new Zi),Ji=Uint8Array.from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]),F=Uint32Array.from([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),N=new Uint32Array(32);function $t(t,e,n,r,o,s){const i=o[s],f=o[s+1];let c=N[2*t],u=N[2*t+1],a=N[2*e],l=N[2*e+1],h=N[2*n],g=N[2*n+1],m=N[2*r],b=N[2*r+1],v=tn(c,a,i);u=en(v,u,l,f),c=v|0,{Dh:b,Dl:m}={Dh:b^u,Dl:m^c},{Dh:b,Dl:m}={Dh:bi(b,m),Dl:yi(b)},{h:g,l:h}=dt(g,h,b,m),{Bh:l,Bl:a}={Bh:l^g,Bl:a^h},{Bh:l,Bl:a}={Bh:At(l,a,24),Bl:St(l,a,24)},N[2*t]=c,N[2*t+1]=u,N[2*e]=a,N[2*e+1]=l,N[2*n]=h,N[2*n+1]=g,N[2*r]=m,N[2*r+1]=b}function Ct(t,e,n,r,o,s){const i=o[s],f=o[s+1];let c=N[2*t],u=N[2*t+1],a=N[2*e],l=N[2*e+1],h=N[2*n],g=N[2*n+1],m=N[2*r],b=N[2*r+1],v=tn(c,a,i);u=en(v,u,l,f),c=v|0,{Dh:b,Dl:m}={Dh:b^u,Dl:m^c},{Dh:b,Dl:m}={Dh:At(b,m,16),Dl:St(b,m,16)},{h:g,l:h}=dt(g,h,b,m),{Bh:l,Bl:a}={Bh:l^g,Bl:a^h},{Bh:l,Bl:a}={Bh:se(l,a,63),Bl:ie(l,a,63)},N[2*t]=c,N[2*t+1]=u,N[2*e]=a,N[2*e+1]=l,N[2*n]=h,N[2*n+1]=g,N[2*r]=m,N[2*r+1]=b}function Qi(t,e={},n,r,o){if(mt(n),t<0||t>n)throw new Error(\"outputLen bigger than keyLen\");const{key:s,salt:i,personalization:f}=e;if(s!==void 0&&(s.length<1||s.length>n))throw new Error(\"key length must be undefined or 1..\"+n);if(i!==void 0&&i.length!==r)throw new Error(\"salt must be undefined or \"+r);if(f!==void 0&&f.length!==o)throw new Error(\"personalization must be undefined or \"+o)}class tf extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,this.length=0,this.pos=0,mt(e),mt(n),this.blockLen=e,this.outputLen=n,this.buffer=new Uint8Array(e),this.buffer32=fe(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,buffer:r,buffer32:o}=this,s=e.length,i=e.byteOffset,f=e.buffer;for(let c=0;c<s;){this.pos===n&&(Ot(o),this.compress(o,0,!1),Ot(o),this.pos=0);const u=Math.min(n-this.pos,s-c),a=i+c;if(u===n&&!(a%4)&&c+u<s){const l=new Uint32Array(f,a,Math.floor((s-c)/4));Ot(l);for(let h=0;c+n<s;h+=o.length,c+=n)this.length+=n,this.compress(l,h,!1);Ot(l);continue}r.set(e.subarray(c,c+u),this.pos),this.pos+=u,this.length+=u,c+=u}return this}digestInto(e){Nt(this),on(e,this);const{pos:n,buffer32:r}=this;this.finished=!0,ut(this.buffer.subarray(n)),Ot(r),this.compress(r,0,!0),Ot(r);const o=fe(e);this.get().forEach((s,i)=>o[i]=wt(s))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){const{buffer:n,length:r,finished:o,destroyed:s,outputLen:i,pos:f}=this;return e||(e=new this.constructor({dkLen:i})),e.set(...this.get()),e.buffer.set(n),e.destroyed=s,e.finished=o,e.length=r,e.pos=f,e.outputLen=i,e}clone(){return this._cloneInto()}}class ef extends tf{constructor(e={}){const n=e.dkLen===void 0?64:e.dkLen;super(128,n),this.v0l=F[0]|0,this.v0h=F[1]|0,this.v1l=F[2]|0,this.v1h=F[3]|0,this.v2l=F[4]|0,this.v2h=F[5]|0,this.v3l=F[6]|0,this.v3h=F[7]|0,this.v4l=F[8]|0,this.v4h=F[9]|0,this.v5l=F[10]|0,this.v5h=F[11]|0,this.v6l=F[12]|0,this.v6h=F[13]|0,this.v7l=F[14]|0,this.v7h=F[15]|0,Qi(n,e,64,16,16);let{key:r,personalization:o,salt:s}=e,i=0;if(r!==void 0&&(r=ht(r),i=r.length),this.v0l^=this.outputLen|i<<8|65536|1<<24,s!==void 0){s=ht(s);const f=fe(s);this.v4l^=wt(f[0]),this.v4h^=wt(f[1]),this.v5l^=wt(f[2]),this.v5h^=wt(f[3])}if(o!==void 0){o=ht(o);const f=fe(o);this.v6l^=wt(f[0]),this.v6h^=wt(f[1]),this.v7l^=wt(f[2]),this.v7h^=wt(f[3])}if(r!==void 0){const f=new Uint8Array(this.blockLen);f.set(r),this.update(f)}}get(){let{v0l:e,v0h:n,v1l:r,v1h:o,v2l:s,v2h:i,v3l:f,v3h:c,v4l:u,v4h:a,v5l:l,v5h:h,v6l:g,v6h:m,v7l:b,v7h:v}=this;return[e,n,r,o,s,i,f,c,u,a,l,h,g,m,b,v]}set(e,n,r,o,s,i,f,c,u,a,l,h,g,m,b,v){this.v0l=e|0,this.v0h=n|0,this.v1l=r|0,this.v1h=o|0,this.v2l=s|0,this.v2h=i|0,this.v3l=f|0,this.v3h=c|0,this.v4l=u|0,this.v4h=a|0,this.v5l=l|0,this.v5h=h|0,this.v6l=g|0,this.v6h=m|0,this.v7l=b|0,this.v7h=v|0}compress(e,n,r){this.get().forEach((c,u)=>N[u]=c),N.set(F,16);let{h:o,l:s}=mr(BigInt(this.length));N[24]=F[8]^s,N[25]=F[9]^o,r&&(N[28]=~N[28],N[29]=~N[29]);let i=0;const f=Ji;for(let c=0;c<12;c++)$t(0,4,8,12,e,n+2*f[i++]),Ct(0,4,8,12,e,n+2*f[i++]),$t(1,5,9,13,e,n+2*f[i++]),Ct(1,5,9,13,e,n+2*f[i++]),$t(2,6,10,14,e,n+2*f[i++]),Ct(2,6,10,14,e,n+2*f[i++]),$t(3,7,11,15,e,n+2*f[i++]),Ct(3,7,11,15,e,n+2*f[i++]),$t(0,5,10,15,e,n+2*f[i++]),Ct(0,5,10,15,e,n+2*f[i++]),$t(1,6,11,12,e,n+2*f[i++]),Ct(1,6,11,12,e,n+2*f[i++]),$t(2,7,8,13,e,n+2*f[i++]),Ct(2,7,8,13,e,n+2*f[i++]),$t(3,4,9,14,e,n+2*f[i++]),Ct(3,4,9,14,e,n+2*f[i++]);this.v0l^=N[0]^N[16],this.v0h^=N[1]^N[17],this.v1l^=N[2]^N[18],this.v1h^=N[3]^N[19],this.v2l^=N[4]^N[20],this.v2h^=N[5]^N[21],this.v3l^=N[6]^N[22],this.v3h^=N[7]^N[23],this.v4l^=N[8]^N[24],this.v4h^=N[9]^N[25],this.v5l^=N[10]^N[26],this.v5h^=N[11]^N[27],this.v6l^=N[12]^N[28],this.v6h^=N[13]^N[29],this.v7l^=N[14]^N[30],this.v7h^=N[15]^N[31],ut(N)}destroy(){this.destroyed=!0,ut(this.buffer32),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const nf=Ui(t=>new ef(t)),rf=\"https://rpc.walletconnect.org/v1\";function an(t){const e=`\u0019Ethereum Signed Message:\n${t.length}`,n=new TextEncoder().encode(e+t);return\"0x\"+Buffer.from(Hi(n)).toString(\"hex\")}async function Cr(t,e,n,r,o,s){switch(n.t){case\"eip191\":return await Lr(t,e,n.s);case\"eip1271\":return await jr(t,e,n.s,r,o,s);default:throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${n.t}`)}}async function Lr(t,e,n){return(await (0,viem__WEBPACK_IMPORTED_MODULE_9__.recoverAddress)({hash:an(e),signature:n})).toLowerCase()===t.toLowerCase()}async function jr(t,e,n,r,o,s){const i=Fe(r);if(!i.namespace||!i.reference)throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${r}`);try{const f=\"0x1626ba7e\",c=\"0000000000000000000000000000000000000000000000000000000000000040\",u=n.substring(2),a=(u.length/2).toString(16).padStart(64,\"0\"),l=(e.startsWith(\"0x\")?e:an(e)).substring(2),h=f+l+c+a+u,g=await fetch(`${s||rf}/?chainId=${r}&projectId=${o}`,{headers:{\"Content-Type\":\"application/json\"},method:\"POST\",body:JSON.stringify({id:of(),jsonrpc:\"2.0\",method:\"eth_call\",params:[{to:t,data:h},\"latest\"]})}),{result:m}=await g.json();return m?m.slice(0,f.length).toLowerCase()===f.toLowerCase():!1}catch(f){return console.error(\"isValidEip1271Signature: \",f),!1}}function of(){return Date.now()+Math.floor(Math.random()*1e3)}function sf(t){const e=atob(t),n=new Uint8Array(e.length);for(let i=0;i<e.length;i++)n[i]=e.charCodeAt(i);const r=n[0];if(r===0)throw new Error(\"No signatures found\");const o=1+r*64;if(n.length<o)throw new Error(\"Transaction data too short for claimed signature count\");if(n.length<100)throw new Error(\"Transaction too short\");const s=Buffer.from(t,\"base64\").slice(1,65);return bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].encode(s)}function ff(t){const e=new Uint8Array(Buffer.from(t,\"base64\")),n=Array.from(\"TransactionData::\").map(s=>s.charCodeAt(0)),r=new Uint8Array(n.length+e.length);r.set(n),r.set(e,n.length);const o=nf(r,{dkLen:32});return bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].encode(o)}function cf(t){const e=new Uint8Array(Ae(kr(t)));return bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].encode(e)}function kr(t){if(t instanceof Uint8Array)return t;if(Array.isArray(t))return new Uint8Array(t);if(typeof t==\"object\"&&t!=null&&t.data)return new Uint8Array(Object.values(t.data));if(typeof t==\"object\"&&t)return new Uint8Array(Object.values(t));throw new Error(\"getNearUint8ArrayFromBytes: Unexpected result type from bytes array\")}function af(t){const e=Buffer.from(t,\"base64\"),n=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_10__.decode)(e).txn;if(!n)throw new Error(\"Invalid signed transaction: missing 'txn' field\");const r=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_11__.encode)(n),o=Buffer.from(\"TX\"),s=Buffer.concat([o,Buffer.from(r)]),i=Xi(s);return _scure_base__WEBPACK_IMPORTED_MODULE_12__.base32.encode(i).replace(/=+$/,\"\")}function un(t){const e=[];let n=BigInt(t);for(;n>=BigInt(128);)e.push(Number(n&BigInt(127)|BigInt(128))),n>>=BigInt(7);return e.push(Number(n)),Buffer.from(e)}function uf(t){const e=Buffer.from(t.signed.bodyBytes,\"base64\"),n=Buffer.from(t.signed.authInfoBytes,\"base64\"),r=Buffer.from(t.signature.signature,\"base64\"),o=[];o.push(Buffer.from([10])),o.push(un(e.length)),o.push(e),o.push(Buffer.from([18])),o.push(un(n.length)),o.push(n),o.push(Buffer.from([26])),o.push(un(r.length)),o.push(r);const s=Buffer.concat(o),i=Ae(s);return Buffer.from(i).toString(\"hex\").toUpperCase()}var lf=Object.defineProperty,df=Object.defineProperties,hf=Object.getOwnPropertyDescriptors,Pr=Object.getOwnPropertySymbols,pf=Object.prototype.hasOwnProperty,gf=Object.prototype.propertyIsEnumerable,Hr=(t,e,n)=>e in t?lf(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,ln=(t,e)=>{for(var n in e||(e={}))pf.call(e,n)&&Hr(t,n,e[n]);if(Pr)for(var n of Pr(e))gf.call(e,n)&&Hr(t,n,e[n]);return t},Dr=(t,e)=>df(t,hf(e));const bf=\"did:pkh:\",Se=t=>t?.split(\":\"),Mr=t=>{const e=t&&Se(t);if(e)return t.includes(bf)?e[3]:e[1]},Vr=t=>{const e=t&&Se(t);if(e)return e[2]+\":\"+e[3]},dn=t=>{const e=t&&Se(t);if(e)return e.pop()};async function yf(t){const{cacao:e,projectId:n}=t,{s:r,p:o}=e,s=qr(o,o.iss),i=dn(o.iss);return await Cr(i,s,r,Vr(o.iss),n)}const qr=(t,e)=>{const n=`${t.domain} wants you to sign in with your Ethereum account:`,r=dn(e);if(!t.aud&&!t.uri)throw new Error(\"Either `aud` or `uri` is required to construct the message\");let o=t.statement||void 0;const s=`URI: ${t.aud||t.uri}`,i=`Version: ${t.version}`,f=`Chain ID: ${Mr(e)}`,c=`Nonce: ${t.nonce}`,u=`Issued At: ${t.iat}`,a=t.exp?`Expiration Time: ${t.exp}`:void 0,l=t.nbf?`Not Before: ${t.nbf}`:void 0,h=t.requestId?`Request ID: ${t.requestId}`:void 0,g=t.resources?`Resources:${t.resources.map(b=>`\n- ${b}`).join(\"\")}`:void 0,m=Oe(t.resources);if(m){const b=Lt(m);o=gn(o,b)}return[n,r,\"\",o,\"\",s,i,f,c,u,a,l,h,g].filter(b=>b!=null).join(`\n`)};function mf(t,e,n){return n.includes(\"did:pkh:\")||(n=`did:pkh:${n}`),{h:{t:\"caip122\"},p:{iss:n,domain:t.domain,aud:t.aud,version:t.version,nonce:t.nonce,iat:t.iat,statement:t.statement,requestId:t.requestId,resources:t.resources,nbf:t.nbf,exp:t.exp},s:e}}function wf(t){var e;const{authPayload:n,chains:r,methods:o}=t,s=n.statement||\"\";if(!(r!=null&&r.length))return n;const i=n.chains,f=Je(i,r);if(!(f!=null&&f.length))throw new Error(\"No supported chains\");const c=Kr(n.resources);if(!c)return n;bt(c);const u=Fr(c,\"eip155\");let a=n?.resources||[];if(u!=null&&u.length){const l=zr(u),h=Je(l,o);if(!(h!=null&&h.length))throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(l)}, supported: ${JSON.stringify(o)}`);const g=hn(\"request\",h,{chains:f}),m=Yr(c,\"eip155\",g);a=((e=n?.resources)==null?void 0:e.slice(0,-1))||[],a.push(Ne(m))}return Dr(ln({},n),{statement:Jr(s,Oe(a)),chains:f,resources:n!=null&&n.resources||a.length>0?a:void 0})}function Kr(t){const e=Oe(t);if(e&&pn(e))return Lt(e)}function xf(t,e){var n;return(n=t?.att)==null?void 0:n.hasOwnProperty(e)}function Fr(t,e){var n,r;return(n=t?.att)!=null&&n[e]?Object.keys((r=t?.att)==null?void 0:r[e]):[]}function vf(t){return t?.map(e=>Object.keys(e))||[]}function zr(t){return t?.map(e=>{var n;return(n=e.split(\"/\"))==null?void 0:n[1]})||[]}function Gr(t){return Buffer.from(JSON.stringify(t)).toString(\"base64\")}function Zr(t){return JSON.parse(Buffer.from(t,\"base64\").toString(\"utf-8\"))}function bt(t){if(!t)throw new Error(\"No recap provided, value is undefined\");if(!t.att)throw new Error(\"No `att` property found\");const e=Object.keys(t.att);if(!(e!=null&&e.length))throw new Error(\"No resources found in `att` property\");e.forEach(n=>{const r=t.att[n];if(Array.isArray(r))throw new Error(`Resource must be an object: ${n}`);if(typeof r!=\"object\")throw new Error(`Resource must be an object: ${n}`);if(!Object.keys(r).length)throw new Error(`Resource object is empty: ${n}`);Object.keys(r).forEach(o=>{const s=r[o];if(!Array.isArray(s))throw new Error(`Ability limits ${o} must be an array of objects, found: ${s}`);if(!s.length)throw new Error(`Value of ${o} is empty array, must be an array with objects`);s.forEach(i=>{if(typeof i!=\"object\")throw new Error(`Ability limits (${o}) must be an array of objects, found: ${i}`)})})})}function Wr(t,e,n,r={}){return n?.sort((o,s)=>o.localeCompare(s)),{att:{[t]:hn(e,n,r)}}}function Yr(t,e,n){var r;t.att[e]=ln({},n);const o=(r=Object.keys(t.att))==null?void 0:r.sort((i,f)=>i.localeCompare(f)),s={att:{}};return o.reduce((i,f)=>(i.att[f]=t.att[f],i),s)}function hn(t,e,n={}){e=e?.sort((o,s)=>o.localeCompare(s));const r=e.map(o=>({[`${t}/${o}`]:[n]}));return Object.assign({},...r)}function Ne(t){return bt(t),`urn:recap:${Gr(t).replace(/=/g,\"\")}`}function Lt(t){const e=Zr(t.replace(\"urn:recap:\",\"\"));return bt(e),e}function Ef(t,e,n){const r=Wr(t,e,n);return Ne(r)}function pn(t){return t&&t.includes(\"urn:recap:\")}function Bf(t,e){const n=Lt(t),r=Lt(e),o=Xr(n,r);return Ne(o)}function Xr(t,e){bt(t),bt(e);const n=Object.keys(t.att).concat(Object.keys(e.att)).sort((o,s)=>o.localeCompare(s)),r={att:{}};return n.forEach(o=>{var s,i;Object.keys(((s=t.att)==null?void 0:s[o])||{}).concat(Object.keys(((i=e.att)==null?void 0:i[o])||{})).sort((f,c)=>f.localeCompare(c)).forEach(f=>{var c,u;r.att[o]=Dr(ln({},r.att[o]),{[f]:((c=t.att[o])==null?void 0:c[f])||((u=e.att[o])==null?void 0:u[f])})})}),r}function gn(t=\"\",e){bt(e);const n=\"I further authorize the stated URI to perform the following actions on my behalf: \";if(t.includes(n))return t;const r=[];let o=0;Object.keys(e.att).forEach(f=>{const c=Object.keys(e.att[f]).map(l=>({ability:l.split(\"/\")[0],action:l.split(\"/\")[1]}));c.sort((l,h)=>l.action.localeCompare(h.action));const u={};c.forEach(l=>{u[l.ability]||(u[l.ability]=[]),u[l.ability].push(l.action)});const a=Object.keys(u).map(l=>(o++,`(${o}) '${l}': '${u[l].join(\"', '\")}' for '${f}'.`));r.push(a.join(\", \").replace(\".,\",\".\"))});const s=r.join(\" \"),i=`${n}${s}`;return`${t?t+\" \":\"\"}${i}`}function If(t){var e;const n=Lt(t);bt(n);const r=(e=n.att)==null?void 0:e.eip155;return r?Object.keys(r).map(o=>o.split(\"/\")[1]):[]}function Af(t){const e=Lt(t);bt(e);const n=[];return Object.values(e.att).forEach(r=>{Object.values(r).forEach(o=>{var s;(s=o?.[0])!=null&&s.chains&&n.push(o[0].chains)})}),[...new Set(n.flat())]}function Jr(t,e){if(!e)return t;const n=Lt(e);return bt(n),gn(t,n)}function Oe(t){if(!t)return;const e=t?.[t.length-1];return pn(e)?e:void 0}/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */function Qr(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name===\"Uint8Array\"}function bn(t){if(typeof t!=\"boolean\")throw new Error(`boolean expected, not ${t}`)}function yn(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(\"positive integer expected, got \"+t)}function nt(t,...e){if(!Qr(t))throw new Error(\"Uint8Array expected\");if(e.length>0&&!e.includes(t.length))throw new Error(\"Uint8Array expected of length \"+e+\", got length=\"+t.length)}function to(t,e=!0){if(t.destroyed)throw new Error(\"Hash instance has been destroyed\");if(e&&t.finished)throw new Error(\"Hash#digest() has already been called\")}function Sf(t,e){nt(t);const n=e.outputLen;if(t.length<n)throw new Error(\"digestInto() expects output buffer of length at least \"+n)}function jt(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function Wt(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function Nf(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}const Of=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Uf(t){if(typeof t!=\"string\")throw new Error(\"string expected\");return new Uint8Array(new TextEncoder().encode(t))}function mn(t){if(typeof t==\"string\")t=Uf(t);else if(Qr(t))t=wn(t);else throw new Error(\"Uint8Array expected, got \"+typeof t);return t}function _f(t,e){if(e==null||typeof e!=\"object\")throw new Error(\"options must be defined\");return Object.assign(t,e)}function Tf(t,e){if(t.length!==e.length)return!1;let n=0;for(let r=0;r<t.length;r++)n|=t[r]^e[r];return n===0}const Rf=(t,e)=>{function n(r,...o){if(nt(r),!Of)throw new Error(\"Non little-endian hardware is not yet supported\");if(t.nonceLength!==void 0){const a=o[0];if(!a)throw new Error(\"nonce / iv required\");t.varSizeNonce?nt(a):nt(a,t.nonceLength)}const s=t.tagLength;s&&o[1]!==void 0&&nt(o[1]);const i=e(r,...o),f=(a,l)=>{if(l!==void 0){if(a!==2)throw new Error(\"cipher output not supported\");nt(l)}};let c=!1;return{encrypt(a,l){if(c)throw new Error(\"cannot encrypt() twice with same key + nonce\");return c=!0,nt(a),f(i.encrypt.length,l),i.encrypt(a,l)},decrypt(a,l){if(nt(a),s&&a.length<s)throw new Error(\"invalid ciphertext length: smaller than tagLength=\"+s);return f(i.decrypt.length,l),i.decrypt(a,l)}}}return Object.assign(n,t),n};function eo(t,e,n=!0){if(e===void 0)return new Uint8Array(t);if(e.length!==t)throw new Error(\"invalid output length, expected \"+t+\", got: \"+e.length);if(n&&!Cf(e))throw new Error(\"invalid output, must be aligned\");return e}function no(t,e,n,r){if(typeof t.setBigUint64==\"function\")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),c=r?4:0,u=r?0:4;t.setUint32(e+c,i,r),t.setUint32(e+u,f,r)}function $f(t,e,n){bn(n);const r=new Uint8Array(16),o=Nf(r);return no(o,0,BigInt(e),n),no(o,8,BigInt(t),n),r}function Cf(t){return t.byteOffset%4===0}function wn(t){return Uint8Array.from(t)}const ro=t=>Uint8Array.from(t.split(\"\").map(e=>e.charCodeAt(0))),Lf=ro(\"expand 16-byte k\"),jf=ro(\"expand 32-byte k\"),kf=jt(Lf),Pf=jt(jf);function M(t,e){return t<<e|t>>>32-e}function xn(t){return t.byteOffset%4===0}const Ue=64,Hf=16,oo=2**32-1,so=new Uint32Array;function Df(t,e,n,r,o,s,i,f){const c=o.length,u=new Uint8Array(Ue),a=jt(u),l=xn(o)&&xn(s),h=l?jt(o):so,g=l?jt(s):so;for(let m=0;m<c;i++){if(t(e,n,r,a,i,f),i>=oo)throw new Error(\"arx: counter overflow\");const b=Math.min(Ue,c-m);if(l&&b===Ue){const v=m/4;if(m%4!==0)throw new Error(\"arx: invalid block position\");for(let L=0,V;L<Hf;L++)V=v+L,g[V]=h[V]^a[L];m+=Ue;continue}for(let v=0,L;v<b;v++)L=m+v,s[L]=o[L]^u[v];m+=b}}function Mf(t,e){const{allowShortKeys:n,extendNonceFn:r,counterLength:o,counterRight:s,rounds:i}=_f({allowShortKeys:!1,counterLength:8,counterRight:!1,rounds:20},e);if(typeof t!=\"function\")throw new Error(\"core must be a function\");return yn(o),yn(i),bn(s),bn(n),(f,c,u,a,l=0)=>{nt(f),nt(c),nt(u);const h=u.length;if(a===void 0&&(a=new Uint8Array(h)),nt(a),yn(l),l<0||l>=oo)throw new Error(\"arx: counter overflow\");if(a.length<h)throw new Error(`arx: output (${a.length}) is shorter than data (${h})`);const g=[];let m=f.length,b,v;if(m===32)g.push(b=wn(f)),v=Pf;else if(m===16&&n)b=new Uint8Array(32),b.set(f),b.set(f,16),v=kf,g.push(b);else throw new Error(`arx: invalid 32-byte key, got length=${m}`);xn(c)||g.push(c=wn(c));const L=jt(b);if(r){if(c.length!==24)throw new Error(\"arx: extended nonce must be 24 bytes\");r(v,L,jt(c.subarray(0,16)),L),c=c.subarray(16)}const V=16-o;if(V!==c.length)throw new Error(`arx: nonce must be ${V} or 16 bytes`);if(V!==12){const H=new Uint8Array(12);H.set(c,s?0:12-c.length),c=H,g.push(c)}const C=jt(c);return Df(t,v,L,C,u,a,l,i),Wt(...g),a}}const G=(t,e)=>t[e++]&255|(t[e++]&255)<<8;class Vf{constructor(e){this.blockLen=16,this.outputLen=16,this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.pos=0,this.finished=!1,e=mn(e),nt(e,32);const n=G(e,0),r=G(e,2),o=G(e,4),s=G(e,6),i=G(e,8),f=G(e,10),c=G(e,12),u=G(e,14);this.r[0]=n&8191,this.r[1]=(n>>>13|r<<3)&8191,this.r[2]=(r>>>10|o<<6)&7939,this.r[3]=(o>>>7|s<<9)&8191,this.r[4]=(s>>>4|i<<12)&255,this.r[5]=i>>>1&8190,this.r[6]=(i>>>14|f<<2)&8191,this.r[7]=(f>>>11|c<<5)&8065,this.r[8]=(c>>>8|u<<8)&8191,this.r[9]=u>>>5&127;for(let a=0;a<8;a++)this.pad[a]=G(e,16+2*a)}process(e,n,r=!1){const o=r?0:2048,{h:s,r:i}=this,f=i[0],c=i[1],u=i[2],a=i[3],l=i[4],h=i[5],g=i[6],m=i[7],b=i[8],v=i[9],L=G(e,n+0),V=G(e,n+2),C=G(e,n+4),H=G(e,n+6),_=G(e,n+8),k=G(e,n+10),P=G(e,n+12),R=G(e,n+14);let d=s[0]+(L&8191),w=s[1]+((L>>>13|V<<3)&8191),p=s[2]+((V>>>10|C<<6)&8191),y=s[3]+((C>>>7|H<<9)&8191),x=s[4]+((H>>>4|_<<12)&8191),B=s[5]+(_>>>1&8191),E=s[6]+((_>>>14|k<<2)&8191),I=s[7]+((k>>>11|P<<5)&8191),S=s[8]+((P>>>8|R<<8)&8191),O=s[9]+(R>>>5|o),A=0,T=A+d*f+w*(5*v)+p*(5*b)+y*(5*m)+x*(5*g);A=T>>>13,T&=8191,T+=B*(5*h)+E*(5*l)+I*(5*a)+S*(5*u)+O*(5*c),A+=T>>>13,T&=8191;let U=A+d*c+w*f+p*(5*v)+y*(5*b)+x*(5*m);A=U>>>13,U&=8191,U+=B*(5*g)+E*(5*h)+I*(5*l)+S*(5*a)+O*(5*u),A+=U>>>13,U&=8191;let $=A+d*u+w*c+p*f+y*(5*v)+x*(5*b);A=$>>>13,$&=8191,$+=B*(5*m)+E*(5*g)+I*(5*h)+S*(5*l)+O*(5*a),A+=$>>>13,$&=8191;let D=A+d*a+w*u+p*c+y*f+x*(5*v);A=D>>>13,D&=8191,D+=B*(5*b)+E*(5*m)+I*(5*g)+S*(5*h)+O*(5*l),A+=D>>>13,D&=8191;let q=A+d*l+w*a+p*u+y*c+x*f;A=q>>>13,q&=8191,q+=B*(5*v)+E*(5*b)+I*(5*m)+S*(5*g)+O*(5*h),A+=q>>>13,q&=8191;let j=A+d*h+w*l+p*a+y*u+x*c;A=j>>>13,j&=8191,j+=B*f+E*(5*v)+I*(5*b)+S*(5*m)+O*(5*g),A+=j>>>13,j&=8191;let K=A+d*g+w*h+p*l+y*a+x*u;A=K>>>13,K&=8191,K+=B*c+E*f+I*(5*v)+S*(5*b)+O*(5*m),A+=K>>>13,K&=8191;let et=A+d*m+w*g+p*h+y*l+x*a;A=et>>>13,et&=8191,et+=B*u+E*c+I*f+S*(5*v)+O*(5*b),A+=et>>>13,et&=8191;let Z=A+d*b+w*m+p*g+y*h+x*l;A=Z>>>13,Z&=8191,Z+=B*a+E*u+I*c+S*f+O*(5*v),A+=Z>>>13,Z&=8191;let z=A+d*v+w*b+p*m+y*g+x*h;A=z>>>13,z&=8191,z+=B*l+E*a+I*u+S*c+O*f,A+=z>>>13,z&=8191,A=(A<<2)+A|0,A=A+T|0,T=A&8191,A=A>>>13,U+=A,s[0]=T,s[1]=U,s[2]=$,s[3]=D,s[4]=q,s[5]=j,s[6]=K,s[7]=et,s[8]=Z,s[9]=z}finalize(){const{h:e,pad:n}=this,r=new Uint16Array(10);let o=e[1]>>>13;e[1]&=8191;for(let f=2;f<10;f++)e[f]+=o,o=e[f]>>>13,e[f]&=8191;e[0]+=o*5,o=e[0]>>>13,e[0]&=8191,e[1]+=o,o=e[1]>>>13,e[1]&=8191,e[2]+=o,r[0]=e[0]+5,o=r[0]>>>13,r[0]&=8191;for(let f=1;f<10;f++)r[f]=e[f]+o,o=r[f]>>>13,r[f]&=8191;r[9]-=8192;let s=(o^1)-1;for(let f=0;f<10;f++)r[f]&=s;s=~s;for(let f=0;f<10;f++)e[f]=e[f]&s|r[f];e[0]=(e[0]|e[1]<<13)&65535,e[1]=(e[1]>>>3|e[2]<<10)&65535,e[2]=(e[2]>>>6|e[3]<<7)&65535,e[3]=(e[3]>>>9|e[4]<<4)&65535,e[4]=(e[4]>>>12|e[5]<<1|e[6]<<14)&65535,e[5]=(e[6]>>>2|e[7]<<11)&65535,e[6]=(e[7]>>>5|e[8]<<8)&65535,e[7]=(e[8]>>>8|e[9]<<5)&65535;let i=e[0]+n[0];e[0]=i&65535;for(let f=1;f<8;f++)i=(e[f]+n[f]|0)+(i>>>16)|0,e[f]=i&65535;Wt(r)}update(e){to(this),e=mn(e),nt(e);const{buffer:n,blockLen:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(r-this.pos,o-s);if(i===r){for(;r<=o-s;s+=r)this.process(e,s);continue}n.set(e.subarray(s,s+i),this.pos),this.pos+=i,s+=i,this.pos===r&&(this.process(n,0,!1),this.pos=0)}return this}destroy(){Wt(this.h,this.r,this.buffer,this.pad)}digestInto(e){to(this),Sf(e,this),this.finished=!0;const{buffer:n,h:r}=this;let{pos:o}=this;if(o){for(n[o++]=1;o<16;o++)n[o]=0;this.process(n,0,!0)}this.finalize();let s=0;for(let i=0;i<8;i++)e[s++]=r[i]>>>0,e[s++]=r[i]>>>8;return e}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}}function qf(t){const e=(r,o)=>t(o).update(mn(r)).digest(),n=t(new Uint8Array(32));return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}const Kf=qf(t=>new Vf(t));function Ff(t,e,n,r,o,s=20){let i=t[0],f=t[1],c=t[2],u=t[3],a=e[0],l=e[1],h=e[2],g=e[3],m=e[4],b=e[5],v=e[6],L=e[7],V=o,C=n[0],H=n[1],_=n[2],k=i,P=f,R=c,d=u,w=a,p=l,y=h,x=g,B=m,E=b,I=v,S=L,O=V,A=C,T=H,U=_;for(let D=0;D<s;D+=2)k=k+w|0,O=M(O^k,16),B=B+O|0,w=M(w^B,12),k=k+w|0,O=M(O^k,8),B=B+O|0,w=M(w^B,7),P=P+p|0,A=M(A^P,16),E=E+A|0,p=M(p^E,12),P=P+p|0,A=M(A^P,8),E=E+A|0,p=M(p^E,7),R=R+y|0,T=M(T^R,16),I=I+T|0,y=M(y^I,12),R=R+y|0,T=M(T^R,8),I=I+T|0,y=M(y^I,7),d=d+x|0,U=M(U^d,16),S=S+U|0,x=M(x^S,12),d=d+x|0,U=M(U^d,8),S=S+U|0,x=M(x^S,7),k=k+p|0,U=M(U^k,16),I=I+U|0,p=M(p^I,12),k=k+p|0,U=M(U^k,8),I=I+U|0,p=M(p^I,7),P=P+y|0,O=M(O^P,16),S=S+O|0,y=M(y^S,12),P=P+y|0,O=M(O^P,8),S=S+O|0,y=M(y^S,7),R=R+x|0,A=M(A^R,16),B=B+A|0,x=M(x^B,12),R=R+x|0,A=M(A^R,8),B=B+A|0,x=M(x^B,7),d=d+w|0,T=M(T^d,16),E=E+T|0,w=M(w^E,12),d=d+w|0,T=M(T^d,8),E=E+T|0,w=M(w^E,7);let $=0;r[$++]=i+k|0,r[$++]=f+P|0,r[$++]=c+R|0,r[$++]=u+d|0,r[$++]=a+w|0,r[$++]=l+p|0,r[$++]=h+y|0,r[$++]=g+x|0,r[$++]=m+B|0,r[$++]=b+E|0,r[$++]=v+I|0,r[$++]=L+S|0,r[$++]=V+O|0,r[$++]=C+A|0,r[$++]=H+T|0,r[$++]=_+U|0}const zf=Mf(Ff,{counterRight:!1,counterLength:4,allowShortKeys:!1}),Gf=new Uint8Array(16),io=(t,e)=>{t.update(e);const n=e.length%16;n&&t.update(Gf.subarray(n))},Zf=new Uint8Array(32);function fo(t,e,n,r,o){const s=t(e,n,Zf),i=Kf.create(s);o&&io(i,o),io(i,r);const f=$f(r.length,o?o.length:0,!0);i.update(f);const c=i.digest();return Wt(s,f),c}const Wf=t=>(e,n,r)=>({encrypt(s,i){const f=s.length;i=eo(f+16,i,!1),i.set(s);const c=i.subarray(0,-16);t(e,n,c,c,1);const u=fo(t,e,n,c,r);return i.set(u,f),Wt(u),i},decrypt(s,i){i=eo(s.length-16,i,!1);const f=s.subarray(0,-16),c=s.subarray(-16),u=fo(t,e,n,f,r);if(!Tf(c,u))throw new Error(\"invalid tag\");return i.set(s.subarray(0,-16)),t(e,n,i,i,1),Wt(u),i}}),co=Rf({blockSize:64,nonceLength:12,tagLength:16},Wf(zf));class ao extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,rn(e);const r=ht(n);if(this.iHash=e.create(),typeof this.iHash.update!=\"function\")throw new Error(\"Expected instance of class which extends utils.Hash\");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const o=this.blockLen,s=new Uint8Array(o);s.set(r.length>o?e.create().update(r).digest():r);for(let i=0;i<s.length;i++)s[i]^=54;this.iHash.update(s),this.oHash=e.create();for(let i=0;i<s.length;i++)s[i]^=106;this.oHash.update(s),ut(s)}update(e){return Nt(this),this.iHash.update(e),this}digestInto(e){Nt(this),at(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:o,destroyed:s,blockLen:i,outputLen:f}=this;return e=e,e.finished=o,e.destroyed=s,e.blockLen=i,e.outputLen=f,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const _e=(t,e,n)=>new ao(t,e).update(n).digest();_e.create=(t,e)=>new ao(t,e);function Yf(t,e,n){return rn(t),n===void 0&&(n=new Uint8Array(t.outputLen)),_e(t,ht(n),ht(e))}const vn=Uint8Array.from([0]),uo=Uint8Array.of();function Xf(t,e,n,r=32){rn(t),mt(r);const o=t.outputLen;if(r>255*o)throw new Error(\"Length should be <= 255*HashLen\");const s=Math.ceil(r/o);n===void 0&&(n=uo);const i=new Uint8Array(s*o),f=_e.create(t,e),c=f._cloneInto(),u=new Uint8Array(f.outputLen);for(let a=0;a<s;a++)vn[0]=a+1,c.update(a===0?uo:u).update(n).update(vn).digestInto(u),i.set(u,o*a),f._cloneInto(c);return f.destroy(),c.destroy(),ut(u,vn),i.slice(0,r)}const Jf=(t,e,n,r,o)=>Xf(t,Yf(t,e,n),r,o),Te=Ae,En=BigInt(0),Bn=BigInt(1);function Re(t,e){if(typeof e!=\"boolean\")throw new Error(t+\" boolean expected, got \"+e)}function $e(t){const e=t.toString(16);return e.length&1?\"0\"+e:e}function lo(t){if(typeof t!=\"string\")throw new Error(\"hex string expected, got \"+typeof t);return t===\"\"?En:BigInt(\"0x\"+t)}function Ce(t){return lo(ce(t))}function Le(t){return at(t),lo(ce(Uint8Array.from(t).reverse()))}function In(t,e){return fn(t.toString(16).padStart(e*2,\"0\"))}function An(t,e){return In(t,e).reverse()}function rt(t,e,n){let r;if(typeof e==\"string\")try{r=fn(e)}catch(s){throw new Error(t+\" must be hex string or Uint8Array, cause: \"+s)}else if(nn(e))r=Uint8Array.from(e);else throw new Error(t+\" must be hex string or Uint8Array\");const o=r.length;if(typeof n==\"number\"&&o!==n)throw new Error(t+\" of length \"+n+\" expected, got \"+o);return r}const Sn=t=>typeof t==\"bigint\"&&En<=t;function Qf(t,e,n){return Sn(t)&&Sn(e)&&Sn(n)&&e<=t&&t<n}function Nn(t,e,n,r){if(!Qf(e,n,r))throw new Error(\"expected valid \"+t+\": \"+n+\" <= n < \"+r+\", got \"+e)}function tc(t){let e;for(e=0;t>En;t>>=Bn,e+=1);return e}const je=t=>(Bn<<BigInt(t))-Bn;function ec(t,e,n){if(typeof t!=\"number\"||t<2)throw new Error(\"hashLen must be a number\");if(typeof e!=\"number\"||e<2)throw new Error(\"qByteLen must be a number\");if(typeof n!=\"function\")throw new Error(\"hmacFn must be a function\");const r=g=>new Uint8Array(g),o=g=>Uint8Array.of(g);let s=r(t),i=r(t),f=0;const c=()=>{s.fill(1),i.fill(0),f=0},u=(...g)=>n(i,s,...g),a=(g=r(0))=>{i=u(o(0),g),s=u(),g.length!==0&&(i=u(o(1),g),s=u())},l=()=>{if(f++>=1e3)throw new Error(\"drbg: tried 1000 values\");let g=0;const m=[];for(;g<e;){s=u();const b=s.slice();m.push(b),g+=s.length}return Ht(...m)};return(g,m)=>{c(),a(g);let b;for(;!(b=m(l()));)a();return c(),b}}function ke(t,e,n={}){if(!t||typeof t!=\"object\")throw new Error(\"expected valid options object\");function r(o,s,i){const f=t[o];if(i&&f===void 0)return;const c=typeof f;if(c!==s||f===null)throw new Error(`param \"${o}\" is invalid: expected ${s}, got ${c}`)}Object.entries(e).forEach(([o,s])=>r(o,s,!1)),Object.entries(n).forEach(([o,s])=>r(o,s,!0))}function ho(t){const e=new WeakMap;return(n,...r)=>{const o=e.get(n);if(o!==void 0)return o;const s=t(n,...r);return e.set(n,s),s}}const ot=BigInt(0),Q=BigInt(1),Dt=BigInt(2),nc=BigInt(3),po=BigInt(4),go=BigInt(5),bo=BigInt(8);function lt(t,e){const n=t%e;return n>=ot?n:e+n}function pt(t,e,n){let r=t;for(;e-- >ot;)r*=r,r%=n;return r}function yo(t,e){if(t===ot)throw new Error(\"invert: expected non-zero number\");if(e<=ot)throw new Error(\"invert: expected positive modulus, got \"+e);let n=lt(t,e),r=e,o=ot,s=Q;for(;n!==ot;){const f=r/n,c=r%n,u=o-s*f;r=n,n=c,o=s,s=u}if(r!==Q)throw new Error(\"invert: does not exist\");return lt(o,e)}function mo(t,e){const n=(t.ORDER+Q)/po,r=t.pow(e,n);if(!t.eql(t.sqr(r),e))throw new Error(\"Cannot find square root\");return r}function rc(t,e){const n=(t.ORDER-go)/bo,r=t.mul(e,Dt),o=t.pow(r,n),s=t.mul(e,o),i=t.mul(t.mul(s,Dt),o),f=t.mul(s,t.sub(i,t.ONE));if(!t.eql(t.sqr(f),e))throw new Error(\"Cannot find square root\");return f}function oc(t){if(t<BigInt(3))throw new Error(\"sqrt is not defined for small field\");let e=t-Q,n=0;for(;e%Dt===ot;)e/=Dt,n++;let r=Dt;const o=Yt(t);for(;xo(o,r)===1;)if(r++>1e3)throw new Error(\"Cannot find square root: probably non-prime P\");if(n===1)return mo;let s=o.pow(r,e);const i=(e+Q)/Dt;return function(c,u){if(c.is0(u))return u;if(xo(c,u)!==1)throw new Error(\"Cannot find square root\");let a=n,l=c.mul(c.ONE,s),h=c.pow(u,e),g=c.pow(u,i);for(;!c.eql(h,c.ONE);){if(c.is0(h))return c.ZERO;let m=1,b=c.sqr(h);for(;!c.eql(b,c.ONE);)if(m++,b=c.sqr(b),m===a)throw new Error(\"Cannot find square root\");const v=Q<<BigInt(a-m-1),L=c.pow(l,v);a=m,l=c.sqr(L),h=c.mul(h,l),g=c.mul(g,L)}return g}}function sc(t){return t%po===nc?mo:t%bo===go?rc:oc(t)}const ic=[\"create\",\"isValid\",\"is0\",\"neg\",\"inv\",\"sqrt\",\"sqr\",\"eql\",\"add\",\"sub\",\"mul\",\"pow\",\"div\",\"addN\",\"subN\",\"mulN\",\"sqrN\"];function fc(t){const e={ORDER:\"bigint\",MASK:\"bigint\",BYTES:\"number\",BITS:\"number\"},n=ic.reduce((r,o)=>(r[o]=\"function\",r),e);return ke(t,n),t}function cc(t,e,n){if(n<ot)throw new Error(\"invalid exponent, negatives unsupported\");if(n===ot)return t.ONE;if(n===Q)return e;let r=t.ONE,o=e;for(;n>ot;)n&Q&&(r=t.mul(r,o)),o=t.sqr(o),n>>=Q;return r}function wo(t,e,n=!1){const r=new Array(e.length).fill(n?t.ZERO:void 0),o=e.reduce((i,f,c)=>t.is0(f)?i:(r[c]=i,t.mul(i,f)),t.ONE),s=t.inv(o);return e.reduceRight((i,f,c)=>t.is0(f)?i:(r[c]=t.mul(i,r[c]),t.mul(i,f)),s),r}function xo(t,e){const n=(t.ORDER-Q)/Dt,r=t.pow(e,n),o=t.eql(r,t.ONE),s=t.eql(r,t.ZERO),i=t.eql(r,t.neg(t.ONE));if(!o&&!s&&!i)throw new Error(\"invalid Legendre symbol result\");return o?1:s?0:-1}function ac(t,e){e!==void 0&&mt(e);const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function Yt(t,e,n=!1,r={}){if(t<=ot)throw new Error(\"invalid field: expected ORDER > 0, got \"+t);let o,s;if(typeof e==\"object\"&&e!=null){if(r.sqrt||n)throw new Error(\"cannot specify opts in two arguments\");const a=e;a.BITS&&(o=a.BITS),a.sqrt&&(s=a.sqrt),typeof a.isLE==\"boolean\"&&(n=a.isLE)}else typeof e==\"number\"&&(o=e),r.sqrt&&(s=r.sqrt);const{nBitLength:i,nByteLength:f}=ac(t,o);if(f>2048)throw new Error(\"invalid field: expected ORDER of <= 2048 bytes\");let c;const u=Object.freeze({ORDER:t,isLE:n,BITS:i,BYTES:f,MASK:je(i),ZERO:ot,ONE:Q,create:a=>lt(a,t),isValid:a=>{if(typeof a!=\"bigint\")throw new Error(\"invalid field element: expected bigint, got \"+typeof a);return ot<=a&&a<t},is0:a=>a===ot,isValidNot0:a=>!u.is0(a)&&u.isValid(a),isOdd:a=>(a&Q)===Q,neg:a=>lt(-a,t),eql:(a,l)=>a===l,sqr:a=>lt(a*a,t),add:(a,l)=>lt(a+l,t),sub:(a,l)=>lt(a-l,t),mul:(a,l)=>lt(a*l,t),pow:(a,l)=>cc(u,a,l),div:(a,l)=>lt(a*yo(l,t),t),sqrN:a=>a*a,addN:(a,l)=>a+l,subN:(a,l)=>a-l,mulN:(a,l)=>a*l,inv:a=>yo(a,t),sqrt:s||(a=>(c||(c=sc(t)),c(u,a))),toBytes:a=>n?An(a,f):In(a,f),fromBytes:a=>{if(a.length!==f)throw new Error(\"Field.fromBytes: expected \"+f+\" bytes, got \"+a.length);return n?Le(a):Ce(a)},invertBatch:a=>wo(u,a),cmov:(a,l,h)=>h?l:a});return Object.freeze(u)}function vo(t){if(typeof t!=\"bigint\")throw new Error(\"field order must be bigint\");const e=t.toString(2).length;return Math.ceil(e/8)}function Eo(t){const e=vo(t);return e+Math.ceil(e/2)}function uc(t,e,n=!1){const r=t.length,o=vo(e),s=Eo(e);if(r<16||r<s||r>1024)throw new Error(\"expected \"+s+\"-1024 bytes of input, got \"+r);const i=n?Le(t):Ce(t),f=lt(i,e-Q)+Q;return n?An(f,o):In(f,o)}const Xt=BigInt(0),Mt=BigInt(1);function le(t,e){const n=e.negate();return t?n:e}function lc(t,e,n){const r=e===\"pz\"?i=>i.pz:i=>i.ez,o=wo(t.Fp,n.map(r));return n.map((i,f)=>i.toAffine(o[f])).map(t.fromAffine)}function Bo(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error(\"invalid window size, expected [1..\"+e+\"], got W=\"+t)}function On(t,e){Bo(t,e);const n=Math.ceil(e/t)+1,r=2**(t-1),o=2**t,s=je(t),i=BigInt(t);return{windows:n,windowSize:r,mask:s,maxNumber:o,shiftBy:i}}function Io(t,e,n){const{windowSize:r,mask:o,maxNumber:s,shiftBy:i}=n;let f=Number(t&o),c=t>>i;f>r&&(f-=s,c+=Mt);const u=e*r,a=u+Math.abs(f)-1,l=f===0,h=f<0,g=e%2!==0;return{nextN:c,offset:a,isZero:l,isNeg:h,isNegF:g,offsetF:u}}function dc(t,e){if(!Array.isArray(t))throw new Error(\"array expected\");t.forEach((n,r)=>{if(!(n instanceof e))throw new Error(\"invalid point at index \"+r)})}function hc(t,e){if(!Array.isArray(t))throw new Error(\"array of scalars expected\");t.forEach((n,r)=>{if(!e.isValid(n))throw new Error(\"invalid scalar at index \"+r)})}const Un=new WeakMap,Ao=new WeakMap;function _n(t){return Ao.get(t)||1}function So(t){if(t!==Xt)throw new Error(\"invalid wNAF\")}function pc(t,e){return{constTimeNegate:le,hasPrecomputes(n){return _n(n)!==1},unsafeLadder(n,r,o=t.ZERO){let s=n;for(;r>Xt;)r&Mt&&(o=o.add(s)),s=s.double(),r>>=Mt;return o},precomputeWindow(n,r){const{windows:o,windowSize:s}=On(r,e),i=[];let f=n,c=f;for(let u=0;u<o;u++){c=f,i.push(c);for(let a=1;a<s;a++)c=c.add(f),i.push(c);f=c.double()}return i},wNAF(n,r,o){let s=t.ZERO,i=t.BASE;const f=On(n,e);for(let c=0;c<f.windows;c++){const{nextN:u,offset:a,isZero:l,isNeg:h,isNegF:g,offsetF:m}=Io(o,c,f);o=u,l?i=i.add(le(g,r[m])):s=s.add(le(h,r[a]))}return So(o),{p:s,f:i}},wNAFUnsafe(n,r,o,s=t.ZERO){const i=On(n,e);for(let f=0;f<i.windows&&o!==Xt;f++){const{nextN:c,offset:u,isZero:a,isNeg:l}=Io(o,f,i);if(o=c,!a){const h=r[u];s=s.add(l?h.negate():h)}}return So(o),s},getPrecomputes(n,r,o){let s=Un.get(r);return s||(s=this.precomputeWindow(r,n),n!==1&&(typeof o==\"function\"&&(s=o(s)),Un.set(r,s))),s},wNAFCached(n,r,o){const s=_n(n);return this.wNAF(s,this.getPrecomputes(s,n,o),r)},wNAFCachedUnsafe(n,r,o,s){const i=_n(n);return i===1?this.unsafeLadder(n,r,s):this.wNAFUnsafe(i,this.getPrecomputes(i,n,o),r,s)},setWindowSize(n,r){Bo(r,e),Ao.set(n,r),Un.delete(n)}}}function gc(t,e,n,r){let o=e,s=t.ZERO,i=t.ZERO;for(;n>Xt||r>Xt;)n&Mt&&(s=s.add(o)),r&Mt&&(i=i.add(o)),o=o.double(),n>>=Mt,r>>=Mt;return{p1:s,p2:i}}function bc(t,e,n,r){dc(n,t),hc(r,e);const o=n.length,s=r.length;if(o!==s)throw new Error(\"arrays of points and scalars must have equal length\");const i=t.ZERO,f=tc(BigInt(o));let c=1;f>12?c=f-3:f>4?c=f-2:f>0&&(c=2);const u=je(c),a=new Array(Number(u)+1).fill(i),l=Math.floor((e.BITS-1)/c)*c;let h=i;for(let g=l;g>=0;g-=c){a.fill(i);for(let b=0;b<s;b++){const v=r[b],L=Number(v>>BigInt(g)&u);a[L]=a[L].add(n[b])}let m=i;for(let b=a.length-1,v=i;b>0;b--)v=v.add(a[b]),m=m.add(v);if(h=h.add(m),g!==0)for(let b=0;b<c;b++)h=h.double()}return h}function No(t,e){if(e){if(e.ORDER!==t)throw new Error(\"Field.ORDER must match order: Fp == p, Fn == n\");return fc(e),e}else return Yt(t)}function yc(t,e,n={}){if(!e||typeof e!=\"object\")throw new Error(`expected valid ${t} CURVE object`);for(const f of[\"p\",\"n\",\"h\"]){const c=e[f];if(!(typeof c==\"bigint\"&&c>Xt))throw new Error(`CURVE.${f} must be positive bigint`)}const r=No(e.p,n.Fp),o=No(e.n,n.Fn),i=[\"Gx\",\"Gy\",\"a\",t===\"weierstrass\"?\"b\":\"d\"];for(const f of i)if(!r.isValid(e[f]))throw new Error(`CURVE.${f} must be valid field element of CURVE.Fp`);return{Fp:r,Fn:o}}BigInt(0),BigInt(1),BigInt(2),BigInt(8);const de=BigInt(0),Jt=BigInt(1),Pe=BigInt(2);function mc(t){return ke(t,{adjustScalarBytes:\"function\",powPminus2:\"function\"}),Object.freeze({...t})}function wc(t){const e=mc(t),{P:n,type:r,adjustScalarBytes:o,powPminus2:s,randomBytes:i}=e,f=r===\"x25519\";if(!f&&r!==\"x448\")throw new Error(\"invalid type\");const c=i||Zt,u=f?255:448,a=f?32:56,l=BigInt(f?9:5),h=BigInt(f?121665:39081),g=f?Pe**BigInt(254):Pe**BigInt(447),m=f?BigInt(8)*Pe**BigInt(251)-Jt:BigInt(4)*Pe**BigInt(445)-Jt,b=g+m+Jt,v=d=>lt(d,n),L=V(l);function V(d){return An(v(d),a)}function C(d){const w=rt(\"u coordinate\",d,a);return f&&(w[31]&=127),v(Le(w))}function H(d){return Le(o(rt(\"scalar\",d,a)))}function _(d,w){const p=R(C(w),H(d));if(p===de)throw new Error(\"invalid private or public key received\");return V(p)}function k(d){return _(d,L)}function P(d,w,p){const y=v(d*(w-p));return w=v(w-y),p=v(p+y),{x_2:w,x_3:p}}function R(d,w){Nn(\"u\",d,de,n),Nn(\"scalar\",w,g,b);const p=w,y=d;let x=Jt,B=de,E=d,I=Jt,S=de;for(let A=BigInt(u-1);A>=de;A--){const T=p>>A&Jt;S^=T,{x_2:x,x_3:E}=P(S,x,E),{x_2:B,x_3:I}=P(S,B,I),S=T;const U=x+B,$=v(U*U),D=x-B,q=v(D*D),j=$-q,K=E+I,et=E-I,Z=v(et*U),z=v(K*D),Ft=Z+z,yt=Z-z;E=v(Ft*Ft),I=v(y*v(yt*yt)),x=v($*q),B=v(j*($+v(h*j)))}({x_2:x,x_3:E}=P(S,x,E)),{x_2:B,x_3:I}=P(S,B,I);const O=s(B);return v(x*O)}return{scalarMult:_,scalarMultBase:k,getSharedSecret:(d,w)=>_(d,w),getPublicKey:d=>k(d),utils:{randomPrivateKey:()=>c(a)},GuBytes:L.slice()}}BigInt(0);const xc=BigInt(1),Oo=BigInt(2),vc=BigInt(3),Ec=BigInt(5),Bc=BigInt(8),Uo={p:BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed\"),n:BigInt(\"0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed\"),h:Bc,a:BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec\"),d:BigInt(\"0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3\"),Gx:BigInt(\"0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\"),Gy:BigInt(\"0x6666666666666666666666666666666666666666666666666666666666666658\")};function Ic(t){const e=BigInt(10),n=BigInt(20),r=BigInt(40),o=BigInt(80),s=Uo.p,f=t*t%s*t%s,c=pt(f,Oo,s)*f%s,u=pt(c,xc,s)*t%s,a=pt(u,Ec,s)*u%s,l=pt(a,e,s)*a%s,h=pt(l,n,s)*l%s,g=pt(h,r,s)*h%s,m=pt(g,o,s)*g%s,b=pt(m,o,s)*g%s,v=pt(b,e,s)*a%s;return{pow_p_5_8:pt(v,Oo,s)*t%s,b2:f}}function Ac(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}const Tn=(()=>{const t=Uo.p;return wc({P:t,type:\"x25519\",powPminus2:e=>{const{pow_p_5_8:n,b2:r}=Ic(e);return lt(pt(n,vc,t)*r,t)},adjustScalarBytes:Ac})})();function _o(t){t.lowS!==void 0&&Re(\"lowS\",t.lowS),t.prehash!==void 0&&Re(\"prehash\",t.prehash)}class Sc extends Error{constructor(e=\"\"){super(e)}}const vt={Err:Sc,_tlv:{encode:(t,e)=>{const{Err:n}=vt;if(t<0||t>256)throw new n(\"tlv.encode: wrong tag\");if(e.length&1)throw new n(\"tlv.encode: unpadded data\");const r=e.length/2,o=$e(r);if(o.length/2&128)throw new n(\"tlv.encode: long form length too big\");const s=r>127?$e(o.length/2|128):\"\";return $e(t)+s+o+e},decode(t,e){const{Err:n}=vt;let r=0;if(t<0||t>256)throw new n(\"tlv.encode: wrong tag\");if(e.length<2||e[r++]!==t)throw new n(\"tlv.decode: wrong tlv\");const o=e[r++],s=!!(o&128);let i=0;if(!s)i=o;else{const c=o&127;if(!c)throw new n(\"tlv.decode(long): indefinite length not supported\");if(c>4)throw new n(\"tlv.decode(long): byte length is too big\");const u=e.subarray(r,r+c);if(u.length!==c)throw new n(\"tlv.decode: length bytes not complete\");if(u[0]===0)throw new n(\"tlv.decode(long): zero leftmost byte\");for(const a of u)i=i<<8|a;if(r+=c,i<128)throw new n(\"tlv.decode(long): not minimal encoding\")}const f=e.subarray(r,r+i);if(f.length!==i)throw new n(\"tlv.decode: wrong value length\");return{v:f,l:e.subarray(r+i)}}},_int:{encode(t){const{Err:e}=vt;if(t<he)throw new e(\"integer: negative integers are not allowed\");let n=$e(t);if(Number.parseInt(n[0],16)&8&&(n=\"00\"+n),n.length&1)throw new e(\"unexpected DER parsing assertion: unpadded hex\");return n},decode(t){const{Err:e}=vt;if(t[0]&128)throw new e(\"invalid signature integer: negative\");if(t[0]===0&&!(t[1]&128))throw new e(\"invalid signature integer: unnecessary leading zero\");return Ce(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=vt,o=rt(\"signature\",t),{v:s,l:i}=r.decode(48,o);if(i.length)throw new e(\"invalid signature: left bytes after parsing\");const{v:f,l:c}=r.decode(2,s),{v:u,l:a}=r.decode(2,c);if(a.length)throw new e(\"invalid signature: left bytes after parsing\");return{r:n.decode(f),s:n.decode(u)}},hexFromSig(t){const{_tlv:e,_int:n}=vt,r=e.encode(2,n.encode(t.r)),o=e.encode(2,n.encode(t.s)),s=r+o;return e.encode(48,s)}},he=BigInt(0),pe=BigInt(1),Nc=BigInt(2),He=BigInt(3),Oc=BigInt(4);function Uc(t,e,n){function r(o){const s=t.sqr(o),i=t.mul(s,o);return t.add(t.add(i,t.mul(o,e)),n)}return r}function To(t,e,n){const{BYTES:r}=t;function o(s){let i;if(typeof s==\"bigint\")i=s;else{let f=rt(\"private key\",s);if(e){if(!e.includes(f.length*2))throw new Error(\"invalid private key\");const c=new Uint8Array(r);c.set(f,c.length-f.length),f=c}try{i=t.fromBytes(f)}catch{throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof s}`)}}if(n&&(i=t.create(i)),!t.isValidNot0(i))throw new Error(\"invalid private key: out of range [1..N-1]\");return i}return o}function _c(t,e={}){const{Fp:n,Fn:r}=yc(\"weierstrass\",t,e),{h:o,n:s}=t;ke(e,{},{allowInfinityPoint:\"boolean\",clearCofactor:\"function\",isTorsionFree:\"function\",fromBytes:\"function\",toBytes:\"function\",endo:\"object\",wrapPrivateKey:\"boolean\"});const{endo:i}=e;if(i&&(!n.is0(t.a)||typeof i.beta!=\"bigint\"||typeof i.splitScalar!=\"function\"))throw new Error('invalid endo: expected \"beta\": bigint and \"splitScalar\": function');function f(){if(!n.isOdd)throw new Error(\"compression is not supported: Field does not have .isOdd()\")}function c(R,d,w){const{x:p,y}=d.toAffine(),x=n.toBytes(p);if(Re(\"isCompressed\",w),w){f();const B=!n.isOdd(y);return Ht(Ro(B),x)}else return Ht(Uint8Array.of(4),x,n.toBytes(y))}function u(R){at(R);const d=n.BYTES,w=d+1,p=2*d+1,y=R.length,x=R[0],B=R.subarray(1);if(y===w&&(x===2||x===3)){const E=n.fromBytes(B);if(!n.isValid(E))throw new Error(\"bad point: is not on curve, wrong x\");const I=h(E);let S;try{S=n.sqrt(I)}catch(T){const U=T instanceof Error?\": \"+T.message:\"\";throw new Error(\"bad point: is not on curve, sqrt error\"+U)}f();const O=n.isOdd(S);return(x&1)===1!==O&&(S=n.neg(S)),{x:E,y:S}}else if(y===p&&x===4){const E=n.fromBytes(B.subarray(d*0,d*1)),I=n.fromBytes(B.subarray(d*1,d*2));if(!g(E,I))throw new Error(\"bad point: is not on curve\");return{x:E,y:I}}else throw new Error(`bad point: got length ${y}, expected compressed=${w} or uncompressed=${p}`)}const a=e.toBytes||c,l=e.fromBytes||u,h=Uc(n,t.a,t.b);function g(R,d){const w=n.sqr(d),p=h(R);return n.eql(w,p)}if(!g(t.Gx,t.Gy))throw new Error(\"bad curve params: generator point\");const m=n.mul(n.pow(t.a,He),Oc),b=n.mul(n.sqr(t.b),BigInt(27));if(n.is0(n.add(m,b)))throw new Error(\"bad curve params: a or b\");function v(R,d,w=!1){if(!n.isValid(d)||w&&n.is0(d))throw new Error(`bad point coordinate ${R}`);return d}function L(R){if(!(R instanceof _))throw new Error(\"ProjectivePoint expected\")}const V=ho((R,d)=>{const{px:w,py:p,pz:y}=R;if(n.eql(y,n.ONE))return{x:w,y:p};const x=R.is0();d==null&&(d=x?n.ONE:n.inv(y));const B=n.mul(w,d),E=n.mul(p,d),I=n.mul(y,d);if(x)return{x:n.ZERO,y:n.ZERO};if(!n.eql(I,n.ONE))throw new Error(\"invZ was invalid\");return{x:B,y:E}}),C=ho(R=>{if(R.is0()){if(e.allowInfinityPoint&&!n.is0(R.py))return;throw new Error(\"bad point: ZERO\")}const{x:d,y:w}=R.toAffine();if(!n.isValid(d)||!n.isValid(w))throw new Error(\"bad point: x or y not field elements\");if(!g(d,w))throw new Error(\"bad point: equation left != right\");if(!R.isTorsionFree())throw new Error(\"bad point: not in prime-order subgroup\");return!0});function H(R,d,w,p,y){return w=new _(n.mul(w.px,R),w.py,w.pz),d=le(p,d),w=le(y,w),d.add(w)}class _{constructor(d,w,p){this.px=v(\"x\",d),this.py=v(\"y\",w,!0),this.pz=v(\"z\",p),Object.freeze(this)}static fromAffine(d){const{x:w,y:p}=d||{};if(!d||!n.isValid(w)||!n.isValid(p))throw new Error(\"invalid affine point\");if(d instanceof _)throw new Error(\"projective point not allowed\");return n.is0(w)&&n.is0(p)?_.ZERO:new _(w,p,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){return lc(_,\"pz\",d)}static fromBytes(d){return at(d),_.fromHex(d)}static fromHex(d){const w=_.fromAffine(l(rt(\"pointHex\",d)));return w.assertValidity(),w}static fromPrivateKey(d){const w=To(r,e.allowedPrivateKeyLengths,e.wrapPrivateKey);return _.BASE.multiply(w(d))}static msm(d,w){return bc(_,r,d,w)}precompute(d=8,w=!0){return P.setWindowSize(this,d),w||this.multiply(He),this}_setWindowSize(d){this.precompute(d)}assertValidity(){C(this)}hasEvenY(){const{y:d}=this.toAffine();if(!n.isOdd)throw new Error(\"Field doesn't support isOdd\");return!n.isOdd(d)}equals(d){L(d);const{px:w,py:p,pz:y}=this,{px:x,py:B,pz:E}=d,I=n.eql(n.mul(w,E),n.mul(x,y)),S=n.eql(n.mul(p,E),n.mul(B,y));return I&&S}negate(){return new _(this.px,n.neg(this.py),this.pz)}double(){const{a:d,b:w}=t,p=n.mul(w,He),{px:y,py:x,pz:B}=this;let E=n.ZERO,I=n.ZERO,S=n.ZERO,O=n.mul(y,y),A=n.mul(x,x),T=n.mul(B,B),U=n.mul(y,x);return U=n.add(U,U),S=n.mul(y,B),S=n.add(S,S),E=n.mul(d,S),I=n.mul(p,T),I=n.add(E,I),E=n.sub(A,I),I=n.add(A,I),I=n.mul(E,I),E=n.mul(U,E),S=n.mul(p,S),T=n.mul(d,T),U=n.sub(O,T),U=n.mul(d,U),U=n.add(U,S),S=n.add(O,O),O=n.add(S,O),O=n.add(O,T),O=n.mul(O,U),I=n.add(I,O),T=n.mul(x,B),T=n.add(T,T),O=n.mul(T,U),E=n.sub(E,O),S=n.mul(T,A),S=n.add(S,S),S=n.add(S,S),new _(E,I,S)}add(d){L(d);const{px:w,py:p,pz:y}=this,{px:x,py:B,pz:E}=d;let I=n.ZERO,S=n.ZERO,O=n.ZERO;const A=t.a,T=n.mul(t.b,He);let U=n.mul(w,x),$=n.mul(p,B),D=n.mul(y,E),q=n.add(w,p),j=n.add(x,B);q=n.mul(q,j),j=n.add(U,$),q=n.sub(q,j),j=n.add(w,y);let K=n.add(x,E);return j=n.mul(j,K),K=n.add(U,D),j=n.sub(j,K),K=n.add(p,y),I=n.add(B,E),K=n.mul(K,I),I=n.add($,D),K=n.sub(K,I),O=n.mul(A,j),I=n.mul(T,D),O=n.add(I,O),I=n.sub($,O),O=n.add($,O),S=n.mul(I,O),$=n.add(U,U),$=n.add($,U),D=n.mul(A,D),j=n.mul(T,j),$=n.add($,D),D=n.sub(U,D),D=n.mul(A,D),j=n.add(j,D),U=n.mul($,j),S=n.add(S,U),U=n.mul(K,j),I=n.mul(q,I),I=n.sub(I,U),U=n.mul(q,$),O=n.mul(K,O),O=n.add(O,U),new _(I,S,O)}subtract(d){return this.add(d.negate())}is0(){return this.equals(_.ZERO)}multiply(d){const{endo:w}=e;if(!r.isValidNot0(d))throw new Error(\"invalid scalar: out of range\");let p,y;const x=B=>P.wNAFCached(this,B,_.normalizeZ);if(w){const{k1neg:B,k1:E,k2neg:I,k2:S}=w.splitScalar(d),{p:O,f:A}=x(E),{p:T,f:U}=x(S);y=A.add(U),p=H(w.beta,O,T,B,I)}else{const{p:B,f:E}=x(d);p=B,y=E}return _.normalizeZ([p,y])[0]}multiplyUnsafe(d){const{endo:w}=e,p=this;if(!r.isValid(d))throw new Error(\"invalid scalar: out of range\");if(d===he||p.is0())return _.ZERO;if(d===pe)return p;if(P.hasPrecomputes(this))return this.multiply(d);if(w){const{k1neg:y,k1:x,k2neg:B,k2:E}=w.splitScalar(d),{p1:I,p2:S}=gc(_,p,x,E);return H(w.beta,I,S,y,B)}else return P.wNAFCachedUnsafe(p,d)}multiplyAndAddUnsafe(d,w,p){const y=this.multiplyUnsafe(w).add(d.multiplyUnsafe(p));return y.is0()?void 0:y}toAffine(d){return V(this,d)}isTorsionFree(){const{isTorsionFree:d}=e;return o===pe?!0:d?d(_,this):P.wNAFCachedUnsafe(this,s).is0()}clearCofactor(){const{clearCofactor:d}=e;return o===pe?this:d?d(_,this):this.multiplyUnsafe(o)}toBytes(d=!0){return Re(\"isCompressed\",d),this.assertValidity(),a(_,this,d)}toRawBytes(d=!0){return this.toBytes(d)}toHex(d=!0){return ce(this.toBytes(d))}toString(){return`<Point ${this.is0()?\"ZERO\":this.toHex()}>`}}_.BASE=new _(t.Gx,t.Gy,n.ONE),_.ZERO=new _(n.ZERO,n.ONE,n.ZERO),_.Fp=n,_.Fn=r;const k=r.BITS,P=pc(_,e.endo?Math.ceil(k/2):k);return _}function Ro(t){return Uint8Array.of(t?2:3)}function Tc(t,e,n={}){ke(e,{hash:\"function\"},{hmac:\"function\",lowS:\"boolean\",randomBytes:\"function\",bits2int:\"function\",bits2int_modN:\"function\"});const r=e.randomBytes||Zt,o=e.hmac||((p,...y)=>_e(e.hash,p,Ht(...y))),{Fp:s,Fn:i}=t,{ORDER:f,BITS:c}=i;function u(p){const y=f>>pe;return p>y}function a(p){return u(p)?i.neg(p):p}function l(p,y){if(!i.isValidNot0(y))throw new Error(`invalid signature ${p}: out of range 1..CURVE.n`)}class h{constructor(y,x,B){l(\"r\",y),l(\"s\",x),this.r=y,this.s=x,B!=null&&(this.recovery=B),Object.freeze(this)}static fromCompact(y){const x=i.BYTES,B=rt(\"compactSignature\",y,x*2);return new h(i.fromBytes(B.subarray(0,x)),i.fromBytes(B.subarray(x,x*2)))}static fromDER(y){const{r:x,s:B}=vt.toSig(rt(\"DER\",y));return new h(x,B)}assertValidity(){}addRecoveryBit(y){return new h(this.r,this.s,y)}recoverPublicKey(y){const x=s.ORDER,{r:B,s:E,recovery:I}=this;if(I==null||![0,1,2,3].includes(I))throw new Error(\"recovery id invalid\");if(f*Nc<x&&I>1)throw new Error(\"recovery id is ambiguous for h>1 curve\");const O=I===2||I===3?B+f:B;if(!s.isValid(O))throw new Error(\"recovery id 2 or 3 invalid\");const A=s.toBytes(O),T=t.fromHex(Ht(Ro((I&1)===0),A)),U=i.inv(O),$=C(rt(\"msgHash\",y)),D=i.create(-$*U),q=i.create(E*U),j=t.BASE.multiplyUnsafe(D).add(T.multiplyUnsafe(q));if(j.is0())throw new Error(\"point at infinify\");return j.assertValidity(),j}hasHighS(){return u(this.s)}normalizeS(){return this.hasHighS()?new h(this.r,i.neg(this.s),this.recovery):this}toBytes(y){if(y===\"compact\")return Ht(i.toBytes(this.r),i.toBytes(this.s));if(y===\"der\")return fn(vt.hexFromSig(this));throw new Error(\"invalid format\")}toDERRawBytes(){return this.toBytes(\"der\")}toDERHex(){return ce(this.toBytes(\"der\"))}toCompactRawBytes(){return this.toBytes(\"compact\")}toCompactHex(){return ce(this.toBytes(\"compact\"))}}const g=To(i,n.allowedPrivateKeyLengths,n.wrapPrivateKey),m={isValidPrivateKey(p){try{return g(p),!0}catch{return!1}},normPrivateKeyToScalar:g,randomPrivateKey:()=>{const p=f;return uc(r(Eo(p)),p)},precompute(p=8,y=t.BASE){return y.precompute(p,!1)}};function b(p,y=!0){return t.fromPrivateKey(p).toBytes(y)}function v(p){if(typeof p==\"bigint\")return!1;if(p instanceof t)return!0;const x=rt(\"key\",p).length,B=s.BYTES,E=B+1,I=2*B+1;if(!(n.allowedPrivateKeyLengths||i.BYTES===E))return x===E||x===I}function L(p,y,x=!0){if(v(p)===!0)throw new Error(\"first arg must be private key\");if(v(y)===!1)throw new Error(\"second arg must be public key\");return t.fromHex(y).multiply(g(p)).toBytes(x)}const V=e.bits2int||function(p){if(p.length>8192)throw new Error(\"input is too large\");const y=Ce(p),x=p.length*8-c;return x>0?y>>BigInt(x):y},C=e.bits2int_modN||function(p){return i.create(V(p))},H=je(c);function _(p){return Nn(\"num < 2^\"+c,p,he,H),i.toBytes(p)}function k(p,y,x=P){if([\"recovered\",\"canonical\"].some(q=>q in x))throw new Error(\"sign() legacy options not supported\");const{hash:B}=e;let{lowS:E,prehash:I,extraEntropy:S}=x;E==null&&(E=!0),p=rt(\"msgHash\",p),_o(x),I&&(p=rt(\"prehashed msgHash\",B(p)));const O=C(p),A=g(y),T=[_(A),_(O)];if(S!=null&&S!==!1){const q=S===!0?r(s.BYTES):S;T.push(rt(\"extraEntropy\",q))}const U=Ht(...T),$=O;function D(q){const j=V(q);if(!i.isValidNot0(j))return;const K=i.inv(j),et=t.BASE.multiply(j).toAffine(),Z=i.create(et.x);if(Z===he)return;const z=i.create(K*i.create($+Z*A));if(z===he)return;let Ft=(et.x===Z?0:2)|Number(et.y&pe),yt=z;return E&&u(z)&&(yt=a(z),Ft^=1),new h(Z,yt,Ft)}return{seed:U,k2sig:D}}const P={lowS:e.lowS,prehash:!1},R={lowS:e.lowS,prehash:!1};function d(p,y,x=P){const{seed:B,k2sig:E}=k(p,y,x);return ec(e.hash.outputLen,i.BYTES,o)(B,E)}t.BASE.precompute(8);function w(p,y,x,B=R){const E=p;y=rt(\"msgHash\",y),x=rt(\"publicKey\",x),_o(B);const{lowS:I,prehash:S,format:O}=B;if(\"strict\"in B)throw new Error(\"options.strict was renamed to lowS\");if(O!==void 0&&![\"compact\",\"der\",\"js\"].includes(O))throw new Error('format must be \"compact\", \"der\" or \"js\"');const A=typeof E==\"string\"||nn(E),T=!A&&!O&&typeof E==\"object\"&&E!==null&&typeof E.r==\"bigint\"&&typeof E.s==\"bigint\";if(!A&&!T)throw new Error(\"invalid signature, expected Uint8Array, hex string or Signature instance\");let U,$;try{if(T)if(O===void 0||O===\"js\")U=new h(E.r,E.s);else throw new Error(\"invalid format\");if(A){try{O!==\"compact\"&&(U=h.fromDER(E))}catch(yt){if(!(yt instanceof vt.Err))throw yt}!U&&O!==\"der\"&&(U=h.fromCompact(E))}$=t.fromHex(x)}catch{return!1}if(!U||I&&U.hasHighS())return!1;S&&(y=e.hash(y));const{r:D,s:q}=U,j=C(y),K=i.inv(q),et=i.create(j*K),Z=i.create(D*K),z=t.BASE.multiplyUnsafe(et).add($.multiplyUnsafe(Z));return z.is0()?!1:i.create(z.x)===D}return Object.freeze({getPublicKey:b,getSharedSecret:L,sign:d,verify:w,utils:m,Point:t,Signature:h})}function Rc(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=Yt(e.n,t.nBitLength),o={Fp:n,Fn:r,allowedPrivateKeyLengths:t.allowedPrivateKeyLengths,allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,wrapPrivateKey:t.wrapPrivateKey,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes};return{CURVE:e,curveOpts:o}}function $c(t){const{CURVE:e,curveOpts:n}=Rc(t),r={hash:t.hash,hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN};return{CURVE:e,curveOpts:n,ecdsaOpts:r}}function Cc(t,e){return Object.assign({},e,{ProjectivePoint:e.Point,CURVE:t})}function Lc(t){const{CURVE:e,curveOpts:n,ecdsaOpts:r}=$c(t),o=_c(e,n),s=Tc(o,r,n);return Cc(t,s)}function Rn(t,e){const n=r=>Lc({...t,hash:r});return{...n(e),create:n}}const $o={p:BigInt(\"0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff\"),n:BigInt(\"0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551\"),h:BigInt(1),a:BigInt(\"0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc\"),b:BigInt(\"0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b\"),Gx:BigInt(\"0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296\"),Gy:BigInt(\"0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5\")},Co={p:BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff\"),n:BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973\"),h:BigInt(1),a:BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc\"),b:BigInt(\"0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef\"),Gx:BigInt(\"0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7\"),Gy:BigInt(\"0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f\")},Lo={p:BigInt(\"0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"),n:BigInt(\"0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409\"),h:BigInt(1),a:BigInt(\"0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\"),b:BigInt(\"0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00\"),Gx:BigInt(\"0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66\"),Gy:BigInt(\"0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650\")},jc=Yt($o.p),kc=Yt(Co.p),Pc=Yt(Lo.p),Hc=Rn({...$o,Fp:jc,lowS:!1},Ae);Rn({...Co,Fp:kc,lowS:!1},Yi),Rn({...Lo,Fp:Pc,lowS:!1,allowedPrivateKeyLengths:[130,131,132]},Wi);const Dc=Hc,$n=\"base10\",tt=\"base16\",Qt=\"base64pad\",De=\"base64url\",te=\"utf8\",Cn=0,ee=1,ge=2,Mc=0,jo=1,be=12,Ln=32;function Vc(){const t=Tn.utils.randomPrivateKey(),e=Tn.getPublicKey(t);return{privateKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t,tt),publicKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,tt)}}function qc(){const t=Zt(Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t,tt)}function Kc(t,e){const n=Tn.getSharedSecret((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t,tt),(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,tt)),r=Jf(Te,n,void 0,void 0,Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(r,tt)}function Fc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t,tt));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,tt)}function zc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t,te));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,tt)}function jn(t){return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(`${t}`,$n)}function Vt(t){return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t,$n))}function ko(t){return t.replace(/\\+/g,\"-\").replace(/\\//g,\"_\").replace(/=/g,\"\")}function Po(t){const e=t.replace(/-/g,\"+\").replace(/_/g,\"/\"),n=(4-e.length%4)%4;return e+\"=\".repeat(n)}function Gc(t){const e=jn(typeof t.type<\"u\"?t.type:Cn);if(Vt(e)===ee&&typeof t.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");const n=typeof t.senderPublicKey<\"u\"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.senderPublicKey,tt):void 0,r=typeof t.iv<\"u\"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.iv,tt):Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.symKey,tt),s=co(o,r).encrypt((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.message,te)),i=kn({type:e,sealed:s,iv:r,senderPublicKey:n});return t.encoding===De?ko(i):i}function Zc(t){const e=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.symKey,tt),{sealed:n,iv:r}=Me({encoded:t.encoded,encoding:t.encoding}),o=co(e,r).decrypt(n);if(o===null)throw new Error(\"Failed to decrypt\");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(o,te)}function Wc(t,e){const n=jn(ge),r=Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t,te),s=kn({type:n,sealed:o,iv:r});return e===De?ko(s):s}function Yc(t,e){const{sealed:n}=Me({encoded:t,encoding:e});return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n,te)}function kn(t){if(Vt(t.type)===ge)return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([t.type,t.sealed]),Qt);if(Vt(t.type)===ee){if(typeof t.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([t.type,t.senderPublicKey,t.iv,t.sealed]),Qt)}return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([t.type,t.iv,t.sealed]),Qt)}function Me(t){const e=(t.encoding||Qt)===De?Po(t.encoded):t.encoded,n=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,Qt),r=n.slice(Mc,jo),o=jo;if(Vt(r)===ee){const c=o+Ln,u=c+be,a=n.slice(o,c),l=n.slice(c,u),h=n.slice(u);return{type:r,sealed:h,iv:l,senderPublicKey:a}}if(Vt(r)===ge){const c=n.slice(o),u=Zt(be);return{type:r,sealed:c,iv:u}}const s=o+be,i=n.slice(o,s),f=n.slice(s);return{type:r,sealed:f,iv:i}}function Xc(t,e){const n=Me({encoded:t,encoding:e?.encoding});return Ho({type:Vt(n.type),senderPublicKey:typeof n.senderPublicKey<\"u\"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n.senderPublicKey,tt):void 0,receiverPublicKey:e?.receiverPublicKey})}function Ho(t){const e=t?.type||Cn;if(e===ee){if(typeof t?.senderPublicKey>\"u\")throw new Error(\"missing sender public key\");if(typeof t?.receiverPublicKey>\"u\")throw new Error(\"missing receiver public key\")}return{type:e,senderPublicKey:t?.senderPublicKey,receiverPublicKey:t?.receiverPublicKey}}function Jc(t){return t.type===ee&&typeof t.senderPublicKey==\"string\"&&typeof t.receiverPublicKey==\"string\"}function Qc(t){return t.type===ge}function Do(t){const e=Buffer.from(t.x,\"base64\"),n=Buffer.from(t.y,\"base64\");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([new Uint8Array([4]),e,n])}function ta(t,e){const[n,r,o]=t.split(\".\"),s=Buffer.from(Po(o),\"base64\");if(s.length!==64)throw new Error(\"Invalid signature length\");const i=s.slice(0,32),f=s.slice(32,64),c=`${n}.${r}`,u=Te(c),a=Do(e);if(!Dc.verify((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([i,f]),u,a))throw new Error(\"Invalid signature\");return (0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(t).payload}const Mo=\"irn\";function ea(t){return t?.relay||{protocol:Mo}}function na(t){const e=_walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_6__.RELAY_JSONRPC[t];if(typeof e>\"u\")throw new Error(`Relay Protocol not supported: ${t}`);return e}function Vo(t,e=\"-\"){const n={},r=\"relay\"+e;return Object.keys(t).forEach(o=>{if(o.startsWith(r)){const s=o.replace(r,\"\"),i=t[o];n[s]=i}}),n}function ra(t){if(!t.includes(\"wc:\")){const u=Qe(t);u!=null&&u.includes(\"wc:\")&&(t=u)}t=t.includes(\"wc://\")?t.replace(\"wc://\",\"\"):t,t=t.includes(\"wc:\")?t.replace(\"wc:\",\"\"):t;const e=t.indexOf(\":\"),n=t.indexOf(\"?\")!==-1?t.indexOf(\"?\"):void 0,r=t.substring(0,e),o=t.substring(e+1,n).split(\"@\"),s=typeof n<\"u\"?t.substring(n):\"\",i=new URLSearchParams(s),f={};i.forEach((u,a)=>{f[a]=u});const c=typeof f.methods==\"string\"?f.methods.split(\",\"):void 0;return{protocol:r,topic:qo(o[0]),version:parseInt(o[1],10),symKey:f.symKey,relay:Vo(f),methods:c,expiryTimestamp:f.expiryTimestamp?parseInt(f.expiryTimestamp,10):void 0}}function qo(t){return t.startsWith(\"//\")?t.substring(2):t}function Ko(t,e=\"-\"){const n=\"relay\",r={};return Object.keys(t).forEach(o=>{const s=o,i=n+e+s;t[s]&&(r[i]=t[s])}),r}function oa(t){const e=new URLSearchParams,n=Ko(t.relay);Object.keys(n).sort().forEach(o=>{e.set(o,n[o])}),e.set(\"symKey\",t.symKey),t.expiryTimestamp&&e.set(\"expiryTimestamp\",t.expiryTimestamp.toString()),t.methods&&e.set(\"methods\",t.methods.join(\",\"));const r=e.toString();return`${t.protocol}:${t.topic}@${t.version}?${r}`}function sa(t,e,n){return`${t}?wc_ev=${n}&topic=${e}`}var ia=Object.defineProperty,fa=Object.defineProperties,ca=Object.getOwnPropertyDescriptors,Fo=Object.getOwnPropertySymbols,aa=Object.prototype.hasOwnProperty,ua=Object.prototype.propertyIsEnumerable,zo=(t,e,n)=>e in t?ia(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,la=(t,e)=>{for(var n in e||(e={}))aa.call(e,n)&&zo(t,n,e[n]);if(Fo)for(var n of Fo(e))ua.call(e,n)&&zo(t,n,e[n]);return t},da=(t,e)=>fa(t,ca(e));function qt(t){const e=[];return t.forEach(n=>{const[r,o]=n.split(\":\");e.push(`${r}:${o}`)}),e}function Go(t){const e=[];return Object.values(t).forEach(n=>{e.push(...qt(n.accounts))}),e}function Zo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.methods)}),n}function Wo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.events)}),n}function ha(t,e){const n=is(t,e);if(n)throw new Error(n.message);const r={};for(const[o,s]of Object.entries(t))r[o]={methods:s.methods,events:s.events,chains:s.accounts.map(i=>`${i.split(\":\")[0]}:${i.split(\":\")[1]}`)};return r}function pa(t){const{proposal:{requiredNamespaces:e,optionalNamespaces:n={}},supportedNamespaces:r}=t,o=ye(e),s=ye(n),i={};Object.keys(r).forEach(u=>{const a=r[u].chains,l=r[u].methods,h=r[u].events,g=r[u].accounts;a.forEach(m=>{if(!g.some(b=>b.includes(m)))throw new Error(`No accounts provided for chain ${m} in namespace ${u}`)}),i[u]={chains:a,methods:l,events:h,accounts:g}});const f=cs(e,i,\"approve()\");if(f)throw new Error(f.message);const c={};return!Object.keys(e).length&&!Object.keys(n).length?i:(Object.keys(o).forEach(u=>{const a=r[u].chains.filter(m=>{var b,v;return(v=(b=o[u])==null?void 0:b.chains)==null?void 0:v.includes(m)}),l=r[u].methods.filter(m=>{var b,v;return(v=(b=o[u])==null?void 0:b.methods)==null?void 0:v.includes(m)}),h=r[u].events.filter(m=>{var b,v;return(v=(b=o[u])==null?void 0:b.events)==null?void 0:v.includes(m)}),g=a.map(m=>r[u].accounts.filter(b=>b.includes(`${m}:`))).flat();c[u]={chains:a,methods:l,events:h,accounts:g}}),Object.keys(s).forEach(u=>{var a,l,h,g,m,b;if(!r[u])return;const v=(l=(a=s[u])==null?void 0:a.chains)==null?void 0:l.filter(H=>r[u].chains.includes(H)),L=r[u].methods.filter(H=>{var _,k;return(k=(_=s[u])==null?void 0:_.methods)==null?void 0:k.includes(H)}),V=r[u].events.filter(H=>{var _,k;return(k=(_=s[u])==null?void 0:_.events)==null?void 0:k.includes(H)}),C=v?.map(H=>r[u].accounts.filter(_=>_.includes(`${H}:`))).flat();c[u]={chains:ct((h=c[u])==null?void 0:h.chains,v),methods:ct((g=c[u])==null?void 0:g.methods,L),events:ct((m=c[u])==null?void 0:m.events,V),accounts:ct((b=c[u])==null?void 0:b.accounts,C)}}),c)}function Pn(t){return t.includes(\":\")}function Yo(t){return Pn(t)?t.split(\":\")[0]:t}function ye(t){var e,n,r;const o={};if(!Ve(t))return o;for(const[s,i]of Object.entries(t)){const f=Pn(s)?[s]:i.chains,c=i.methods||[],u=i.events||[],a=Yo(s);o[a]=da(la({},o[a]),{chains:ct(f,(e=o[a])==null?void 0:e.chains),methods:ct(c,(n=o[a])==null?void 0:n.methods),events:ct(u,(r=o[a])==null?void 0:r.events)})}return o}function Xo(t){const e={};return t?.forEach(n=>{var r;const[o,s]=n.split(\":\");e[o]||(e[o]={accounts:[],chains:[],events:[],methods:[]}),e[o].accounts.push(n),(r=e[o].chains)==null||r.push(`${o}:${s}`)}),e}function ga(t,e){e=e.map(r=>r.replace(\"did:pkh:\",\"\"));const n=Xo(e);for(const[r,o]of Object.entries(n))o.methods?o.methods=ct(o.methods,t):o.methods=t,o.events=[\"chainChanged\",\"accountsChanged\"];return n}function ba(t,e){var n,r,o,s,i,f;const c=ye(t),u=ye(e),a={},l=Object.keys(c).concat(Object.keys(u));for(const h of l)a[h]={chains:ct((n=c[h])==null?void 0:n.chains,(r=u[h])==null?void 0:r.chains),methods:ct((o=c[h])==null?void 0:o.methods,(s=u[h])==null?void 0:s.methods),events:ct((i=c[h])==null?void 0:i.events,(f=u[h])==null?void 0:f.events)};return a}const Jo={INVALID_METHOD:{message:\"Invalid method.\",code:1001},INVALID_EVENT:{message:\"Invalid event.\",code:1002},INVALID_UPDATE_REQUEST:{message:\"Invalid update request.\",code:1003},INVALID_EXTEND_REQUEST:{message:\"Invalid extend request.\",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:\"Invalid session settle request.\",code:1005},UNAUTHORIZED_METHOD:{message:\"Unauthorized method.\",code:3001},UNAUTHORIZED_EVENT:{message:\"Unauthorized event.\",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:\"Unauthorized update request.\",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:\"Unauthorized extend request.\",code:3004},USER_REJECTED:{message:\"User rejected.\",code:5e3},USER_REJECTED_CHAINS:{message:\"User rejected chains.\",code:5001},USER_REJECTED_METHODS:{message:\"User rejected methods.\",code:5002},USER_REJECTED_EVENTS:{message:\"User rejected events.\",code:5003},UNSUPPORTED_CHAINS:{message:\"Unsupported chains.\",code:5100},UNSUPPORTED_METHODS:{message:\"Unsupported methods.\",code:5101},UNSUPPORTED_EVENTS:{message:\"Unsupported events.\",code:5102},UNSUPPORTED_ACCOUNTS:{message:\"Unsupported accounts.\",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:\"Unsupported namespace key.\",code:5104},USER_DISCONNECTED:{message:\"User disconnected.\",code:6e3},SESSION_SETTLEMENT_FAILED:{message:\"Session settlement failed.\",code:7e3},WC_METHOD_UNSUPPORTED:{message:\"Unsupported wc_ method.\",code:10001}},Qo={NOT_INITIALIZED:{message:\"Not initialized.\",code:1},NO_MATCHING_KEY:{message:\"No matching key.\",code:2},RESTORE_WILL_OVERRIDE:{message:\"Restore will override.\",code:3},RESUBSCRIBED:{message:\"Resubscribed.\",code:4},MISSING_OR_INVALID:{message:\"Missing or invalid.\",code:5},EXPIRED:{message:\"Expired.\",code:6},UNKNOWN_TYPE:{message:\"Unknown type.\",code:7},MISMATCHED_TOPIC:{message:\"Mismatched topic.\",code:8},NON_CONFORMING_NAMESPACES:{message:\"Non conforming namespaces.\",code:9}};function Et(t,e){const{message:n,code:r}=Qo[t];return{message:e?`${n} ${e}`:n,code:r}}function Kt(t,e){const{message:n,code:r}=Jo[t];return{message:e?`${n} ${e}`:n,code:r}}function me(t,e){return Array.isArray(t)?typeof e<\"u\"&&t.length?t.every(e):!0:!1}function Ve(t){return Object.getPrototypeOf(t)===Object.prototype&&Object.keys(t).length}function kt(t){return typeof t>\"u\"}function it(t,e){return e&&kt(t)?!0:typeof t==\"string\"&&!!t.trim().length}function qe(t,e){return e&&kt(t)?!0:typeof t==\"number\"&&!isNaN(t)}function ya(t,e){const{requiredNamespaces:n}=e,r=Object.keys(t.namespaces),o=Object.keys(n);let s=!0;return It(o,r)?(r.forEach(i=>{const{accounts:f,methods:c,events:u}=t.namespaces[i],a=qt(f),l=n[i];(!It(ve(i,l),a)||!It(l.methods,c)||!It(l.events,u))&&(s=!1)}),s):!1}function we(t){return it(t,!1)&&t.includes(\":\")?t.split(\":\").length===2:!1}function ts(t){if(it(t,!1)&&t.includes(\":\")){const e=t.split(\":\");if(e.length===3){const n=e[0]+\":\"+e[1];return!!e[2]&&we(n)}}return!1}function ma(t){function e(n){try{return typeof new URL(n)<\"u\"}catch{return!1}}try{if(it(t,!1)){if(e(t))return!0;const n=Qe(t);return e(n)}}catch{}return!1}function wa(t){var e;return(e=t?.proposer)==null?void 0:e.publicKey}function xa(t){return t?.topic}function va(t,e){let n=null;return it(t?.publicKey,!1)||(n=Et(\"MISSING_OR_INVALID\",`${e} controller public key should be a string`)),n}function Hn(t){let e=!0;return me(t)?t.length&&(e=t.every(n=>it(n,!1))):e=!1,e}function es(t,e,n){let r=null;return me(e)&&e.length?e.forEach(o=>{r||we(o)||(r=Kt(\"UNSUPPORTED_CHAINS\",`${n}, chain ${o} should be a string and conform to \"namespace:chainId\" format`))}):we(t)||(r=Kt(\"UNSUPPORTED_CHAINS\",`${n}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)),r}function ns(t,e,n){let r=null;return Object.entries(t).forEach(([o,s])=>{if(r)return;const i=es(o,ve(o,s),`${e} ${n}`);i&&(r=i)}),r}function rs(t,e){let n=null;return me(t)?t.forEach(r=>{n||ts(r)||(n=Kt(\"UNSUPPORTED_ACCOUNTS\",`${e}, account ${r} should be a string and conform to \"namespace:chainId:address\" format`))}):n=Kt(\"UNSUPPORTED_ACCOUNTS\",`${e}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`),n}function os(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=rs(r?.accounts,`${e} namespace`);o&&(n=o)}),n}function ss(t,e){let n=null;return Hn(t?.methods)?Hn(t?.events)||(n=Kt(\"UNSUPPORTED_EVENTS\",`${e}, events should be an array of strings or empty array for no events`)):n=Kt(\"UNSUPPORTED_METHODS\",`${e}, methods should be an array of strings or empty array for no methods`),n}function Dn(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=ss(r,`${e}, namespace`);o&&(n=o)}),n}function Ea(t,e,n){let r=null;if(t&&Ve(t)){const o=Dn(t,e);o&&(r=o);const s=ns(t,e,n);s&&(r=s)}else r=Et(\"MISSING_OR_INVALID\",`${e}, ${n} should be an object with data`);return r}function is(t,e){let n=null;if(t&&Ve(t)){const r=Dn(t,e);r&&(n=r);const o=os(t,e);o&&(n=o)}else n=Et(\"MISSING_OR_INVALID\",`${e}, namespaces should be an object with data`);return n}function fs(t){return it(t.protocol,!0)}function Ba(t,e){let n=!1;return e&&!t?n=!0:t&&me(t)&&t.length&&t.forEach(r=>{n=fs(r)}),n}function Ia(t){return typeof t==\"number\"}function Aa(t){return typeof t<\"u\"&&typeof t!==null}function Sa(t){return!(!t||typeof t!=\"object\"||!t.code||!qe(t.code,!1)||!t.message||!it(t.message,!1))}function Na(t){return!(kt(t)||!it(t.method,!1))}function Oa(t){return!(kt(t)||kt(t.result)&&kt(t.error)||!qe(t.id,!1)||!it(t.jsonrpc,!1))}function Ua(t){return!(kt(t)||!it(t.name,!1))}function _a(t,e){return!(!we(e)||!Go(t).includes(e))}function Ta(t,e,n){return it(n,!1)?Zo(t,e).includes(n):!1}function Ra(t,e,n){return it(n,!1)?Wo(t,e).includes(n):!1}function cs(t,e,n){let r=null;const o=$a(t),s=Ca(e),i=Object.keys(o),f=Object.keys(s),c=as(Object.keys(t)),u=as(Object.keys(e)),a=c.filter(l=>!u.includes(l));return a.length&&(r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${a.toString()}\n      Received: ${Object.keys(e).toString()}`)),It(i,f)||(r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces chains don't satisfy required namespaces.\n      Required: ${i.toString()}\n      Approved: ${f.toString()}`)),Object.keys(e).forEach(l=>{if(!l.includes(\":\")||r)return;const h=qt(e[l].accounts);h.includes(l)||(r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces accounts don't satisfy namespace accounts for ${l}\n        Required: ${l}\n        Approved: ${h.toString()}`))}),i.forEach(l=>{r||(It(o[l].methods,s[l].methods)?It(o[l].events,s[l].events)||(r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces events don't satisfy namespace events for ${l}`)):r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces methods don't satisfy namespace methods for ${l}`))}),r}function $a(t){const e={};return Object.keys(t).forEach(n=>{var r;n.includes(\":\")?e[n]=t[n]:(r=t[n].chains)==null||r.forEach(o=>{e[o]={methods:t[n].methods,events:t[n].events}})}),e}function as(t){return[...new Set(t.map(e=>e.includes(\":\")?e.split(\":\")[0]:e))]}function Ca(t){const e={};return Object.keys(t).forEach(n=>{if(n.includes(\":\"))e[n]=t[n];else{const r=qt(t[n].accounts);r?.forEach(o=>{e[o]={accounts:t[n].accounts.filter(s=>s.includes(`${o}:`)),methods:t[n].methods,events:t[n].events}})}}),e}function La(t,e){return qe(t,!1)&&t<=e.max&&t>=e.min}function ja(){const t=Pt();return new Promise(e=>{switch(t){case J.browser:e(us());break;case J.reactNative:e(ls());break;case J.node:e(ds());break;default:e(!0)}})}function us(){return zt()&&navigator?.onLine}async function ls(){if(Bt()&&typeof global<\"u\"&&global!=null&&global.NetInfo){const t=await(global==null?void 0:global.NetInfo.fetch());return t?.isConnected}return!0}function ds(){return!0}function ka(t){switch(Pt()){case J.browser:hs(t);break;case J.reactNative:ps(t);break;case J.node:break}}function hs(t){!Bt()&&zt()&&(window.addEventListener(\"online\",()=>t(!0)),window.addEventListener(\"offline\",()=>t(!1)))}function ps(t){Bt()&&typeof global<\"u\"&&global!=null&&global.NetInfo&&global?.NetInfo.addEventListener(e=>t(e?.isConnected))}function Pa(){var t;return zt()&&(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()?((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)())==null?void 0:t.visibilityState)===\"visible\":!0}const Mn={};class Ha{static get(e){return Mn[e]}static set(e,n){Mn[e]=n}static delete(e){delete Mn[e]}}function gs(t){const e=bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].decode(t);if(e.length<33)throw new Error(\"Too short to contain a public key\");return e.slice(1,33)}function bs({publicKey:t,signature:e,payload:n}){var r;const o=Vn(n.method),s=128|parseInt(((r=n.version)==null?void 0:r.toString())||\"4\"),i=Ma(n.address),f=n.era===\"00\"?new Uint8Array([0]):Vn(n.era);if(f.length!==1&&f.length!==2)throw new Error(\"Invalid era length\");const c=parseInt(n.nonce,16),u=new Uint8Array([c&255,c>>8&255]),a=BigInt(`0x${Da(n.tip)}`),l=qa(a),h=new Uint8Array([0,...t,i,...e,...f,...u,...l,...o]),g=Va(h.length+1);return new Uint8Array([...g,s,...h])}function ys(t){const e=Vn(t),n=(0,blakejs__WEBPACK_IMPORTED_MODULE_7__.blake2b)(e,void 0,32);return\"0x\"+Buffer.from(n).toString(\"hex\")}function Vn(t){return new Uint8Array(t.replace(/^0x/,\"\").match(/.{1,2}/g).map(e=>parseInt(e,16)))}function Da(t){return t.startsWith(\"0x\")?t.slice(2):t}function Ma(t){const e=bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].decode(t)[0];return e===42?0:e===60?2:1}function Va(t){if(t<64)return new Uint8Array([t<<2]);if(t<16384){const e=t<<2|1;return new Uint8Array([e&255,e>>8&255])}else if(t<1<<30){const e=t<<2|2;return new Uint8Array([e&255,e>>8&255,e>>16&255,e>>24&255])}else throw new Error(\"Compact encoding > 2^30 not supported\")}function qa(t){if(t<BigInt(1)<<BigInt(6))return new Uint8Array([Number(t<<BigInt(2))]);if(t<BigInt(1)<<BigInt(14)){const e=t<<BigInt(2)|BigInt(1);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255))])}else if(t<BigInt(1)<<BigInt(30)){const e=t<<BigInt(2)|BigInt(2);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255)),Number(e>>BigInt(16)&BigInt(255)),Number(e>>BigInt(24)&BigInt(255))])}else throw new Error(\"BigInt compact encoding not supported > 2^30\")}function Ka(t){const e=Uint8Array.from(Buffer.from(t.signature,\"hex\")),n=gs(t.transaction.address),r=bs({publicKey:n,signature:e,payload:t.transaction}),o=Buffer.from(r).toString(\"hex\");return ys(o)}\n//# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHdhbGxldGNvbm5lY3QrdXRpbHNAMi4yMS40X3R5cGVzY3JpcHRANS41LjRfem9kQDMuMjUuNzUvbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaXFCLGFBQWEsZUFBZSx1QkFBdUIsT0FBTyx5QkFBeUIsZUFBZSxNQUFNLHdCQUF3QixHQUFHLHFCQUFxQixlQUFlLHlCQUF5QixPQUFPLG1DQUFtQyxlQUFlLE1BQU0sa0NBQWtDLEdBQUcsdUJBQXVCLGlCQUFpQixXQUFXLHFCQUFxQixhQUFhLHlCQUF5QixJQUFJLGVBQWUsTUFBTSxVQUFVLE9BQU8sU0FBUyxlQUFlLE1BQU0sd0JBQXdCLE9BQU8sV0FBVyx3QkFBd0IsRUFBRSxpQkFBaUIsTUFBTSx3QkFBd0IsT0FBTyxXQUFXLGtDQUFrQyxFQUFFLGVBQWUsZ0JBQWdCLGVBQWUsZ0JBQWdCLG9CQUFvQixXQUFXLGtDQUFrQyxtQ0FBbUMsYUFBYSxzQkFBc0IsSUFBSSxvQkFBb0IsV0FBVyxrQ0FBa0MsbUNBQW1DLGFBQWEsMEJBQTBCLElBQUksb0JBQW9CLFdBQVcsa0NBQWtDLG1DQUFtQyxhQUFhLG1CQUFtQixJQUFJLGlCQUFpQix3Q0FBd0MsbU9BQW1PLGtEQUFrRCxvQkFBb0IscUJBQXFCLDZCQUE2QixvREFBb0QsU0FBUyxxRUFBcUUsMEJBQTBCLDJFQUEyRSwwQ0FBMEMs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QixlQUFlLHNDQUFzQyxZQUFZLGVBQWUsd0NBQXdDLGlCQUFpQixlQUFlLDREQUE0RCw4REFBOEQsZUFBZSx3RUFBd0UsNEJBQTRCLCtCQUErQixnRkFBZ0YsaUNBQWlDLCtCQUErQixvSkFBb0oscUVBQXFFLGVBQWUsMEZBQTBGLDhDQUE4QyxtQ0FBbUMsYUFBcXhKO0FBQzE0USIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvLnBucG0vQHdhbGxldGNvbm5lY3QrdXRpbHNAMi4yMS40X3R5cGVzY3JpcHRANS41LjRfem9kQDMuMjUuNzUvbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL2Rpc3QvaW5kZXguZXMuanM/N2I5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7ZGV0ZWN0IGFzIG1zfWZyb21cImRldGVjdC1icm93c2VyXCI7aW1wb3J0e3RvTWlsaXNlY29uZHMgYXMgS2UsRklWRV9NSU5VVEVTIGFzIEtuLGZyb21NaWxpc2Vjb25kcyBhcyB3c31mcm9tXCJAd2FsbGV0Y29ubmVjdC90aW1lXCI7aW1wb3J0e2dldERvY3VtZW50IGFzIG5lLGdldE5hdmlnYXRvciBhcyBGbixnZXRMb2NhdGlvbiBhcyB6bn1mcm9tXCJAd2FsbGV0Y29ubmVjdC93aW5kb3ctZ2V0dGVyc1wiO2ltcG9ydHtnZXRXaW5kb3dNZXRhZGF0YSBhcyB4c31mcm9tXCJAd2FsbGV0Y29ubmVjdC93aW5kb3ctbWV0YWRhdGFcIjtpbXBvcnR7cmVjb3ZlckFkZHJlc3MgYXMgdnN9ZnJvbVwidmllbVwiO2ltcG9ydCByZSBmcm9tXCJiczU4XCI7aW1wb3J0e2RlY29kZSBhcyBFcyxlbmNvZGUgYXMgQnN9ZnJvbVwiQG1zZ3BhY2svbXNncGFja1wiO2ltcG9ydHtiYXNlMzIgYXMgSXN9ZnJvbVwiQHNjdXJlL2Jhc2VcIjtpbXBvcnR7ZGVjb2RlSldUIGFzIEFzfWZyb21cIkB3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGhcIjtpbXBvcnR7dG9TdHJpbmcgYXMgc3QsZnJvbVN0cmluZyBhcyBmdCxjb25jYXQgYXMgb2V9ZnJvbVwidWludDhhcnJheXNcIjtpbXBvcnR7UkVMQVlfSlNPTlJQQyBhcyBTc31mcm9tXCJAd2FsbGV0Y29ubmVjdC9yZWxheS1hcGlcIjtpbXBvcnR7Ymxha2UyYiBhcyBOc31mcm9tXCJibGFrZWpzXCI7Y29uc3QgeGU9XCI6XCI7ZnVuY3Rpb24gRmUodCl7Y29uc3RbZSxuXT10LnNwbGl0KHhlKTtyZXR1cm57bmFtZXNwYWNlOmUscmVmZXJlbmNlOm59fWZ1bmN0aW9uIEduKHQpe2NvbnN0e25hbWVzcGFjZTplLHJlZmVyZW5jZTpufT10O3JldHVybltlLG5dLmpvaW4oeGUpfWZ1bmN0aW9uIHplKHQpe2NvbnN0W2UsbixyXT10LnNwbGl0KHhlKTtyZXR1cm57bmFtZXNwYWNlOmUscmVmZXJlbmNlOm4sYWRkcmVzczpyfX1mdW5jdGlvbiBabih0KXtjb25zdHtuYW1lc3BhY2U6ZSxyZWZlcmVuY2U6bixhZGRyZXNzOnJ9PXQ7cmV0dXJuW2UsbixyXS5qb2luKHhlKX1mdW5jdGlvbiBHZSh0LGUpe2NvbnN0IG49W107cmV0dXJuIHQuZm9yRWFjaChyPT57Y29uc3Qgbz1lKHIpO24uaW5jbHVkZXMobyl8fG4ucHVzaChvKX0pLG59ZnVuY3Rpb24gV24odCl7Y29uc3R7YWRkcmVzczplfT16ZSh0KTtyZXR1cm4gZX1mdW5jdGlvbiBZbih0KXtjb25zdHtuYW1lc3BhY2U6ZSxyZWZlcmVuY2U6bn09emUodCk7cmV0dXJuIEduKHtuYW1lc3BhY2U6ZSxyZWZlcmVuY2U6bn0pfWZ1bmN0aW9uIE9zKHQsZSl7Y29uc3R7bmFtZXNwYWNlOm4scmVmZXJlbmNlOnJ9PUZlKGUpO3JldHVybiBabih7bmFtZXNwYWNlOm4scmVmZXJlbmNlOnIsYWRkcmVzczp0fSl9ZnVuY3Rpb24gVXModCl7cmV0dXJuIEdlKHQsV24pfWZ1bmN0aW9uIFhuKHQpe3JldHVybiBHZSh0LFluKX1mdW5jdGlvbiBfcyh0LGU9W10pe2NvbnN0IG49W107cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZvckVhY2gocj0+e2lmKGUubGVuZ3RoJiYhZS5pbmNsdWRlcyhyKSlyZXR1cm47Y29uc3Qgbz10W3JdO24ucHVzaCguLi5vLmFjY291bnRzKX0pLG59ZnVuY3Rpb24gVHModCxlPVtdKXtjb25zdCBuPVtdO3JldHVybiBPYmplY3Qua2V5cyh0KS5mb3JFYWNoKHI9PntpZihlLmxlbmd0aCYmIWUuaW5jbHVkZXMocikpcmV0dXJuO2NvbnN0IG89dFtyXTtuLnB1c2goLi4uWG4oby5hY2NvdW50cykpfSksbn1mdW5jdGlvbiBScyh0LGU9W10pe2NvbnN0IG49W107cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZvckVhY2gocj0+e2lmKGUubGVuZ3RoJiYhZS5pbmNsdWRlcyhyKSlyZXR1cm47Y29uc3Qgbz10W3JdO24ucHVzaCguLi52ZShyLG8pKX0pLG59ZnVuY3Rpb24gdmUodCxlKXtyZXR1cm4gdC5pbmNsdWRlcyhcIjpcIik/W3RdOmUuY2hhaW5zfHxbXX12YXIgJHM9T2JqZWN0LmRlZmluZVByb3BlcnR5LENzPU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzLExzPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzLEpuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsanM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxrcz1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLFplPSh0LGUsbik9PmUgaW4gdD8kcyh0LGUse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOm59KTp0W2VdPW4sUW49KHQsZSk9Pntmb3IodmFyIG4gaW4gZXx8KGU9e30pKWpzLmNhbGwoZSxuKSYmWmUodCxuLGVbbl0pO2lmKEpuKWZvcih2YXIgbiBvZiBKbihlKSlrcy5jYWxsKGUsbikmJlplKHQsbixlW25dKTtyZXR1cm4gdH0sUHM9KHQsZSk9PkNzKHQsTHMoZSkpLHRyPSh0LGUsbik9PlplKHQsdHlwZW9mIGUhPVwic3ltYm9sXCI/ZStcIlwiOmUsbik7Y29uc3QgZXI9XCJSZWFjdE5hdGl2ZVwiLEo9e3JlYWN0TmF0aXZlOlwicmVhY3QtbmF0aXZlXCIsbm9kZTpcIm5vZGVcIixicm93c2VyOlwiYnJvd3NlclwiLHVua25vd246XCJ1bmtub3duXCJ9LEVlPVwiIFwiLEhzPVwiOlwiLG5yPVwiL1wiLFdlPTIsRHM9MWUzLHJyPVwianNcIjtmdW5jdGlvbiBZZSgpe3JldHVybiB0eXBlb2YgcHJvY2VzczxcInVcIiYmdHlwZW9mIHByb2Nlc3MudmVyc2lvbnM8XCJ1XCImJnR5cGVvZiBwcm9jZXNzLnZlcnNpb25zLm5vZGU8XCJ1XCJ9ZnVuY3Rpb24gQnQoKXtyZXR1cm4hbmUoKSYmISFGbigpJiZuYXZpZ2F0b3IucHJvZHVjdD09PWVyfWZ1bmN0aW9uIE1zKCl7cmV0dXJuIEJ0KCkmJnR5cGVvZiBnbG9iYWw8XCJ1XCImJnR5cGVvZihnbG9iYWw9PW51bGw/dm9pZCAwOmdsb2JhbC5QbGF0Zm9ybSk8XCJ1XCImJihnbG9iYWw9PW51bGw/dm9pZCAwOmdsb2JhbC5QbGF0Zm9ybS5PUyk9PT1cImFuZHJvaWRcIn1mdW5jdGlvbiBWcygpe3JldHVybiBCdCgpJiZ0eXBlb2YgZ2xvYmFsPFwidVwiJiZ0eXBlb2YoZ2xvYmFsPT1udWxsP3ZvaWQgMDpnbG9iYWwuUGxhdGZvcm0pPFwidVwiJiYoZ2xvYmFsPT1udWxsP3ZvaWQgMDpnbG9iYWwuUGxhdGZvcm0uT1MpPT09XCJpb3NcIn1mdW5jdGlvbiB6dCgpe3JldHVybiFZZSgpJiYhIUZuKCkmJiEhbmUoKX1mdW5jdGlvbiBQdCgpe3JldHVybiBCdCgpP0oucmVhY3ROYXRpdmU6WWUoKT9KLm5vZGU6enQoKT9KLmJyb3dzZXI6Si51bmtub3dufWZ1bmN0aW9uIHFzKCl7dmFyIHQ7dHJ5e3JldHVybiBCdCgpJiZ0eXBlb2YgZ2xvYmFsPFwidVwiJiZ0eXBlb2YoZ2xvYmFsPT1udWxsP3ZvaWQgMDpnbG9iYWwuQXBwbGljYXRpb24pPFwidVwiPyh0PWdsb2JhbC5BcHBsaWNhdGlvbik9PW51bGw/dm9pZCAwOnQuYXBwbGljYXRpb25JZDp2b2lkIDB9Y2F0Y2h7cmV0dXJufX1mdW5jdGlvbiBvcih0LGUpe2NvbnN0IG49bmV3IFVSTFNlYXJjaFBhcmFtcyh0KTtmb3IoY29uc3QgciBvZiBPYmplY3Qua2V5cyhlKS5zb3J0KCkpaWYoZS5oYXNPd25Qcm9wZXJ0eShyKSl7Y29uc3Qgbz1lW3JdO28hPT12b2lkIDAmJm4uc2V0KHIsbyl9cmV0dXJuIG4udG9TdHJpbmcoKX1mdW5jdGlvbiBLcyh0KXt2YXIgZSxuO2NvbnN0IHI9c3IoKTt0cnl7cmV0dXJuIHQhPW51bGwmJnQudXJsJiZyLnVybCYmbmV3IFVSTCh0LnVybCkuaG9zdCE9PW5ldyBVUkwoci51cmwpLmhvc3QmJihjb25zb2xlLndhcm4oYFRoZSBjb25maWd1cmVkIFdhbGxldENvbm5lY3QgJ21ldGFkYXRhLnVybCc6JHt0LnVybH0gZGlmZmVycyBmcm9tIHRoZSBhY3R1YWwgcGFnZSB1cmw6JHtyLnVybH0uIFRoaXMgaXMgcHJvYmFibHkgdW5pbnRlbmRlZCBhbmQgY2FuIGxlYWQgdG8gaXNzdWVzLmApLHQudXJsPXIudXJsKSwoZT10Py5pY29ucykhPW51bGwmJmUubGVuZ3RoJiZ0Lmljb25zLmxlbmd0aD4wJiYodC5pY29ucz10Lmljb25zLmZpbHRlcihvPT5vIT09XCJcIikpLFBzKFFuKFFuKHt9LHIpLHQpLHt1cmw6dD8udXJsfHxyLnVybCxuYW1lOnQ/Lm5hbWV8fHIubmFtZSxkZXNjcmlwdGlvbjp0Py5kZXNjcmlwdGlvbnx8ci5kZXNjcmlwdGlvbixpY29uczoobj10Py5pY29ucykhPW51bGwmJm4ubGVuZ3RoJiZ0Lmljb25zLmxlbmd0aD4wP3QuaWNvbnM6ci5pY29uc30pfWNhdGNoKG8pe3JldHVybiBjb25zb2xlLndhcm4oXCJFcnJvciBwb3B1bGF0aW5nIGFwcCBtZXRhZGF0YVwiLG8pLHR8fHJ9fWZ1bmN0aW9uIHNyKCl7cmV0dXJuIHhzKCl8fHtuYW1lOlwiXCIsZGVzY3JpcHRpb246XCJcIix1cmw6XCJcIixpY29uczpbXCJcIl19fWZ1bmN0aW9uIEZzKHQsZSl7dmFyIG47Y29uc3Qgcj1QdCgpLG89e3Byb3RvY29sOnQsdmVyc2lvbjplLGVudjpyfTtyZXR1cm4gcj09PVwiYnJvd3NlclwiJiYoby5ob3N0PSgobj16bigpKT09bnVsbD92b2lkIDA6bi5ob3N0KXx8XCJ1bmtub3duXCIpLG99ZnVuY3Rpb24gaXIoKXtpZihQdCgpPT09Si5yZWFjdE5hdGl2ZSYmdHlwZW9mIGdsb2JhbDxcInVcIiYmdHlwZW9mKGdsb2JhbD09bnVsbD92b2lkIDA6Z2xvYmFsLlBsYXRmb3JtKTxcInVcIil7Y29uc3R7T1M6bixWZXJzaW9uOnJ9PWdsb2JhbC5QbGF0Zm9ybTtyZXR1cm5bbixyXS5qb2luKFwiLVwiKX1jb25zdCB0PW1zKCk7aWYodD09PW51bGwpcmV0dXJuXCJ1bmtub3duXCI7Y29uc3QgZT10Lm9zP3Qub3MucmVwbGFjZShcIiBcIixcIlwiKS50b0xvd2VyQ2FzZSgpOlwidW5rbm93blwiO3JldHVybiB0LnR5cGU9PT1cImJyb3dzZXJcIj9bZSx0Lm5hbWUsdC52ZXJzaW9uXS5qb2luKFwiLVwiKTpbZSx0LnZlcnNpb25dLmpvaW4oXCItXCIpfWZ1bmN0aW9uIGZyKCl7dmFyIHQ7Y29uc3QgZT1QdCgpO3JldHVybiBlPT09Si5icm93c2VyP1tlLCgodD16bigpKT09bnVsbD92b2lkIDA6dC5ob3N0KXx8XCJ1bmtub3duXCJdLmpvaW4oXCI6XCIpOmV9ZnVuY3Rpb24gY3IodCxlLG4pe2NvbnN0IHI9aXIoKSxvPWZyKCk7cmV0dXJuW1t0LGVdLmpvaW4oXCItXCIpLFtycixuXS5qb2luKFwiLVwiKSxyLG9dLmpvaW4oXCIvXCIpfWZ1bmN0aW9uIHpzKHtwcm90b2NvbDp0LHZlcnNpb246ZSxyZWxheVVybDpuLHNka1ZlcnNpb246cixhdXRoOm8scHJvamVjdElkOnMsdXNlT25DbG9zZUV2ZW50OmksYnVuZGxlSWQ6ZixwYWNrYWdlTmFtZTpjfSl7Y29uc3QgdT1uLnNwbGl0KFwiP1wiKSxhPWNyKHQsZSxyKSxsPXthdXRoOm8sdWE6YSxwcm9qZWN0SWQ6cyx1c2VPbkNsb3NlRXZlbnQ6aXx8dm9pZCAwLHBhY2thZ2VOYW1lOmN8fHZvaWQgMCxidW5kbGVJZDpmfHx2b2lkIDB9LGg9b3IodVsxXXx8XCJcIixsKTtyZXR1cm4gdVswXStcIj9cIitofWZ1bmN0aW9uIEdzKHQpe2xldCBlPSh0Lm1hdGNoKC9eW146XSsoPz06XFwvXFwvKS9naSl8fFtdKVswXTtjb25zdCBuPXR5cGVvZiBlPFwidVwiP3Quc3BsaXQoXCI6Ly9cIilbMV06dDtyZXR1cm4gZT1lPT09XCJ3c3NcIj9cImh0dHBzXCI6XCJodHRwXCIsW2Usbl0uam9pbihcIjovL1wiKX1mdW5jdGlvbiBacyh0LGUsbil7aWYoIXRbZV18fHR5cGVvZiB0W2VdIT09bil0aHJvdyBuZXcgRXJyb3IoYE1pc3Npbmcgb3IgaW52YWxpZCBcIiR7ZX1cIiBwYXJhbWApfWZ1bmN0aW9uIGFyKHQsZT1XZSl7cmV0dXJuIHVyKHQuc3BsaXQobnIpLGUpfWZ1bmN0aW9uIFdzKHQpe3JldHVybiBhcih0KS5qb2luKEVlKX1mdW5jdGlvbiBJdCh0LGUpe3JldHVybiB0LmZpbHRlcihuPT5lLmluY2x1ZGVzKG4pKS5sZW5ndGg9PT10Lmxlbmd0aH1mdW5jdGlvbiB1cih0LGU9V2Upe3JldHVybiB0LnNsaWNlKE1hdGgubWF4KHQubGVuZ3RoLWUsMCkpfWZ1bmN0aW9uIFlzKHQpe3JldHVybiBPYmplY3QuZnJvbUVudHJpZXModC5lbnRyaWVzKCkpfWZ1bmN0aW9uIFhzKHQpe3JldHVybiBuZXcgTWFwKE9iamVjdC5lbnRyaWVzKHQpKX1mdW5jdGlvbiBKcyh0LGUpe2NvbnN0IG49e307cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZvckVhY2gocj0+e25bcl09ZSh0W3JdKX0pLG59Y29uc3QgUXM9dD0+dDtmdW5jdGlvbiBscih0KXtyZXR1cm4gdC50cmltKCkucmVwbGFjZSgvXlxcdy8sZT0+ZS50b1VwcGVyQ2FzZSgpKX1mdW5jdGlvbiB0aSh0KXtyZXR1cm4gdC5zcGxpdChFZSkubWFwKGU9PmxyKGUpKS5qb2luKEVlKX1mdW5jdGlvbiBlaSh0PUtuLGUpe2NvbnN0IG49S2UodHx8S24pO2xldCByLG8scyxpO3JldHVybntyZXNvbHZlOmY9PntzJiZyJiYoY2xlYXJUaW1lb3V0KHMpLHIoZiksaT1Qcm9taXNlLnJlc29sdmUoZikpfSxyZWplY3Q6Zj0+e3MmJm8mJihjbGVhclRpbWVvdXQocyksbyhmKSl9LGRvbmU6KCk9Pm5ldyBQcm9taXNlKChmLGMpPT57aWYoaSlyZXR1cm4gZihpKTtzPXNldFRpbWVvdXQoKCk9Pntjb25zdCB1PW5ldyBFcnJvcihlKTtpPVByb21pc2UucmVqZWN0KHUpLGModSl9LG4pLHI9ZixvPWN9KX19ZnVuY3Rpb24gbmkodCxlLG4pe3JldHVybiBuZXcgUHJvbWlzZShhc3luYyhyLG8pPT57Y29uc3Qgcz1zZXRUaW1lb3V0KCgpPT5vKG5ldyBFcnJvcihuKSksZSk7dHJ5e2NvbnN0IGk9YXdhaXQgdDtyKGkpfWNhdGNoKGkpe28oaSl9Y2xlYXJUaW1lb3V0KHMpfSl9ZnVuY3Rpb24gWGUodCxlKXtpZih0eXBlb2YgZT09XCJzdHJpbmdcIiYmZS5zdGFydHNXaXRoKGAke3R9OmApKXJldHVybiBlO2lmKHQudG9Mb3dlckNhc2UoKT09PVwidG9waWNcIil7aWYodHlwZW9mIGUhPVwic3RyaW5nXCIpdGhyb3cgbmV3IEVycm9yKCdWYWx1ZSBtdXN0IGJlIFwic3RyaW5nXCIgZm9yIGV4cGlyZXIgdGFyZ2V0IHR5cGU6IHRvcGljJyk7cmV0dXJuYHRvcGljOiR7ZX1gfWVsc2UgaWYodC50b0xvd2VyQ2FzZSgpPT09XCJpZFwiKXtpZih0eXBlb2YgZSE9XCJudW1iZXJcIil0aHJvdyBuZXcgRXJyb3IoJ1ZhbHVlIG11c3QgYmUgXCJudW1iZXJcIiBmb3IgZXhwaXJlciB0YXJnZXQgdHlwZTogaWQnKTtyZXR1cm5gaWQ6JHtlfWB9dGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGV4cGlyZXIgdGFyZ2V0IHR5cGU6ICR7dH1gKX1mdW5jdGlvbiByaSh0KXtyZXR1cm4gWGUoXCJ0b3BpY1wiLHQpfWZ1bmN0aW9uIG9pKHQpe3JldHVybiBYZShcImlkXCIsdCl9ZnVuY3Rpb24gc2kodCl7Y29uc3RbZSxuXT10LnNwbGl0KFwiOlwiKSxyPXtpZDp2b2lkIDAsdG9waWM6dm9pZCAwfTtpZihlPT09XCJ0b3BpY1wiJiZ0eXBlb2Ygbj09XCJzdHJpbmdcIilyLnRvcGljPW47ZWxzZSBpZihlPT09XCJpZFwiJiZOdW1iZXIuaXNJbnRlZ2VyKE51bWJlcihuKSkpci5pZD1OdW1iZXIobik7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdGFyZ2V0LCBleHBlY3RlZCBpZDpudW1iZXIgb3IgdG9waWM6c3RyaW5nLCBnb3QgJHtlfToke259YCk7cmV0dXJuIHJ9ZnVuY3Rpb24gaWkodCxlKXtyZXR1cm4gd3MoKGV8fERhdGUubm93KCkpK0tlKHQpKX1mdW5jdGlvbiBmaSh0KXtyZXR1cm4gRGF0ZS5ub3coKT49S2UodCl9ZnVuY3Rpb24gY2kodCxlKXtyZXR1cm5gJHt0fSR7ZT9gOiR7ZX1gOlwiXCJ9YH1mdW5jdGlvbiBjdCh0PVtdLGU9W10pe3JldHVyblsuLi5uZXcgU2V0KFsuLi50LC4uLmVdKV19YXN5bmMgZnVuY3Rpb24gYWkoe2lkOnQsdG9waWM6ZSx3Y0RlZXBMaW5rOm59KXt2YXIgcjt0cnl7aWYoIW4pcmV0dXJuO2NvbnN0IG89dHlwZW9mIG49PVwic3RyaW5nXCI/SlNPTi5wYXJzZShuKTpuLHM9bz8uaHJlZjtpZih0eXBlb2YgcyE9XCJzdHJpbmdcIilyZXR1cm47Y29uc3QgaT1kcihzLHQsZSksZj1QdCgpO2lmKGY9PT1KLmJyb3dzZXIpe2lmKCEoKHI9bmUoKSkhPW51bGwmJnIuaGFzRm9jdXMoKSkpe2NvbnNvbGUud2FybihcIkRvY3VtZW50IGRvZXMgbm90IGhhdmUgZm9jdXMsIHNraXBwaW5nIGRlZXBsaW5rLlwiKTtyZXR1cm59aHIoaSl9ZWxzZSBmPT09Si5yZWFjdE5hdGl2ZSYmdHlwZW9mKGdsb2JhbD09bnVsbD92b2lkIDA6Z2xvYmFsLkxpbmtpbmcpPFwidVwiJiZhd2FpdCBnbG9iYWwuTGlua2luZy5vcGVuVVJMKGkpfWNhdGNoKG8pe2NvbnNvbGUuZXJyb3Iobyl9fWZ1bmN0aW9uIGRyKHQsZSxuKXtjb25zdCByPWByZXF1ZXN0SWQ9JHtlfSZzZXNzaW9uVG9waWM9JHtufWA7dC5lbmRzV2l0aChcIi9cIikmJih0PXQuc2xpY2UoMCwtMSkpO2xldCBvPWAke3R9YDtpZih0LnN0YXJ0c1dpdGgoXCJodHRwczovL3QubWVcIikpe2NvbnN0IHM9dC5pbmNsdWRlcyhcIj9cIik/XCImc3RhcnRhcHA9XCI6XCI/c3RhcnRhcHA9XCI7bz1gJHtvfSR7c30ke2JyKHIsITApfWB9ZWxzZSBvPWAke299L3djPyR7cn1gO3JldHVybiBvfWZ1bmN0aW9uIGhyKHQpe2xldCBlPVwiX3NlbGZcIjtncigpP2U9XCJfdG9wXCI6KHByKCl8fHQuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpfHx0LnN0YXJ0c1dpdGgoXCJodHRwOi8vXCIpKSYmKGU9XCJfYmxhbmtcIiksd2luZG93Lm9wZW4odCxlLFwibm9yZWZlcnJlciBub29wZW5lclwiKX1hc3luYyBmdW5jdGlvbiB1aSh0LGUpe2xldCBuPVwiXCI7dHJ5e2lmKHp0KCkmJihuPWxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpLG4pKXJldHVybiBuO249YXdhaXQgdC5nZXRJdGVtKGUpfWNhdGNoKHIpe2NvbnNvbGUuZXJyb3Iocil9cmV0dXJuIG59ZnVuY3Rpb24gSmUodCxlKXtyZXR1cm4gdC5maWx0ZXIobj0+ZS5pbmNsdWRlcyhuKSl9ZnVuY3Rpb24gbGkodCxlKXtpZighdC5pbmNsdWRlcyhlKSlyZXR1cm4gbnVsbDtjb25zdCBuPXQuc3BsaXQoLyhbJiw/LD1dKS8pLHI9bi5pbmRleE9mKGUpO3JldHVybiBuW3IrMl19ZnVuY3Rpb24gZGkoKXtyZXR1cm4gdHlwZW9mIGNyeXB0bzxcInVcIiYmY3J5cHRvIT1udWxsJiZjcnlwdG8ucmFuZG9tVVVJRD9jcnlwdG8ucmFuZG9tVVVJRCgpOlwieHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4XCIucmVwbGFjZSgvW3h5XS9ndSx0PT57Y29uc3QgZT1NYXRoLnJhbmRvbSgpKjE2fDA7cmV0dXJuKHQ9PT1cInhcIj9lOmUmM3w4KS50b1N0cmluZygxNil9KX1mdW5jdGlvbiBoaSgpe3JldHVybiB0eXBlb2YgcHJvY2VzczxcInVcIiYmcHJvY2Vzcy5lbnYuSVNfVklURVNUPT09XCJ0cnVlXCJ9ZnVuY3Rpb24gcHIoKXtyZXR1cm4gdHlwZW9mIHdpbmRvdzxcInVcIiYmKCEhd2luZG93LlRlbGVncmFtV2Vidmlld1Byb3h5fHwhIXdpbmRvdy5UZWxlZ3JhbXx8ISF3aW5kb3cuVGVsZWdyYW1XZWJ2aWV3UHJveHlQcm90byl9ZnVuY3Rpb24gZ3IoKXt0cnl7cmV0dXJuIHdpbmRvdy5zZWxmIT09d2luZG93LnRvcH1jYXRjaHtyZXR1cm4hMX19ZnVuY3Rpb24gYnIodCxlPSExKXtjb25zdCBuPUJ1ZmZlci5mcm9tKHQpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO3JldHVybiBlP24ucmVwbGFjZSgvWz1dL2csXCJcIik6bn1mdW5jdGlvbiBRZSh0KXtyZXR1cm4gQnVmZmVyLmZyb20odCxcImJhc2U2NFwiKS50b1N0cmluZyhcInV0Zi04XCIpfWZ1bmN0aW9uIHBpKHQpe3JldHVybiBuZXcgUHJvbWlzZShlPT5zZXRUaW1lb3V0KGUsdCkpfWNsYXNzIGdpe2NvbnN0cnVjdG9yKHtsaW1pdDplfSl7dHIodGhpcyxcImxpbWl0XCIpLHRyKHRoaXMsXCJzZXRcIiksdGhpcy5saW1pdD1lLHRoaXMuc2V0PW5ldyBTZXR9YWRkKGUpe2lmKCF0aGlzLnNldC5oYXMoZSkpe2lmKHRoaXMuc2V0LnNpemU+PXRoaXMubGltaXQpe2NvbnN0IG49dGhpcy5zZXQudmFsdWVzKCkubmV4dCgpLnZhbHVlO24mJnRoaXMuc2V0LmRlbGV0ZShuKX10aGlzLnNldC5hZGQoZSl9fWhhcyhlKXtyZXR1cm4gdGhpcy5zZXQuaGFzKGUpfX1jb25zdCBCZT1CaWdJbnQoMioqMzItMSkseXI9QmlnSW50KDMyKTtmdW5jdGlvbiBtcih0LGU9ITEpe3JldHVybiBlP3toOk51bWJlcih0JkJlKSxsOk51bWJlcih0Pj55ciZCZSl9OntoOk51bWJlcih0Pj55ciZCZSl8MCxsOk51bWJlcih0JkJlKXwwfX1mdW5jdGlvbiB3cih0LGU9ITEpe2NvbnN0IG49dC5sZW5ndGg7bGV0IHI9bmV3IFVpbnQzMkFycmF5KG4pLG89bmV3IFVpbnQzMkFycmF5KG4pO2ZvcihsZXQgcz0wO3M8bjtzKyspe2NvbnN0e2g6aSxsOmZ9PW1yKHRbc10sZSk7W3Jbc10sb1tzXV09W2ksZl19cmV0dXJuW3Isb119Y29uc3QgeHI9KHQsZSxuKT0+dD4+Pm4sdnI9KHQsZSxuKT0+dDw8MzItbnxlPj4+bixBdD0odCxlLG4pPT50Pj4+bnxlPDwzMi1uLFN0PSh0LGUsbik9PnQ8PDMyLW58ZT4+Pm4sc2U9KHQsZSxuKT0+dDw8NjQtbnxlPj4+bi0zMixpZT0odCxlLG4pPT50Pj4+bi0zMnxlPDw2NC1uLGJpPSh0LGUpPT5lLHlpPSh0LGUpPT50LG1pPSh0LGUsbik9PnQ8PG58ZT4+PjMyLW4sd2k9KHQsZSxuKT0+ZTw8bnx0Pj4+MzItbix4aT0odCxlLG4pPT5lPDxuLTMyfHQ+Pj42NC1uLHZpPSh0LGUsbik9PnQ8PG4tMzJ8ZT4+PjY0LW47ZnVuY3Rpb24gZHQodCxlLG4scil7Y29uc3Qgbz0oZT4+PjApKyhyPj4+MCk7cmV0dXJue2g6dCtuKyhvLzIqKjMyfDApfDAsbDpvfDB9fWNvbnN0IHRuPSh0LGUsbik9Pih0Pj4+MCkrKGU+Pj4wKSsobj4+PjApLGVuPSh0LGUsbixyKT0+ZStuK3IrKHQvMioqMzJ8MCl8MCxFaT0odCxlLG4scik9Pih0Pj4+MCkrKGU+Pj4wKSsobj4+PjApKyhyPj4+MCksQmk9KHQsZSxuLHIsbyk9PmUrbityK28rKHQvMioqMzJ8MCl8MCxJaT0odCxlLG4scixvKT0+KHQ+Pj4wKSsoZT4+PjApKyhuPj4+MCkrKHI+Pj4wKSsobz4+PjApLEFpPSh0LGUsbixyLG8scyk9PmUrbityK28rcysodC8yKiozMnwwKXwwLEd0PXR5cGVvZiBnbG9iYWxUaGlzPT1cIm9iamVjdFwiJiZcImNyeXB0b1wiaW4gZ2xvYmFsVGhpcz9nbG9iYWxUaGlzLmNyeXB0bzp2b2lkIDA7ZnVuY3Rpb24gbm4odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBVaW50OEFycmF5fHxBcnJheUJ1ZmZlci5pc1ZpZXcodCkmJnQuY29uc3RydWN0b3IubmFtZT09PVwiVWludDhBcnJheVwifWZ1bmN0aW9uIG10KHQpe2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcih0KXx8dDwwKXRocm93IG5ldyBFcnJvcihcInBvc2l0aXZlIGludGVnZXIgZXhwZWN0ZWQsIGdvdCBcIit0KX1mdW5jdGlvbiBhdCh0LC4uLmUpe2lmKCFubih0KSl0aHJvdyBuZXcgRXJyb3IoXCJVaW50OEFycmF5IGV4cGVjdGVkXCIpO2lmKGUubGVuZ3RoPjAmJiFlLmluY2x1ZGVzKHQubGVuZ3RoKSl0aHJvdyBuZXcgRXJyb3IoXCJVaW50OEFycmF5IGV4cGVjdGVkIG9mIGxlbmd0aCBcIitlK1wiLCBnb3QgbGVuZ3RoPVwiK3QubGVuZ3RoKX1mdW5jdGlvbiBybih0KXtpZih0eXBlb2YgdCE9XCJmdW5jdGlvblwifHx0eXBlb2YgdC5jcmVhdGUhPVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgRXJyb3IoXCJIYXNoIHNob3VsZCBiZSB3cmFwcGVkIGJ5IHV0aWxzLmNyZWF0ZUhhc2hlclwiKTttdCh0Lm91dHB1dExlbiksbXQodC5ibG9ja0xlbil9ZnVuY3Rpb24gTnQodCxlPSEwKXtpZih0LmRlc3Ryb3llZCl0aHJvdyBuZXcgRXJyb3IoXCJIYXNoIGluc3RhbmNlIGhhcyBiZWVuIGRlc3Ryb3llZFwiKTtpZihlJiZ0LmZpbmlzaGVkKXRocm93IG5ldyBFcnJvcihcIkhhc2gjZGlnZXN0KCkgaGFzIGFscmVhZHkgYmVlbiBjYWxsZWRcIil9ZnVuY3Rpb24gb24odCxlKXthdCh0KTtjb25zdCBuPWUub3V0cHV0TGVuO2lmKHQubGVuZ3RoPG4pdGhyb3cgbmV3IEVycm9yKFwiZGlnZXN0SW50bygpIGV4cGVjdHMgb3V0cHV0IGJ1ZmZlciBvZiBsZW5ndGggYXQgbGVhc3QgXCIrbil9ZnVuY3Rpb24gZmUodCl7cmV0dXJuIG5ldyBVaW50MzJBcnJheSh0LmJ1ZmZlcix0LmJ5dGVPZmZzZXQsTWF0aC5mbG9vcih0LmJ5dGVMZW5ndGgvNCkpfWZ1bmN0aW9uIHV0KC4uLnQpe2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV0uZmlsbCgwKX1mdW5jdGlvbiBzbih0KXtyZXR1cm4gbmV3IERhdGFWaWV3KHQuYnVmZmVyLHQuYnl0ZU9mZnNldCx0LmJ5dGVMZW5ndGgpfWZ1bmN0aW9uIGd0KHQsZSl7cmV0dXJuIHQ8PDMyLWV8dD4+PmV9Y29uc3QgRXI9bmV3IFVpbnQ4QXJyYXkobmV3IFVpbnQzMkFycmF5KFsyODc0NTQwMjBdKS5idWZmZXIpWzBdPT09Njg7ZnVuY3Rpb24gQnIodCl7cmV0dXJuIHQ8PDI0JjQyNzgxOTAwODB8dDw8OCYxNjcxMTY4MHx0Pj4+OCY2NTI4MHx0Pj4+MjQmMjU1fWNvbnN0IHd0PUVyP3Q9PnQ6dD0+QnIodCk7ZnVuY3Rpb24gU2kodCl7Zm9yKGxldCBlPTA7ZTx0Lmxlbmd0aDtlKyspdFtlXT1Ccih0W2VdKTtyZXR1cm4gdH1jb25zdCBPdD1Fcj90PT50OlNpLElyPXR5cGVvZiBVaW50OEFycmF5LmZyb20oW10pLnRvSGV4PT1cImZ1bmN0aW9uXCImJnR5cGVvZiBVaW50OEFycmF5LmZyb21IZXg9PVwiZnVuY3Rpb25cIixOaT1BcnJheS5mcm9tKHtsZW5ndGg6MjU2fSwodCxlKT0+ZS50b1N0cmluZygxNikucGFkU3RhcnQoMixcIjBcIikpO2Z1bmN0aW9uIGNlKHQpe2lmKGF0KHQpLElyKXJldHVybiB0LnRvSGV4KCk7bGV0IGU9XCJcIjtmb3IobGV0IG49MDtuPHQubGVuZ3RoO24rKyllKz1OaVt0W25dXTtyZXR1cm4gZX1jb25zdCB4dD17XzA6NDgsXzk6NTcsQTo2NSxGOjcwLGE6OTcsZjoxMDJ9O2Z1bmN0aW9uIEFyKHQpe2lmKHQ+PXh0Ll8wJiZ0PD14dC5fOSlyZXR1cm4gdC14dC5fMDtpZih0Pj14dC5BJiZ0PD14dC5GKXJldHVybiB0LSh4dC5BLTEwKTtpZih0Pj14dC5hJiZ0PD14dC5mKXJldHVybiB0LSh4dC5hLTEwKX1mdW5jdGlvbiBmbih0KXtpZih0eXBlb2YgdCE9XCJzdHJpbmdcIil0aHJvdyBuZXcgRXJyb3IoXCJoZXggc3RyaW5nIGV4cGVjdGVkLCBnb3QgXCIrdHlwZW9mIHQpO2lmKElyKXJldHVybiBVaW50OEFycmF5LmZyb21IZXgodCk7Y29uc3QgZT10Lmxlbmd0aCxuPWUvMjtpZihlJTIpdGhyb3cgbmV3IEVycm9yKFwiaGV4IHN0cmluZyBleHBlY3RlZCwgZ290IHVucGFkZGVkIGhleCBvZiBsZW5ndGggXCIrZSk7Y29uc3Qgcj1uZXcgVWludDhBcnJheShuKTtmb3IobGV0IG89MCxzPTA7bzxuO28rKyxzKz0yKXtjb25zdCBpPUFyKHQuY2hhckNvZGVBdChzKSksZj1Bcih0LmNoYXJDb2RlQXQocysxKSk7aWYoaT09PXZvaWQgMHx8Zj09PXZvaWQgMCl7Y29uc3QgYz10W3NdK3RbcysxXTt0aHJvdyBuZXcgRXJyb3IoJ2hleCBzdHJpbmcgZXhwZWN0ZWQsIGdvdCBub24taGV4IGNoYXJhY3RlciBcIicrYysnXCIgYXQgaW5kZXggJytzKX1yW29dPWkqMTYrZn1yZXR1cm4gcn1mdW5jdGlvbiBPaSh0KXtpZih0eXBlb2YgdCE9XCJzdHJpbmdcIil0aHJvdyBuZXcgRXJyb3IoXCJzdHJpbmcgZXhwZWN0ZWRcIik7cmV0dXJuIG5ldyBVaW50OEFycmF5KG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZSh0KSl9ZnVuY3Rpb24gaHQodCl7cmV0dXJuIHR5cGVvZiB0PT1cInN0cmluZ1wiJiYodD1PaSh0KSksYXQodCksdH1mdW5jdGlvbiBIdCguLi50KXtsZXQgZT0wO2ZvcihsZXQgcj0wO3I8dC5sZW5ndGg7cisrKXtjb25zdCBvPXRbcl07YXQobyksZSs9by5sZW5ndGh9Y29uc3Qgbj1uZXcgVWludDhBcnJheShlKTtmb3IobGV0IHI9MCxvPTA7cjx0Lmxlbmd0aDtyKyspe2NvbnN0IHM9dFtyXTtuLnNldChzLG8pLG8rPXMubGVuZ3RofXJldHVybiBufWNsYXNzIElle31mdW5jdGlvbiBhZSh0KXtjb25zdCBlPXI9PnQoKS51cGRhdGUoaHQocikpLmRpZ2VzdCgpLG49dCgpO3JldHVybiBlLm91dHB1dExlbj1uLm91dHB1dExlbixlLmJsb2NrTGVuPW4uYmxvY2tMZW4sZS5jcmVhdGU9KCk9PnQoKSxlfWZ1bmN0aW9uIFVpKHQpe2NvbnN0IGU9KHIsbyk9PnQobykudXBkYXRlKGh0KHIpKS5kaWdlc3QoKSxuPXQoe30pO3JldHVybiBlLm91dHB1dExlbj1uLm91dHB1dExlbixlLmJsb2NrTGVuPW4uYmxvY2tMZW4sZS5jcmVhdGU9cj0+dChyKSxlfWZ1bmN0aW9uIFp0KHQ9MzIpe2lmKEd0JiZ0eXBlb2YgR3QuZ2V0UmFuZG9tVmFsdWVzPT1cImZ1bmN0aW9uXCIpcmV0dXJuIEd0LmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSh0KSk7aWYoR3QmJnR5cGVvZiBHdC5yYW5kb21CeXRlcz09XCJmdW5jdGlvblwiKXJldHVybiBVaW50OEFycmF5LmZyb20oR3QucmFuZG9tQnl0ZXModCkpO3Rocm93IG5ldyBFcnJvcihcImNyeXB0by5nZXRSYW5kb21WYWx1ZXMgbXVzdCBiZSBkZWZpbmVkXCIpfWNvbnN0IF9pPUJpZ0ludCgwKSx1ZT1CaWdJbnQoMSksVGk9QmlnSW50KDIpLFJpPUJpZ0ludCg3KSwkaT1CaWdJbnQoMjU2KSxDaT1CaWdJbnQoMTEzKSxTcj1bXSxOcj1bXSxPcj1bXTtmb3IobGV0IHQ9MCxlPXVlLG49MSxyPTA7dDwyNDt0Kyspe1tuLHJdPVtyLCgyKm4rMypyKSU1XSxTci5wdXNoKDIqKDUqcituKSksTnIucHVzaCgodCsxKSoodCsyKS8yJTY0KTtsZXQgbz1faTtmb3IobGV0IHM9MDtzPDc7cysrKWU9KGU8PHVlXihlPj5SaSkqQ2kpJSRpLGUmVGkmJihvXj11ZTw8KHVlPDxCaWdJbnQocykpLXVlKTtPci5wdXNoKG8pfWNvbnN0IFVyPXdyKE9yLCEwKSxMaT1VclswXSxqaT1VclsxXSxfcj0odCxlLG4pPT5uPjMyP3hpKHQsZSxuKTptaSh0LGUsbiksVHI9KHQsZSxuKT0+bj4zMj92aSh0LGUsbik6d2kodCxlLG4pO2Z1bmN0aW9uIGtpKHQsZT0yNCl7Y29uc3Qgbj1uZXcgVWludDMyQXJyYXkoMTApO2ZvcihsZXQgcj0yNC1lO3I8MjQ7cisrKXtmb3IobGV0IGk9MDtpPDEwO2krKyluW2ldPXRbaV1edFtpKzEwXV50W2krMjBdXnRbaSszMF1edFtpKzQwXTtmb3IobGV0IGk9MDtpPDEwO2krPTIpe2NvbnN0IGY9KGkrOCklMTAsYz0oaSsyKSUxMCx1PW5bY10sYT1uW2MrMV0sbD1fcih1LGEsMSlebltmXSxoPVRyKHUsYSwxKV5uW2YrMV07Zm9yKGxldCBnPTA7Zzw1MDtnKz0xMCl0W2krZ11ePWwsdFtpK2crMV1ePWh9bGV0IG89dFsyXSxzPXRbM107Zm9yKGxldCBpPTA7aTwyNDtpKyspe2NvbnN0IGY9TnJbaV0sYz1fcihvLHMsZiksdT1UcihvLHMsZiksYT1TcltpXTtvPXRbYV0scz10W2ErMV0sdFthXT1jLHRbYSsxXT11fWZvcihsZXQgaT0wO2k8NTA7aSs9MTApe2ZvcihsZXQgZj0wO2Y8MTA7ZisrKW5bZl09dFtpK2ZdO2ZvcihsZXQgZj0wO2Y8MTA7ZisrKXRbaStmXV49fm5bKGYrMiklMTBdJm5bKGYrNCklMTBdfXRbMF1ePUxpW3JdLHRbMV1ePWppW3JdfXV0KG4pfWNsYXNzIHFuIGV4dGVuZHMgSWV7Y29uc3RydWN0b3IoZSxuLHIsbz0hMSxzPTI0KXtpZihzdXBlcigpLHRoaXMucG9zPTAsdGhpcy5wb3NPdXQ9MCx0aGlzLmZpbmlzaGVkPSExLHRoaXMuZGVzdHJveWVkPSExLHRoaXMuZW5hYmxlWE9GPSExLHRoaXMuYmxvY2tMZW49ZSx0aGlzLnN1ZmZpeD1uLHRoaXMub3V0cHV0TGVuPXIsdGhpcy5lbmFibGVYT0Y9byx0aGlzLnJvdW5kcz1zLG10KHIpLCEoMDxlJiZlPDIwMCkpdGhyb3cgbmV3IEVycm9yKFwib25seSBrZWNjYWstZjE2MDAgZnVuY3Rpb24gaXMgc3VwcG9ydGVkXCIpO3RoaXMuc3RhdGU9bmV3IFVpbnQ4QXJyYXkoMjAwKSx0aGlzLnN0YXRlMzI9ZmUodGhpcy5zdGF0ZSl9Y2xvbmUoKXtyZXR1cm4gdGhpcy5fY2xvbmVJbnRvKCl9a2VjY2FrKCl7T3QodGhpcy5zdGF0ZTMyKSxraSh0aGlzLnN0YXRlMzIsdGhpcy5yb3VuZHMpLE90KHRoaXMuc3RhdGUzMiksdGhpcy5wb3NPdXQ9MCx0aGlzLnBvcz0wfXVwZGF0ZShlKXtOdCh0aGlzKSxlPWh0KGUpLGF0KGUpO2NvbnN0e2Jsb2NrTGVuOm4sc3RhdGU6cn09dGhpcyxvPWUubGVuZ3RoO2ZvcihsZXQgcz0wO3M8bzspe2NvbnN0IGk9TWF0aC5taW4obi10aGlzLnBvcyxvLXMpO2ZvcihsZXQgZj0wO2Y8aTtmKyspclt0aGlzLnBvcysrXV49ZVtzKytdO3RoaXMucG9zPT09biYmdGhpcy5rZWNjYWsoKX1yZXR1cm4gdGhpc31maW5pc2goKXtpZih0aGlzLmZpbmlzaGVkKXJldHVybjt0aGlzLmZpbmlzaGVkPSEwO2NvbnN0e3N0YXRlOmUsc3VmZml4Om4scG9zOnIsYmxvY2tMZW46b309dGhpcztlW3JdXj1uLChuJjEyOCkhPT0wJiZyPT09by0xJiZ0aGlzLmtlY2NhaygpLGVbby0xXV49MTI4LHRoaXMua2VjY2FrKCl9d3JpdGVJbnRvKGUpe050KHRoaXMsITEpLGF0KGUpLHRoaXMuZmluaXNoKCk7Y29uc3Qgbj10aGlzLnN0YXRlLHtibG9ja0xlbjpyfT10aGlzO2ZvcihsZXQgbz0wLHM9ZS5sZW5ndGg7bzxzOyl7dGhpcy5wb3NPdXQ+PXImJnRoaXMua2VjY2FrKCk7Y29uc3QgaT1NYXRoLm1pbihyLXRoaXMucG9zT3V0LHMtbyk7ZS5zZXQobi5zdWJhcnJheSh0aGlzLnBvc091dCx0aGlzLnBvc091dCtpKSxvKSx0aGlzLnBvc091dCs9aSxvKz1pfXJldHVybiBlfXhvZkludG8oZSl7aWYoIXRoaXMuZW5hYmxlWE9GKXRocm93IG5ldyBFcnJvcihcIlhPRiBpcyBub3QgcG9zc2libGUgZm9yIHRoaXMgaW5zdGFuY2VcIik7cmV0dXJuIHRoaXMud3JpdGVJbnRvKGUpfXhvZihlKXtyZXR1cm4gbXQoZSksdGhpcy54b2ZJbnRvKG5ldyBVaW50OEFycmF5KGUpKX1kaWdlc3RJbnRvKGUpe2lmKG9uKGUsdGhpcyksdGhpcy5maW5pc2hlZCl0aHJvdyBuZXcgRXJyb3IoXCJkaWdlc3QoKSB3YXMgYWxyZWFkeSBjYWxsZWRcIik7cmV0dXJuIHRoaXMud3JpdGVJbnRvKGUpLHRoaXMuZGVzdHJveSgpLGV9ZGlnZXN0KCl7cmV0dXJuIHRoaXMuZGlnZXN0SW50byhuZXcgVWludDhBcnJheSh0aGlzLm91dHB1dExlbikpfWRlc3Ryb3koKXt0aGlzLmRlc3Ryb3llZD0hMCx1dCh0aGlzLnN0YXRlKX1fY2xvbmVJbnRvKGUpe2NvbnN0e2Jsb2NrTGVuOm4sc3VmZml4OnIsb3V0cHV0TGVuOm8scm91bmRzOnMsZW5hYmxlWE9GOml9PXRoaXM7cmV0dXJuIGV8fChlPW5ldyBxbihuLHIsbyxpLHMpKSxlLnN0YXRlMzIuc2V0KHRoaXMuc3RhdGUzMiksZS5wb3M9dGhpcy5wb3MsZS5wb3NPdXQ9dGhpcy5wb3NPdXQsZS5maW5pc2hlZD10aGlzLmZpbmlzaGVkLGUucm91bmRzPXMsZS5zdWZmaXg9cixlLm91dHB1dExlbj1vLGUuZW5hYmxlWE9GPWksZS5kZXN0cm95ZWQ9dGhpcy5kZXN0cm95ZWQsZX19Y29uc3QgUGk9KHQsZSxuKT0+YWUoKCk9Pm5ldyBxbihlLHQsbikpLEhpPVBpKDEsMTM2LDI1Ni84KTtmdW5jdGlvbiBEaSh0LGUsbixyKXtpZih0eXBlb2YgdC5zZXRCaWdVaW50NjQ9PVwiZnVuY3Rpb25cIilyZXR1cm4gdC5zZXRCaWdVaW50NjQoZSxuLHIpO2NvbnN0IG89QmlnSW50KDMyKSxzPUJpZ0ludCg0Mjk0OTY3Mjk1KSxpPU51bWJlcihuPj5vJnMpLGY9TnVtYmVyKG4mcyksYz1yPzQ6MCx1PXI/MDo0O3Quc2V0VWludDMyKGUrYyxpLHIpLHQuc2V0VWludDMyKGUrdSxmLHIpfWZ1bmN0aW9uIE1pKHQsZSxuKXtyZXR1cm4gdCZlXn50Jm59ZnVuY3Rpb24gVmkodCxlLG4pe3JldHVybiB0JmVedCZuXmUmbn1jbGFzcyBSciBleHRlbmRzIElle2NvbnN0cnVjdG9yKGUsbixyLG8pe3N1cGVyKCksdGhpcy5maW5pc2hlZD0hMSx0aGlzLmxlbmd0aD0wLHRoaXMucG9zPTAsdGhpcy5kZXN0cm95ZWQ9ITEsdGhpcy5ibG9ja0xlbj1lLHRoaXMub3V0cHV0TGVuPW4sdGhpcy5wYWRPZmZzZXQ9cix0aGlzLmlzTEU9byx0aGlzLmJ1ZmZlcj1uZXcgVWludDhBcnJheShlKSx0aGlzLnZpZXc9c24odGhpcy5idWZmZXIpfXVwZGF0ZShlKXtOdCh0aGlzKSxlPWh0KGUpLGF0KGUpO2NvbnN0e3ZpZXc6bixidWZmZXI6cixibG9ja0xlbjpvfT10aGlzLHM9ZS5sZW5ndGg7Zm9yKGxldCBpPTA7aTxzOyl7Y29uc3QgZj1NYXRoLm1pbihvLXRoaXMucG9zLHMtaSk7aWYoZj09PW8pe2NvbnN0IGM9c24oZSk7Zm9yKDtvPD1zLWk7aSs9byl0aGlzLnByb2Nlc3MoYyxpKTtjb250aW51ZX1yLnNldChlLnN1YmFycmF5KGksaStmKSx0aGlzLnBvcyksdGhpcy5wb3MrPWYsaSs9Zix0aGlzLnBvcz09PW8mJih0aGlzLnByb2Nlc3MobiwwKSx0aGlzLnBvcz0wKX1yZXR1cm4gdGhpcy5sZW5ndGgrPWUubGVuZ3RoLHRoaXMucm91bmRDbGVhbigpLHRoaXN9ZGlnZXN0SW50byhlKXtOdCh0aGlzKSxvbihlLHRoaXMpLHRoaXMuZmluaXNoZWQ9ITA7Y29uc3R7YnVmZmVyOm4sdmlldzpyLGJsb2NrTGVuOm8saXNMRTpzfT10aGlzO2xldHtwb3M6aX09dGhpcztuW2krK109MTI4LHV0KHRoaXMuYnVmZmVyLnN1YmFycmF5KGkpKSx0aGlzLnBhZE9mZnNldD5vLWkmJih0aGlzLnByb2Nlc3MociwwKSxpPTApO2ZvcihsZXQgbD1pO2w8bztsKyspbltsXT0wO0RpKHIsby04LEJpZ0ludCh0aGlzLmxlbmd0aCo4KSxzKSx0aGlzLnByb2Nlc3MociwwKTtjb25zdCBmPXNuKGUpLGM9dGhpcy5vdXRwdXRMZW47aWYoYyU0KXRocm93IG5ldyBFcnJvcihcIl9zaGEyOiBvdXRwdXRMZW4gc2hvdWxkIGJlIGFsaWduZWQgdG8gMzJiaXRcIik7Y29uc3QgdT1jLzQsYT10aGlzLmdldCgpO2lmKHU+YS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiX3NoYTI6IG91dHB1dExlbiBiaWdnZXIgdGhhbiBzdGF0ZVwiKTtmb3IobGV0IGw9MDtsPHU7bCsrKWYuc2V0VWludDMyKDQqbCxhW2xdLHMpfWRpZ2VzdCgpe2NvbnN0e2J1ZmZlcjplLG91dHB1dExlbjpufT10aGlzO3RoaXMuZGlnZXN0SW50byhlKTtjb25zdCByPWUuc2xpY2UoMCxuKTtyZXR1cm4gdGhpcy5kZXN0cm95KCkscn1fY2xvbmVJbnRvKGUpe2V8fChlPW5ldyB0aGlzLmNvbnN0cnVjdG9yKSxlLnNldCguLi50aGlzLmdldCgpKTtjb25zdHtibG9ja0xlbjpuLGJ1ZmZlcjpyLGxlbmd0aDpvLGZpbmlzaGVkOnMsZGVzdHJveWVkOmkscG9zOmZ9PXRoaXM7cmV0dXJuIGUuZGVzdHJveWVkPWksZS5maW5pc2hlZD1zLGUubGVuZ3RoPW8sZS5wb3M9ZixvJW4mJmUuYnVmZmVyLnNldChyKSxlfWNsb25lKCl7cmV0dXJuIHRoaXMuX2Nsb25lSW50bygpfX1jb25zdCBVdD1VaW50MzJBcnJheS5mcm9tKFsxNzc5MDMzNzAzLDMxNDQxMzQyNzcsMTAxMzkwNDI0MiwyNzczNDgwNzYyLDEzNTk4OTMxMTksMjYwMDgyMjkyNCw1Mjg3MzQ2MzUsMTU0MTQ1OTIyNV0pLFc9VWludDMyQXJyYXkuZnJvbShbMzQxODA3MDM2NSwzMjM4MzcxMDMyLDE2NTQyNzAyNTAsOTE0MTUwNjYzLDI0Mzg1MjkzNzAsODEyNzAyOTk5LDM1NTQ2MjM2MCw0MTQ0OTEyNjk3LDE3MzE0MDU0MTUsNDI5MDc3NTg1NywyMzk0MTgwMjMxLDE3NTA2MDMwMjUsMzY3NTAwODUyNSwxNjk0MDc2ODM5LDEyMDMwNjI4MTMsMzIwNDA3NTQyOF0pLFk9VWludDMyQXJyYXkuZnJvbShbMTc3OTAzMzcwMyw0MDg5MjM1NzIwLDMxNDQxMzQyNzcsMjIyNzg3MzU5NSwxMDEzOTA0MjQyLDQyNzExNzU3MjMsMjc3MzQ4MDc2MiwxNTk1NzUwMTI5LDEzNTk4OTMxMTksMjkxNzU2NTEzNywyNjAwODIyOTI0LDcyNTUxMTE5OSw1Mjg3MzQ2MzUsNDIxNTM4OTU0NywxNTQxNDU5MjI1LDMyNzAzMzIwOV0pLHFpPVVpbnQzMkFycmF5LmZyb20oWzExMTYzNTI0MDgsMTg5OTQ0NzQ0MSwzMDQ5MzIzNDcxLDM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCwxNDI2ODgxOTg3LDE5MjUwNzgzODgsMjE2MjA3ODIwNiwyNjE0ODg4MTAzLDMyNDgyMjI1ODAsMzgzNTM5MDQwMSw0MDIyMjI0Nzc0LDI2NDM0NzA3OCw2MDQ4MDc2MjgsNzcwMjU1OTgzLDEyNDkxNTAxMjIsMTU1NTA4MTY5MiwxOTk2MDY0OTg2LDI1NTQyMjA4ODIsMjgyMTgzNDM0OSwyOTUyOTk2ODA4LDMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLDEzOTYxODIyOTEsMTY5NTE4MzcwMCwxOTg2NjYxMDUxLDIxNzcwMjYzNTAsMjQ1Njk1NjAzNywyNzMwNDg1OTIxLDI4MjAzMDI0MTEsMzI1OTczMDgwMCwzMzQ1NzY0NzcxLDM1MTYwNjU4MTcsMzYwMDM1MjgwNCw0MDk0NTcxOTA5LDI3NTQyMzM0NCw0MzAyMjc3MzQsNTA2OTQ4NjE2LDY1OTA2MDU1Niw4ODM5OTc4NzcsOTU4MTM5NTcxLDEzMjI4MjIyMTgsMTUzNzAwMjA2MywxNzQ3ODczNzc5LDE5NTU1NjIyMjIsMjAyNDEwNDgxNSwyMjI3NzMwNDUyLDIzNjE4NTI0MjQsMjQyODQzNjQ3NCwyNzU2NzM0MTg3LDMyMDQwMzE0NzksMzMyOTMyNTI5OF0pLF90PW5ldyBVaW50MzJBcnJheSg2NCk7Y2xhc3MgS2kgZXh0ZW5kcyBScntjb25zdHJ1Y3RvcihlPTMyKXtzdXBlcig2NCxlLDgsITEpLHRoaXMuQT1VdFswXXwwLHRoaXMuQj1VdFsxXXwwLHRoaXMuQz1VdFsyXXwwLHRoaXMuRD1VdFszXXwwLHRoaXMuRT1VdFs0XXwwLHRoaXMuRj1VdFs1XXwwLHRoaXMuRz1VdFs2XXwwLHRoaXMuSD1VdFs3XXwwfWdldCgpe2NvbnN0e0E6ZSxCOm4sQzpyLEQ6byxFOnMsRjppLEc6ZixIOmN9PXRoaXM7cmV0dXJuW2UsbixyLG8scyxpLGYsY119c2V0KGUsbixyLG8scyxpLGYsYyl7dGhpcy5BPWV8MCx0aGlzLkI9bnwwLHRoaXMuQz1yfDAsdGhpcy5EPW98MCx0aGlzLkU9c3wwLHRoaXMuRj1pfDAsdGhpcy5HPWZ8MCx0aGlzLkg9Y3wwfXByb2Nlc3MoZSxuKXtmb3IobGV0IGw9MDtsPDE2O2wrKyxuKz00KV90W2xdPWUuZ2V0VWludDMyKG4sITEpO2ZvcihsZXQgbD0xNjtsPDY0O2wrKyl7Y29uc3QgaD1fdFtsLTE1XSxnPV90W2wtMl0sbT1ndChoLDcpXmd0KGgsMTgpXmg+Pj4zLGI9Z3QoZywxNyleZ3QoZywxOSleZz4+PjEwO190W2xdPWIrX3RbbC03XSttK190W2wtMTZdfDB9bGV0e0E6cixCOm8sQzpzLEQ6aSxFOmYsRjpjLEc6dSxIOmF9PXRoaXM7Zm9yKGxldCBsPTA7bDw2NDtsKyspe2NvbnN0IGg9Z3QoZiw2KV5ndChmLDExKV5ndChmLDI1KSxnPWEraCtNaShmLGMsdSkrcWlbbF0rX3RbbF18MCxiPShndChyLDIpXmd0KHIsMTMpXmd0KHIsMjIpKStWaShyLG8scyl8MDthPXUsdT1jLGM9ZixmPWkrZ3wwLGk9cyxzPW8sbz1yLHI9ZytifDB9cj1yK3RoaXMuQXwwLG89byt0aGlzLkJ8MCxzPXMrdGhpcy5DfDAsaT1pK3RoaXMuRHwwLGY9Zit0aGlzLkV8MCxjPWMrdGhpcy5GfDAsdT11K3RoaXMuR3wwLGE9YSt0aGlzLkh8MCx0aGlzLnNldChyLG8scyxpLGYsYyx1LGEpfXJvdW5kQ2xlYW4oKXt1dChfdCl9ZGVzdHJveSgpe3RoaXMuc2V0KDAsMCwwLDAsMCwwLDAsMCksdXQodGhpcy5idWZmZXIpfX1jb25zdCAkcj13cihbXCIweDQyOGEyZjk4ZDcyOGFlMjJcIixcIjB4NzEzNzQ0OTEyM2VmNjVjZFwiLFwiMHhiNWMwZmJjZmVjNGQzYjJmXCIsXCIweGU5YjVkYmE1ODE4OWRiYmNcIixcIjB4Mzk1NmMyNWJmMzQ4YjUzOFwiLFwiMHg1OWYxMTFmMWI2MDVkMDE5XCIsXCIweDkyM2Y4MmE0YWYxOTRmOWJcIixcIjB4YWIxYzVlZDVkYTZkODExOFwiLFwiMHhkODA3YWE5OGEzMDMwMjQyXCIsXCIweDEyODM1YjAxNDU3MDZmYmVcIixcIjB4MjQzMTg1YmU0ZWU0YjI4Y1wiLFwiMHg1NTBjN2RjM2Q1ZmZiNGUyXCIsXCIweDcyYmU1ZDc0ZjI3Yjg5NmZcIixcIjB4ODBkZWIxZmUzYjE2OTZiMVwiLFwiMHg5YmRjMDZhNzI1YzcxMjM1XCIsXCIweGMxOWJmMTc0Y2Y2OTI2OTRcIixcIjB4ZTQ5YjY5YzE5ZWYxNGFkMlwiLFwiMHhlZmJlNDc4NjM4NGYyNWUzXCIsXCIweDBmYzE5ZGM2OGI4Y2Q1YjVcIixcIjB4MjQwY2ExY2M3N2FjOWM2NVwiLFwiMHgyZGU5MmM2ZjU5MmIwMjc1XCIsXCIweDRhNzQ4NGFhNmVhNmU0ODNcIixcIjB4NWNiMGE5ZGNiZDQxZmJkNFwiLFwiMHg3NmY5ODhkYTgzMTE1M2I1XCIsXCIweDk4M2U1MTUyZWU2NmRmYWJcIixcIjB4YTgzMWM2NmQyZGI0MzIxMFwiLFwiMHhiMDAzMjdjODk4ZmIyMTNmXCIsXCIweGJmNTk3ZmM3YmVlZjBlZTRcIixcIjB4YzZlMDBiZjMzZGE4OGZjMlwiLFwiMHhkNWE3OTE0NzkzMGFhNzI1XCIsXCIweDA2Y2E2MzUxZTAwMzgyNmZcIixcIjB4MTQyOTI5NjcwYTBlNmU3MFwiLFwiMHgyN2I3MGE4NTQ2ZDIyZmZjXCIsXCIweDJlMWIyMTM4NWMyNmM5MjZcIixcIjB4NGQyYzZkZmM1YWM0MmFlZFwiLFwiMHg1MzM4MGQxMzlkOTViM2RmXCIsXCIweDY1MGE3MzU0OGJhZjYzZGVcIixcIjB4NzY2YTBhYmIzYzc3YjJhOFwiLFwiMHg4MWMyYzkyZTQ3ZWRhZWU2XCIsXCIweDkyNzIyYzg1MTQ4MjM1M2JcIixcIjB4YTJiZmU4YTE0Y2YxMDM2NFwiLFwiMHhhODFhNjY0YmJjNDIzMDAxXCIsXCIweGMyNGI4YjcwZDBmODk3OTFcIixcIjB4Yzc2YzUxYTMwNjU0YmUzMFwiLFwiMHhkMTkyZTgxOWQ2ZWY1MjE4XCIsXCIweGQ2OTkwNjI0NTU2NWE5MTBcIixcIjB4ZjQwZTM1ODU1NzcxMjAyYVwiLFwiMHgxMDZhYTA3MDMyYmJkMWI4XCIsXCIweDE5YTRjMTE2YjhkMmQwYzhcIixcIjB4MWUzNzZjMDg1MTQxYWI1M1wiLFwiMHgyNzQ4Nzc0Y2RmOGVlYjk5XCIsXCIweDM0YjBiY2I1ZTE5YjQ4YThcIixcIjB4MzkxYzBjYjNjNWM5NWE2M1wiLFwiMHg0ZWQ4YWE0YWUzNDE4YWNiXCIsXCIweDViOWNjYTRmNzc2M2UzNzNcIixcIjB4NjgyZTZmZjNkNmIyYjhhM1wiLFwiMHg3NDhmODJlZTVkZWZiMmZjXCIsXCIweDc4YTU2MzZmNDMxNzJmNjBcIixcIjB4ODRjODc4MTRhMWYwYWI3MlwiLFwiMHg4Y2M3MDIwODFhNjQzOWVjXCIsXCIweDkwYmVmZmZhMjM2MzFlMjhcIixcIjB4YTQ1MDZjZWJkZTgyYmRlOVwiLFwiMHhiZWY5YTNmN2IyYzY3OTE1XCIsXCIweGM2NzE3OGYyZTM3MjUzMmJcIixcIjB4Y2EyNzNlY2VlYTI2NjE5Y1wiLFwiMHhkMTg2YjhjNzIxYzBjMjA3XCIsXCIweGVhZGE3ZGQ2Y2RlMGViMWVcIixcIjB4ZjU3ZDRmN2ZlZTZlZDE3OFwiLFwiMHgwNmYwNjdhYTcyMTc2ZmJhXCIsXCIweDBhNjM3ZGM1YTJjODk4YTZcIixcIjB4MTEzZjk4MDRiZWY5MGRhZVwiLFwiMHgxYjcxMGIzNTEzMWM0NzFiXCIsXCIweDI4ZGI3N2Y1MjMwNDdkODRcIixcIjB4MzJjYWFiN2I0MGM3MjQ5M1wiLFwiMHgzYzllYmUwYTE1YzliZWJjXCIsXCIweDQzMWQ2N2M0OWMxMDBkNGNcIixcIjB4NGNjNWQ0YmVjYjNlNDJiNlwiLFwiMHg1OTdmMjk5Y2ZjNjU3ZTJhXCIsXCIweDVmY2I2ZmFiM2FkNmZhZWNcIixcIjB4NmM0NDE5OGM0YTQ3NTgxN1wiXS5tYXAodD0+QmlnSW50KHQpKSksRmk9JHJbMF0semk9JHJbMV0sVHQ9bmV3IFVpbnQzMkFycmF5KDgwKSxSdD1uZXcgVWludDMyQXJyYXkoODApO2NsYXNzIGNuIGV4dGVuZHMgUnJ7Y29uc3RydWN0b3IoZT02NCl7c3VwZXIoMTI4LGUsMTYsITEpLHRoaXMuQWg9WVswXXwwLHRoaXMuQWw9WVsxXXwwLHRoaXMuQmg9WVsyXXwwLHRoaXMuQmw9WVszXXwwLHRoaXMuQ2g9WVs0XXwwLHRoaXMuQ2w9WVs1XXwwLHRoaXMuRGg9WVs2XXwwLHRoaXMuRGw9WVs3XXwwLHRoaXMuRWg9WVs4XXwwLHRoaXMuRWw9WVs5XXwwLHRoaXMuRmg9WVsxMF18MCx0aGlzLkZsPVlbMTFdfDAsdGhpcy5HaD1ZWzEyXXwwLHRoaXMuR2w9WVsxM118MCx0aGlzLkhoPVlbMTRdfDAsdGhpcy5IbD1ZWzE1XXwwfWdldCgpe2NvbnN0e0FoOmUsQWw6bixCaDpyLEJsOm8sQ2g6cyxDbDppLERoOmYsRGw6YyxFaDp1LEVsOmEsRmg6bCxGbDpoLEdoOmcsR2w6bSxIaDpiLEhsOnZ9PXRoaXM7cmV0dXJuW2UsbixyLG8scyxpLGYsYyx1LGEsbCxoLGcsbSxiLHZdfXNldChlLG4scixvLHMsaSxmLGMsdSxhLGwsaCxnLG0sYix2KXt0aGlzLkFoPWV8MCx0aGlzLkFsPW58MCx0aGlzLkJoPXJ8MCx0aGlzLkJsPW98MCx0aGlzLkNoPXN8MCx0aGlzLkNsPWl8MCx0aGlzLkRoPWZ8MCx0aGlzLkRsPWN8MCx0aGlzLkVoPXV8MCx0aGlzLkVsPWF8MCx0aGlzLkZoPWx8MCx0aGlzLkZsPWh8MCx0aGlzLkdoPWd8MCx0aGlzLkdsPW18MCx0aGlzLkhoPWJ8MCx0aGlzLkhsPXZ8MH1wcm9jZXNzKGUsbil7Zm9yKGxldCBDPTA7QzwxNjtDKyssbis9NClUdFtDXT1lLmdldFVpbnQzMihuKSxSdFtDXT1lLmdldFVpbnQzMihuKz00KTtmb3IobGV0IEM9MTY7Qzw4MDtDKyspe2NvbnN0IEg9VHRbQy0xNV18MCxfPVJ0W0MtMTVdfDAsaz1BdChILF8sMSleQXQoSCxfLDgpXnhyKEgsXyw3KSxQPVN0KEgsXywxKV5TdChILF8sOClednIoSCxfLDcpLFI9VHRbQy0yXXwwLGQ9UnRbQy0yXXwwLHc9QXQoUixkLDE5KV5zZShSLGQsNjEpXnhyKFIsZCw2KSxwPVN0KFIsZCwxOSleaWUoUixkLDYxKV52cihSLGQsNikseT1FaShQLHAsUnRbQy03XSxSdFtDLTE2XSkseD1CaSh5LGssdyxUdFtDLTddLFR0W0MtMTZdKTtUdFtDXT14fDAsUnRbQ109eXwwfWxldHtBaDpyLEFsOm8sQmg6cyxCbDppLENoOmYsQ2w6YyxEaDp1LERsOmEsRWg6bCxFbDpoLEZoOmcsRmw6bSxHaDpiLEdsOnYsSGg6TCxIbDpWfT10aGlzO2ZvcihsZXQgQz0wO0M8ODA7QysrKXtjb25zdCBIPUF0KGwsaCwxNCleQXQobCxoLDE4KV5zZShsLGgsNDEpLF89U3QobCxoLDE0KV5TdChsLGgsMTgpXmllKGwsaCw0MSksaz1sJmdefmwmYixQPWgmbV5+aCZ2LFI9SWkoVixfLFAsemlbQ10sUnRbQ10pLGQ9QWkoUixMLEgsayxGaVtDXSxUdFtDXSksdz1SfDAscD1BdChyLG8sMjgpXnNlKHIsbywzNClec2UocixvLDM5KSx5PVN0KHIsbywyOCleaWUocixvLDM0KV5pZShyLG8sMzkpLHg9ciZzXnImZl5zJmYsQj1vJmlebyZjXmkmYztMPWJ8MCxWPXZ8MCxiPWd8MCx2PW18MCxnPWx8MCxtPWh8MCx7aDpsLGw6aH09ZHQodXwwLGF8MCxkfDAsd3wwKSx1PWZ8MCxhPWN8MCxmPXN8MCxjPWl8MCxzPXJ8MCxpPW98MDtjb25zdCBFPXRuKHcseSxCKTtyPWVuKEUsZCxwLHgpLG89RXwwfSh7aDpyLGw6b309ZHQodGhpcy5BaHwwLHRoaXMuQWx8MCxyfDAsb3wwKSkse2g6cyxsOml9PWR0KHRoaXMuQmh8MCx0aGlzLkJsfDAsc3wwLGl8MCkse2g6ZixsOmN9PWR0KHRoaXMuQ2h8MCx0aGlzLkNsfDAsZnwwLGN8MCkse2g6dSxsOmF9PWR0KHRoaXMuRGh8MCx0aGlzLkRsfDAsdXwwLGF8MCkse2g6bCxsOmh9PWR0KHRoaXMuRWh8MCx0aGlzLkVsfDAsbHwwLGh8MCkse2g6ZyxsOm19PWR0KHRoaXMuRmh8MCx0aGlzLkZsfDAsZ3wwLG18MCkse2g6YixsOnZ9PWR0KHRoaXMuR2h8MCx0aGlzLkdsfDAsYnwwLHZ8MCkse2g6TCxsOlZ9PWR0KHRoaXMuSGh8MCx0aGlzLkhsfDAsTHwwLFZ8MCksdGhpcy5zZXQocixvLHMsaSxmLGMsdSxhLGwsaCxnLG0sYix2LEwsVil9cm91bmRDbGVhbigpe3V0KFR0LFJ0KX1kZXN0cm95KCl7dXQodGhpcy5idWZmZXIpLHRoaXMuc2V0KDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDApfX1jbGFzcyBHaSBleHRlbmRzIGNue2NvbnN0cnVjdG9yKCl7c3VwZXIoNDgpLHRoaXMuQWg9V1swXXwwLHRoaXMuQWw9V1sxXXwwLHRoaXMuQmg9V1syXXwwLHRoaXMuQmw9V1szXXwwLHRoaXMuQ2g9V1s0XXwwLHRoaXMuQ2w9V1s1XXwwLHRoaXMuRGg9V1s2XXwwLHRoaXMuRGw9V1s3XXwwLHRoaXMuRWg9V1s4XXwwLHRoaXMuRWw9V1s5XXwwLHRoaXMuRmg9V1sxMF18MCx0aGlzLkZsPVdbMTFdfDAsdGhpcy5HaD1XWzEyXXwwLHRoaXMuR2w9V1sxM118MCx0aGlzLkhoPVdbMTRdfDAsdGhpcy5IbD1XWzE1XXwwfX1jb25zdCBYPVVpbnQzMkFycmF5LmZyb20oWzU3MzY0NTIwNCw0MjMwNzM5NzU2LDI2NzMxNzIzODcsMzM2MDQ0OTczMCw1OTY4ODM1NjMsMTg2Nzc1NTg1NywyNTIwMjgyOTA1LDE0OTc0MjY2MjEsMjUxOTIxOTkzOCwyODI3OTQzOTA3LDMxOTM4MzkxNDEsMTQwMTMwNTQ5MCw3MjE1MjUyNDQsNzQ2OTYxMDY2LDI0Njg4NTg1MiwyMTc3MTgyODgyXSk7Y2xhc3MgWmkgZXh0ZW5kcyBjbntjb25zdHJ1Y3Rvcigpe3N1cGVyKDMyKSx0aGlzLkFoPVhbMF18MCx0aGlzLkFsPVhbMV18MCx0aGlzLkJoPVhbMl18MCx0aGlzLkJsPVhbM118MCx0aGlzLkNoPVhbNF18MCx0aGlzLkNsPVhbNV18MCx0aGlzLkRoPVhbNl18MCx0aGlzLkRsPVhbN118MCx0aGlzLkVoPVhbOF18MCx0aGlzLkVsPVhbOV18MCx0aGlzLkZoPVhbMTBdfDAsdGhpcy5GbD1YWzExXXwwLHRoaXMuR2g9WFsxMl18MCx0aGlzLkdsPVhbMTNdfDAsdGhpcy5IaD1YWzE0XXwwLHRoaXMuSGw9WFsxNV18MH19Y29uc3QgQWU9YWUoKCk9Pm5ldyBLaSksV2k9YWUoKCk9Pm5ldyBjbiksWWk9YWUoKCk9Pm5ldyBHaSksWGk9YWUoKCk9Pm5ldyBaaSksSmk9VWludDhBcnJheS5mcm9tKFswLDEsMiwzLDQsNSw2LDcsOCw5LDEwLDExLDEyLDEzLDE0LDE1LDE0LDEwLDQsOCw5LDE1LDEzLDYsMSwxMiwwLDIsMTEsNyw1LDMsMTEsOCwxMiwwLDUsMiwxNSwxMywxMCwxNCwzLDYsNywxLDksNCw3LDksMywxLDEzLDEyLDExLDE0LDIsNiw1LDEwLDQsMCwxNSw4LDksMCw1LDcsMiw0LDEwLDE1LDE0LDEsMTEsMTIsNiw4LDMsMTMsMiwxMiw2LDEwLDAsMTEsOCwzLDQsMTMsNyw1LDE1LDE0LDEsOSwxMiw1LDEsMTUsMTQsMTMsNCwxMCwwLDcsNiwzLDksMiw4LDExLDEzLDExLDcsMTQsMTIsMSwzLDksNSwwLDE1LDQsOCw2LDIsMTAsNiwxNSwxNCw5LDExLDMsMCw4LDEyLDIsMTMsNywxLDQsMTAsNSwxMCwyLDgsNCw3LDYsMSw1LDE1LDExLDksMTQsMywxMiwxMywwLDAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsMTQsMTAsNCw4LDksMTUsMTMsNiwxLDEyLDAsMiwxMSw3LDUsMywxMSw4LDEyLDAsNSwyLDE1LDEzLDEwLDE0LDMsNiw3LDEsOSw0LDcsOSwzLDEsMTMsMTIsMTEsMTQsMiw2LDUsMTAsNCwwLDE1LDgsOSwwLDUsNywyLDQsMTAsMTUsMTQsMSwxMSwxMiw2LDgsMywxMywyLDEyLDYsMTAsMCwxMSw4LDMsNCwxMyw3LDUsMTUsMTQsMSw5XSksRj1VaW50MzJBcnJheS5mcm9tKFs0MDg5MjM1NzIwLDE3NzkwMzM3MDMsMjIyNzg3MzU5NSwzMTQ0MTM0Mjc3LDQyNzExNzU3MjMsMTAxMzkwNDI0MiwxNTk1NzUwMTI5LDI3NzM0ODA3NjIsMjkxNzU2NTEzNywxMzU5ODkzMTE5LDcyNTUxMTE5OSwyNjAwODIyOTI0LDQyMTUzODk1NDcsNTI4NzM0NjM1LDMyNzAzMzIwOSwxNTQxNDU5MjI1XSksTj1uZXcgVWludDMyQXJyYXkoMzIpO2Z1bmN0aW9uICR0KHQsZSxuLHIsbyxzKXtjb25zdCBpPW9bc10sZj1vW3MrMV07bGV0IGM9TlsyKnRdLHU9TlsyKnQrMV0sYT1OWzIqZV0sbD1OWzIqZSsxXSxoPU5bMipuXSxnPU5bMipuKzFdLG09TlsyKnJdLGI9TlsyKnIrMV0sdj10bihjLGEsaSk7dT1lbih2LHUsbCxmKSxjPXZ8MCx7RGg6YixEbDptfT17RGg6Yl51LERsOm1eY30se0RoOmIsRGw6bX09e0RoOmJpKGIsbSksRGw6eWkoYil9LHtoOmcsbDpofT1kdChnLGgsYixtKSx7Qmg6bCxCbDphfT17Qmg6bF5nLEJsOmFeaH0se0JoOmwsQmw6YX09e0JoOkF0KGwsYSwyNCksQmw6U3QobCxhLDI0KX0sTlsyKnRdPWMsTlsyKnQrMV09dSxOWzIqZV09YSxOWzIqZSsxXT1sLE5bMipuXT1oLE5bMipuKzFdPWcsTlsyKnJdPW0sTlsyKnIrMV09Yn1mdW5jdGlvbiBDdCh0LGUsbixyLG8scyl7Y29uc3QgaT1vW3NdLGY9b1tzKzFdO2xldCBjPU5bMip0XSx1PU5bMip0KzFdLGE9TlsyKmVdLGw9TlsyKmUrMV0saD1OWzIqbl0sZz1OWzIqbisxXSxtPU5bMipyXSxiPU5bMipyKzFdLHY9dG4oYyxhLGkpO3U9ZW4odix1LGwsZiksYz12fDAse0RoOmIsRGw6bX09e0RoOmJedSxEbDptXmN9LHtEaDpiLERsOm19PXtEaDpBdChiLG0sMTYpLERsOlN0KGIsbSwxNil9LHtoOmcsbDpofT1kdChnLGgsYixtKSx7Qmg6bCxCbDphfT17Qmg6bF5nLEJsOmFeaH0se0JoOmwsQmw6YX09e0JoOnNlKGwsYSw2MyksQmw6aWUobCxhLDYzKX0sTlsyKnRdPWMsTlsyKnQrMV09dSxOWzIqZV09YSxOWzIqZSsxXT1sLE5bMipuXT1oLE5bMipuKzFdPWcsTlsyKnJdPW0sTlsyKnIrMV09Yn1mdW5jdGlvbiBRaSh0LGU9e30sbixyLG8pe2lmKG10KG4pLHQ8MHx8dD5uKXRocm93IG5ldyBFcnJvcihcIm91dHB1dExlbiBiaWdnZXIgdGhhbiBrZXlMZW5cIik7Y29uc3R7a2V5OnMsc2FsdDppLHBlcnNvbmFsaXphdGlvbjpmfT1lO2lmKHMhPT12b2lkIDAmJihzLmxlbmd0aDwxfHxzLmxlbmd0aD5uKSl0aHJvdyBuZXcgRXJyb3IoXCJrZXkgbGVuZ3RoIG11c3QgYmUgdW5kZWZpbmVkIG9yIDEuLlwiK24pO2lmKGkhPT12b2lkIDAmJmkubGVuZ3RoIT09cil0aHJvdyBuZXcgRXJyb3IoXCJzYWx0IG11c3QgYmUgdW5kZWZpbmVkIG9yIFwiK3IpO2lmKGYhPT12b2lkIDAmJmYubGVuZ3RoIT09byl0aHJvdyBuZXcgRXJyb3IoXCJwZXJzb25hbGl6YXRpb24gbXVzdCBiZSB1bmRlZmluZWQgb3IgXCIrbyl9Y2xhc3MgdGYgZXh0ZW5kcyBJZXtjb25zdHJ1Y3RvcihlLG4pe3N1cGVyKCksdGhpcy5maW5pc2hlZD0hMSx0aGlzLmRlc3Ryb3llZD0hMSx0aGlzLmxlbmd0aD0wLHRoaXMucG9zPTAsbXQoZSksbXQobiksdGhpcy5ibG9ja0xlbj1lLHRoaXMub3V0cHV0TGVuPW4sdGhpcy5idWZmZXI9bmV3IFVpbnQ4QXJyYXkoZSksdGhpcy5idWZmZXIzMj1mZSh0aGlzLmJ1ZmZlcil9dXBkYXRlKGUpe050KHRoaXMpLGU9aHQoZSksYXQoZSk7Y29uc3R7YmxvY2tMZW46bixidWZmZXI6cixidWZmZXIzMjpvfT10aGlzLHM9ZS5sZW5ndGgsaT1lLmJ5dGVPZmZzZXQsZj1lLmJ1ZmZlcjtmb3IobGV0IGM9MDtjPHM7KXt0aGlzLnBvcz09PW4mJihPdChvKSx0aGlzLmNvbXByZXNzKG8sMCwhMSksT3QobyksdGhpcy5wb3M9MCk7Y29uc3QgdT1NYXRoLm1pbihuLXRoaXMucG9zLHMtYyksYT1pK2M7aWYodT09PW4mJiEoYSU0KSYmYyt1PHMpe2NvbnN0IGw9bmV3IFVpbnQzMkFycmF5KGYsYSxNYXRoLmZsb29yKChzLWMpLzQpKTtPdChsKTtmb3IobGV0IGg9MDtjK248cztoKz1vLmxlbmd0aCxjKz1uKXRoaXMubGVuZ3RoKz1uLHRoaXMuY29tcHJlc3MobCxoLCExKTtPdChsKTtjb250aW51ZX1yLnNldChlLnN1YmFycmF5KGMsYyt1KSx0aGlzLnBvcyksdGhpcy5wb3MrPXUsdGhpcy5sZW5ndGgrPXUsYys9dX1yZXR1cm4gdGhpc31kaWdlc3RJbnRvKGUpe050KHRoaXMpLG9uKGUsdGhpcyk7Y29uc3R7cG9zOm4sYnVmZmVyMzI6cn09dGhpczt0aGlzLmZpbmlzaGVkPSEwLHV0KHRoaXMuYnVmZmVyLnN1YmFycmF5KG4pKSxPdChyKSx0aGlzLmNvbXByZXNzKHIsMCwhMCksT3Qocik7Y29uc3Qgbz1mZShlKTt0aGlzLmdldCgpLmZvckVhY2goKHMsaSk9Pm9baV09d3QocykpfWRpZ2VzdCgpe2NvbnN0e2J1ZmZlcjplLG91dHB1dExlbjpufT10aGlzO3RoaXMuZGlnZXN0SW50byhlKTtjb25zdCByPWUuc2xpY2UoMCxuKTtyZXR1cm4gdGhpcy5kZXN0cm95KCkscn1fY2xvbmVJbnRvKGUpe2NvbnN0e2J1ZmZlcjpuLGxlbmd0aDpyLGZpbmlzaGVkOm8sZGVzdHJveWVkOnMsb3V0cHV0TGVuOmkscG9zOmZ9PXRoaXM7cmV0dXJuIGV8fChlPW5ldyB0aGlzLmNvbnN0cnVjdG9yKHtka0xlbjppfSkpLGUuc2V0KC4uLnRoaXMuZ2V0KCkpLGUuYnVmZmVyLnNldChuKSxlLmRlc3Ryb3llZD1zLGUuZmluaXNoZWQ9byxlLmxlbmd0aD1yLGUucG9zPWYsZS5vdXRwdXRMZW49aSxlfWNsb25lKCl7cmV0dXJuIHRoaXMuX2Nsb25lSW50bygpfX1jbGFzcyBlZiBleHRlbmRzIHRme2NvbnN0cnVjdG9yKGU9e30pe2NvbnN0IG49ZS5ka0xlbj09PXZvaWQgMD82NDplLmRrTGVuO3N1cGVyKDEyOCxuKSx0aGlzLnYwbD1GWzBdfDAsdGhpcy52MGg9RlsxXXwwLHRoaXMudjFsPUZbMl18MCx0aGlzLnYxaD1GWzNdfDAsdGhpcy52Mmw9Rls0XXwwLHRoaXMudjJoPUZbNV18MCx0aGlzLnYzbD1GWzZdfDAsdGhpcy52M2g9Rls3XXwwLHRoaXMudjRsPUZbOF18MCx0aGlzLnY0aD1GWzldfDAsdGhpcy52NWw9RlsxMF18MCx0aGlzLnY1aD1GWzExXXwwLHRoaXMudjZsPUZbMTJdfDAsdGhpcy52Nmg9RlsxM118MCx0aGlzLnY3bD1GWzE0XXwwLHRoaXMudjdoPUZbMTVdfDAsUWkobixlLDY0LDE2LDE2KTtsZXR7a2V5OnIscGVyc29uYWxpemF0aW9uOm8sc2FsdDpzfT1lLGk9MDtpZihyIT09dm9pZCAwJiYocj1odChyKSxpPXIubGVuZ3RoKSx0aGlzLnYwbF49dGhpcy5vdXRwdXRMZW58aTw8OHw2NTUzNnwxPDwyNCxzIT09dm9pZCAwKXtzPWh0KHMpO2NvbnN0IGY9ZmUocyk7dGhpcy52NGxePXd0KGZbMF0pLHRoaXMudjRoXj13dChmWzFdKSx0aGlzLnY1bF49d3QoZlsyXSksdGhpcy52NWhePXd0KGZbM10pfWlmKG8hPT12b2lkIDApe289aHQobyk7Y29uc3QgZj1mZShvKTt0aGlzLnY2bF49d3QoZlswXSksdGhpcy52NmhePXd0KGZbMV0pLHRoaXMudjdsXj13dChmWzJdKSx0aGlzLnY3aF49d3QoZlszXSl9aWYociE9PXZvaWQgMCl7Y29uc3QgZj1uZXcgVWludDhBcnJheSh0aGlzLmJsb2NrTGVuKTtmLnNldChyKSx0aGlzLnVwZGF0ZShmKX19Z2V0KCl7bGV0e3YwbDplLHYwaDpuLHYxbDpyLHYxaDpvLHYybDpzLHYyaDppLHYzbDpmLHYzaDpjLHY0bDp1LHY0aDphLHY1bDpsLHY1aDpoLHY2bDpnLHY2aDptLHY3bDpiLHY3aDp2fT10aGlzO3JldHVybltlLG4scixvLHMsaSxmLGMsdSxhLGwsaCxnLG0sYix2XX1zZXQoZSxuLHIsbyxzLGksZixjLHUsYSxsLGgsZyxtLGIsdil7dGhpcy52MGw9ZXwwLHRoaXMudjBoPW58MCx0aGlzLnYxbD1yfDAsdGhpcy52MWg9b3wwLHRoaXMudjJsPXN8MCx0aGlzLnYyaD1pfDAsdGhpcy52M2w9ZnwwLHRoaXMudjNoPWN8MCx0aGlzLnY0bD11fDAsdGhpcy52NGg9YXwwLHRoaXMudjVsPWx8MCx0aGlzLnY1aD1ofDAsdGhpcy52Nmw9Z3wwLHRoaXMudjZoPW18MCx0aGlzLnY3bD1ifDAsdGhpcy52N2g9dnwwfWNvbXByZXNzKGUsbixyKXt0aGlzLmdldCgpLmZvckVhY2goKGMsdSk9Pk5bdV09YyksTi5zZXQoRiwxNik7bGV0e2g6byxsOnN9PW1yKEJpZ0ludCh0aGlzLmxlbmd0aCkpO05bMjRdPUZbOF1ecyxOWzI1XT1GWzldXm8sciYmKE5bMjhdPX5OWzI4XSxOWzI5XT1+TlsyOV0pO2xldCBpPTA7Y29uc3QgZj1KaTtmb3IobGV0IGM9MDtjPDEyO2MrKykkdCgwLDQsOCwxMixlLG4rMipmW2krK10pLEN0KDAsNCw4LDEyLGUsbisyKmZbaSsrXSksJHQoMSw1LDksMTMsZSxuKzIqZltpKytdKSxDdCgxLDUsOSwxMyxlLG4rMipmW2krK10pLCR0KDIsNiwxMCwxNCxlLG4rMipmW2krK10pLEN0KDIsNiwxMCwxNCxlLG4rMipmW2krK10pLCR0KDMsNywxMSwxNSxlLG4rMipmW2krK10pLEN0KDMsNywxMSwxNSxlLG4rMipmW2krK10pLCR0KDAsNSwxMCwxNSxlLG4rMipmW2krK10pLEN0KDAsNSwxMCwxNSxlLG4rMipmW2krK10pLCR0KDEsNiwxMSwxMixlLG4rMipmW2krK10pLEN0KDEsNiwxMSwxMixlLG4rMipmW2krK10pLCR0KDIsNyw4LDEzLGUsbisyKmZbaSsrXSksQ3QoMiw3LDgsMTMsZSxuKzIqZltpKytdKSwkdCgzLDQsOSwxNCxlLG4rMipmW2krK10pLEN0KDMsNCw5LDE0LGUsbisyKmZbaSsrXSk7dGhpcy52MGxePU5bMF1eTlsxNl0sdGhpcy52MGhePU5bMV1eTlsxN10sdGhpcy52MWxePU5bMl1eTlsxOF0sdGhpcy52MWhePU5bM11eTlsxOV0sdGhpcy52MmxePU5bNF1eTlsyMF0sdGhpcy52MmhePU5bNV1eTlsyMV0sdGhpcy52M2xePU5bNl1eTlsyMl0sdGhpcy52M2hePU5bN11eTlsyM10sdGhpcy52NGxePU5bOF1eTlsyNF0sdGhpcy52NGhePU5bOV1eTlsyNV0sdGhpcy52NWxePU5bMTBdXk5bMjZdLHRoaXMudjVoXj1OWzExXV5OWzI3XSx0aGlzLnY2bF49TlsxMl1eTlsyOF0sdGhpcy52NmhePU5bMTNdXk5bMjldLHRoaXMudjdsXj1OWzE0XV5OWzMwXSx0aGlzLnY3aF49TlsxNV1eTlszMV0sdXQoTil9ZGVzdHJveSgpe3RoaXMuZGVzdHJveWVkPSEwLHV0KHRoaXMuYnVmZmVyMzIpLHRoaXMuc2V0KDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDApfX1jb25zdCBuZj1VaSh0PT5uZXcgZWYodCkpLHJmPVwiaHR0cHM6Ly9ycGMud2FsbGV0Y29ubmVjdC5vcmcvdjFcIjtmdW5jdGlvbiBhbih0KXtjb25zdCBlPWBcdTAwMTlFdGhlcmV1bSBTaWduZWQgTWVzc2FnZTpcbiR7dC5sZW5ndGh9YCxuPW5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShlK3QpO3JldHVyblwiMHhcIitCdWZmZXIuZnJvbShIaShuKSkudG9TdHJpbmcoXCJoZXhcIil9YXN5bmMgZnVuY3Rpb24gQ3IodCxlLG4scixvLHMpe3N3aXRjaChuLnQpe2Nhc2VcImVpcDE5MVwiOnJldHVybiBhd2FpdCBMcih0LGUsbi5zKTtjYXNlXCJlaXAxMjcxXCI6cmV0dXJuIGF3YWl0IGpyKHQsZSxuLnMscixvLHMpO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKGB2ZXJpZnlTaWduYXR1cmUgZmFpbGVkOiBBdHRlbXB0ZWQgdG8gdmVyaWZ5IENhY2FvU2lnbmF0dXJlIHdpdGggdW5rbm93biB0eXBlOiAke24udH1gKX19YXN5bmMgZnVuY3Rpb24gTHIodCxlLG4pe3JldHVybihhd2FpdCB2cyh7aGFzaDphbihlKSxzaWduYXR1cmU6bn0pKS50b0xvd2VyQ2FzZSgpPT09dC50b0xvd2VyQ2FzZSgpfWFzeW5jIGZ1bmN0aW9uIGpyKHQsZSxuLHIsbyxzKXtjb25zdCBpPUZlKHIpO2lmKCFpLm5hbWVzcGFjZXx8IWkucmVmZXJlbmNlKXRocm93IG5ldyBFcnJvcihgaXNWYWxpZEVpcDEyNzFTaWduYXR1cmUgZmFpbGVkOiBjaGFpbklkIG11c3QgYmUgaW4gQ0FJUC0yIGZvcm1hdCwgcmVjZWl2ZWQ6ICR7cn1gKTt0cnl7Y29uc3QgZj1cIjB4MTYyNmJhN2VcIixjPVwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0MFwiLHU9bi5zdWJzdHJpbmcoMiksYT0odS5sZW5ndGgvMikudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDY0LFwiMFwiKSxsPShlLnN0YXJ0c1dpdGgoXCIweFwiKT9lOmFuKGUpKS5zdWJzdHJpbmcoMiksaD1mK2wrYythK3UsZz1hd2FpdCBmZXRjaChgJHtzfHxyZn0vP2NoYWluSWQ9JHtyfSZwcm9qZWN0SWQ9JHtvfWAse2hlYWRlcnM6e1wiQ29udGVudC1UeXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJ9LG1ldGhvZDpcIlBPU1RcIixib2R5OkpTT04uc3RyaW5naWZ5KHtpZDpvZigpLGpzb25ycGM6XCIyLjBcIixtZXRob2Q6XCJldGhfY2FsbFwiLHBhcmFtczpbe3RvOnQsZGF0YTpofSxcImxhdGVzdFwiXX0pfSkse3Jlc3VsdDptfT1hd2FpdCBnLmpzb24oKTtyZXR1cm4gbT9tLnNsaWNlKDAsZi5sZW5ndGgpLnRvTG93ZXJDYXNlKCk9PT1mLnRvTG93ZXJDYXNlKCk6ITF9Y2F0Y2goZil7cmV0dXJuIGNvbnNvbGUuZXJyb3IoXCJpc1ZhbGlkRWlwMTI3MVNpZ25hdHVyZTogXCIsZiksITF9fWZ1bmN0aW9uIG9mKCl7cmV0dXJuIERhdGUubm93KCkrTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjFlMyl9ZnVuY3Rpb24gc2YodCl7Y29uc3QgZT1hdG9iKHQpLG49bmV3IFVpbnQ4QXJyYXkoZS5sZW5ndGgpO2ZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7aSsrKW5baV09ZS5jaGFyQ29kZUF0KGkpO2NvbnN0IHI9blswXTtpZihyPT09MCl0aHJvdyBuZXcgRXJyb3IoXCJObyBzaWduYXR1cmVzIGZvdW5kXCIpO2NvbnN0IG89MStyKjY0O2lmKG4ubGVuZ3RoPG8pdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNhY3Rpb24gZGF0YSB0b28gc2hvcnQgZm9yIGNsYWltZWQgc2lnbmF0dXJlIGNvdW50XCIpO2lmKG4ubGVuZ3RoPDEwMCl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2FjdGlvbiB0b28gc2hvcnRcIik7Y29uc3Qgcz1CdWZmZXIuZnJvbSh0LFwiYmFzZTY0XCIpLnNsaWNlKDEsNjUpO3JldHVybiByZS5lbmNvZGUocyl9ZnVuY3Rpb24gZmYodCl7Y29uc3QgZT1uZXcgVWludDhBcnJheShCdWZmZXIuZnJvbSh0LFwiYmFzZTY0XCIpKSxuPUFycmF5LmZyb20oXCJUcmFuc2FjdGlvbkRhdGE6OlwiKS5tYXAocz0+cy5jaGFyQ29kZUF0KDApKSxyPW5ldyBVaW50OEFycmF5KG4ubGVuZ3RoK2UubGVuZ3RoKTtyLnNldChuKSxyLnNldChlLG4ubGVuZ3RoKTtjb25zdCBvPW5mKHIse2RrTGVuOjMyfSk7cmV0dXJuIHJlLmVuY29kZShvKX1mdW5jdGlvbiBjZih0KXtjb25zdCBlPW5ldyBVaW50OEFycmF5KEFlKGtyKHQpKSk7cmV0dXJuIHJlLmVuY29kZShlKX1mdW5jdGlvbiBrcih0KXtpZih0IGluc3RhbmNlb2YgVWludDhBcnJheSlyZXR1cm4gdDtpZihBcnJheS5pc0FycmF5KHQpKXJldHVybiBuZXcgVWludDhBcnJheSh0KTtpZih0eXBlb2YgdD09XCJvYmplY3RcIiYmdCE9bnVsbCYmdC5kYXRhKXJldHVybiBuZXcgVWludDhBcnJheShPYmplY3QudmFsdWVzKHQuZGF0YSkpO2lmKHR5cGVvZiB0PT1cIm9iamVjdFwiJiZ0KXJldHVybiBuZXcgVWludDhBcnJheShPYmplY3QudmFsdWVzKHQpKTt0aHJvdyBuZXcgRXJyb3IoXCJnZXROZWFyVWludDhBcnJheUZyb21CeXRlczogVW5leHBlY3RlZCByZXN1bHQgdHlwZSBmcm9tIGJ5dGVzIGFycmF5XCIpfWZ1bmN0aW9uIGFmKHQpe2NvbnN0IGU9QnVmZmVyLmZyb20odCxcImJhc2U2NFwiKSxuPUVzKGUpLnR4bjtpZighbil0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHNpZ25lZCB0cmFuc2FjdGlvbjogbWlzc2luZyAndHhuJyBmaWVsZFwiKTtjb25zdCByPUJzKG4pLG89QnVmZmVyLmZyb20oXCJUWFwiKSxzPUJ1ZmZlci5jb25jYXQoW28sQnVmZmVyLmZyb20ocildKSxpPVhpKHMpO3JldHVybiBJcy5lbmNvZGUoaSkucmVwbGFjZSgvPSskLyxcIlwiKX1mdW5jdGlvbiB1bih0KXtjb25zdCBlPVtdO2xldCBuPUJpZ0ludCh0KTtmb3IoO24+PUJpZ0ludCgxMjgpOyllLnB1c2goTnVtYmVyKG4mQmlnSW50KDEyNyl8QmlnSW50KDEyOCkpKSxuPj49QmlnSW50KDcpO3JldHVybiBlLnB1c2goTnVtYmVyKG4pKSxCdWZmZXIuZnJvbShlKX1mdW5jdGlvbiB1Zih0KXtjb25zdCBlPUJ1ZmZlci5mcm9tKHQuc2lnbmVkLmJvZHlCeXRlcyxcImJhc2U2NFwiKSxuPUJ1ZmZlci5mcm9tKHQuc2lnbmVkLmF1dGhJbmZvQnl0ZXMsXCJiYXNlNjRcIikscj1CdWZmZXIuZnJvbSh0LnNpZ25hdHVyZS5zaWduYXR1cmUsXCJiYXNlNjRcIiksbz1bXTtvLnB1c2goQnVmZmVyLmZyb20oWzEwXSkpLG8ucHVzaCh1bihlLmxlbmd0aCkpLG8ucHVzaChlKSxvLnB1c2goQnVmZmVyLmZyb20oWzE4XSkpLG8ucHVzaCh1bihuLmxlbmd0aCkpLG8ucHVzaChuKSxvLnB1c2goQnVmZmVyLmZyb20oWzI2XSkpLG8ucHVzaCh1bihyLmxlbmd0aCkpLG8ucHVzaChyKTtjb25zdCBzPUJ1ZmZlci5jb25jYXQobyksaT1BZShzKTtyZXR1cm4gQnVmZmVyLmZyb20oaSkudG9TdHJpbmcoXCJoZXhcIikudG9VcHBlckNhc2UoKX12YXIgbGY9T2JqZWN0LmRlZmluZVByb3BlcnR5LGRmPU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzLGhmPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzLFByPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMscGY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxnZj1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLEhyPSh0LGUsbik9PmUgaW4gdD9sZih0LGUse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOm59KTp0W2VdPW4sbG49KHQsZSk9Pntmb3IodmFyIG4gaW4gZXx8KGU9e30pKXBmLmNhbGwoZSxuKSYmSHIodCxuLGVbbl0pO2lmKFByKWZvcih2YXIgbiBvZiBQcihlKSlnZi5jYWxsKGUsbikmJkhyKHQsbixlW25dKTtyZXR1cm4gdH0sRHI9KHQsZSk9PmRmKHQsaGYoZSkpO2NvbnN0IGJmPVwiZGlkOnBraDpcIixTZT10PT50Py5zcGxpdChcIjpcIiksTXI9dD0+e2NvbnN0IGU9dCYmU2UodCk7aWYoZSlyZXR1cm4gdC5pbmNsdWRlcyhiZik/ZVszXTplWzFdfSxWcj10PT57Y29uc3QgZT10JiZTZSh0KTtpZihlKXJldHVybiBlWzJdK1wiOlwiK2VbM119LGRuPXQ9Pntjb25zdCBlPXQmJlNlKHQpO2lmKGUpcmV0dXJuIGUucG9wKCl9O2FzeW5jIGZ1bmN0aW9uIHlmKHQpe2NvbnN0e2NhY2FvOmUscHJvamVjdElkOm59PXQse3M6cixwOm99PWUscz1xcihvLG8uaXNzKSxpPWRuKG8uaXNzKTtyZXR1cm4gYXdhaXQgQ3IoaSxzLHIsVnIoby5pc3MpLG4pfWNvbnN0IHFyPSh0LGUpPT57Y29uc3Qgbj1gJHt0LmRvbWFpbn0gd2FudHMgeW91IHRvIHNpZ24gaW4gd2l0aCB5b3VyIEV0aGVyZXVtIGFjY291bnQ6YCxyPWRuKGUpO2lmKCF0LmF1ZCYmIXQudXJpKXRocm93IG5ldyBFcnJvcihcIkVpdGhlciBgYXVkYCBvciBgdXJpYCBpcyByZXF1aXJlZCB0byBjb25zdHJ1Y3QgdGhlIG1lc3NhZ2VcIik7bGV0IG89dC5zdGF0ZW1lbnR8fHZvaWQgMDtjb25zdCBzPWBVUkk6ICR7dC5hdWR8fHQudXJpfWAsaT1gVmVyc2lvbjogJHt0LnZlcnNpb259YCxmPWBDaGFpbiBJRDogJHtNcihlKX1gLGM9YE5vbmNlOiAke3Qubm9uY2V9YCx1PWBJc3N1ZWQgQXQ6ICR7dC5pYXR9YCxhPXQuZXhwP2BFeHBpcmF0aW9uIFRpbWU6ICR7dC5leHB9YDp2b2lkIDAsbD10Lm5iZj9gTm90IEJlZm9yZTogJHt0Lm5iZn1gOnZvaWQgMCxoPXQucmVxdWVzdElkP2BSZXF1ZXN0IElEOiAke3QucmVxdWVzdElkfWA6dm9pZCAwLGc9dC5yZXNvdXJjZXM/YFJlc291cmNlczoke3QucmVzb3VyY2VzLm1hcChiPT5gXG4tICR7Yn1gKS5qb2luKFwiXCIpfWA6dm9pZCAwLG09T2UodC5yZXNvdXJjZXMpO2lmKG0pe2NvbnN0IGI9THQobSk7bz1nbihvLGIpfXJldHVybltuLHIsXCJcIixvLFwiXCIscyxpLGYsYyx1LGEsbCxoLGddLmZpbHRlcihiPT5iIT1udWxsKS5qb2luKGBcbmApfTtmdW5jdGlvbiBtZih0LGUsbil7cmV0dXJuIG4uaW5jbHVkZXMoXCJkaWQ6cGtoOlwiKXx8KG49YGRpZDpwa2g6JHtufWApLHtoOnt0OlwiY2FpcDEyMlwifSxwOntpc3M6bixkb21haW46dC5kb21haW4sYXVkOnQuYXVkLHZlcnNpb246dC52ZXJzaW9uLG5vbmNlOnQubm9uY2UsaWF0OnQuaWF0LHN0YXRlbWVudDp0LnN0YXRlbWVudCxyZXF1ZXN0SWQ6dC5yZXF1ZXN0SWQscmVzb3VyY2VzOnQucmVzb3VyY2VzLG5iZjp0Lm5iZixleHA6dC5leHB9LHM6ZX19ZnVuY3Rpb24gd2YodCl7dmFyIGU7Y29uc3R7YXV0aFBheWxvYWQ6bixjaGFpbnM6cixtZXRob2RzOm99PXQscz1uLnN0YXRlbWVudHx8XCJcIjtpZighKHIhPW51bGwmJnIubGVuZ3RoKSlyZXR1cm4gbjtjb25zdCBpPW4uY2hhaW5zLGY9SmUoaSxyKTtpZighKGYhPW51bGwmJmYubGVuZ3RoKSl0aHJvdyBuZXcgRXJyb3IoXCJObyBzdXBwb3J0ZWQgY2hhaW5zXCIpO2NvbnN0IGM9S3Iobi5yZXNvdXJjZXMpO2lmKCFjKXJldHVybiBuO2J0KGMpO2NvbnN0IHU9RnIoYyxcImVpcDE1NVwiKTtsZXQgYT1uPy5yZXNvdXJjZXN8fFtdO2lmKHUhPW51bGwmJnUubGVuZ3RoKXtjb25zdCBsPXpyKHUpLGg9SmUobCxvKTtpZighKGghPW51bGwmJmgubGVuZ3RoKSl0aHJvdyBuZXcgRXJyb3IoYFN1cHBvcnRlZCBtZXRob2RzIGRvbid0IHNhdGlzZnkgdGhlIHJlcXVlc3RlZDogJHtKU09OLnN0cmluZ2lmeShsKX0sIHN1cHBvcnRlZDogJHtKU09OLnN0cmluZ2lmeShvKX1gKTtjb25zdCBnPWhuKFwicmVxdWVzdFwiLGgse2NoYWluczpmfSksbT1ZcihjLFwiZWlwMTU1XCIsZyk7YT0oKGU9bj8ucmVzb3VyY2VzKT09bnVsbD92b2lkIDA6ZS5zbGljZSgwLC0xKSl8fFtdLGEucHVzaChOZShtKSl9cmV0dXJuIERyKGxuKHt9LG4pLHtzdGF0ZW1lbnQ6SnIocyxPZShhKSksY2hhaW5zOmYscmVzb3VyY2VzOm4hPW51bGwmJm4ucmVzb3VyY2VzfHxhLmxlbmd0aD4wP2E6dm9pZCAwfSl9ZnVuY3Rpb24gS3IodCl7Y29uc3QgZT1PZSh0KTtpZihlJiZwbihlKSlyZXR1cm4gTHQoZSl9ZnVuY3Rpb24geGYodCxlKXt2YXIgbjtyZXR1cm4obj10Py5hdHQpPT1udWxsP3ZvaWQgMDpuLmhhc093blByb3BlcnR5KGUpfWZ1bmN0aW9uIEZyKHQsZSl7dmFyIG4scjtyZXR1cm4obj10Py5hdHQpIT1udWxsJiZuW2VdP09iamVjdC5rZXlzKChyPXQ/LmF0dCk9PW51bGw/dm9pZCAwOnJbZV0pOltdfWZ1bmN0aW9uIHZmKHQpe3JldHVybiB0Py5tYXAoZT0+T2JqZWN0LmtleXMoZSkpfHxbXX1mdW5jdGlvbiB6cih0KXtyZXR1cm4gdD8ubWFwKGU9Pnt2YXIgbjtyZXR1cm4obj1lLnNwbGl0KFwiL1wiKSk9PW51bGw/dm9pZCAwOm5bMV19KXx8W119ZnVuY3Rpb24gR3IodCl7cmV0dXJuIEJ1ZmZlci5mcm9tKEpTT04uc3RyaW5naWZ5KHQpKS50b1N0cmluZyhcImJhc2U2NFwiKX1mdW5jdGlvbiBacih0KXtyZXR1cm4gSlNPTi5wYXJzZShCdWZmZXIuZnJvbSh0LFwiYmFzZTY0XCIpLnRvU3RyaW5nKFwidXRmLThcIikpfWZ1bmN0aW9uIGJ0KHQpe2lmKCF0KXRocm93IG5ldyBFcnJvcihcIk5vIHJlY2FwIHByb3ZpZGVkLCB2YWx1ZSBpcyB1bmRlZmluZWRcIik7aWYoIXQuYXR0KXRocm93IG5ldyBFcnJvcihcIk5vIGBhdHRgIHByb3BlcnR5IGZvdW5kXCIpO2NvbnN0IGU9T2JqZWN0LmtleXModC5hdHQpO2lmKCEoZSE9bnVsbCYmZS5sZW5ndGgpKXRocm93IG5ldyBFcnJvcihcIk5vIHJlc291cmNlcyBmb3VuZCBpbiBgYXR0YCBwcm9wZXJ0eVwiKTtlLmZvckVhY2gobj0+e2NvbnN0IHI9dC5hdHRbbl07aWYoQXJyYXkuaXNBcnJheShyKSl0aHJvdyBuZXcgRXJyb3IoYFJlc291cmNlIG11c3QgYmUgYW4gb2JqZWN0OiAke259YCk7aWYodHlwZW9mIHIhPVwib2JqZWN0XCIpdGhyb3cgbmV3IEVycm9yKGBSZXNvdXJjZSBtdXN0IGJlIGFuIG9iamVjdDogJHtufWApO2lmKCFPYmplY3Qua2V5cyhyKS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKGBSZXNvdXJjZSBvYmplY3QgaXMgZW1wdHk6ICR7bn1gKTtPYmplY3Qua2V5cyhyKS5mb3JFYWNoKG89Pntjb25zdCBzPXJbb107aWYoIUFycmF5LmlzQXJyYXkocykpdGhyb3cgbmV3IEVycm9yKGBBYmlsaXR5IGxpbWl0cyAke299IG11c3QgYmUgYW4gYXJyYXkgb2Ygb2JqZWN0cywgZm91bmQ6ICR7c31gKTtpZighcy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKGBWYWx1ZSBvZiAke299IGlzIGVtcHR5IGFycmF5LCBtdXN0IGJlIGFuIGFycmF5IHdpdGggb2JqZWN0c2ApO3MuZm9yRWFjaChpPT57aWYodHlwZW9mIGkhPVwib2JqZWN0XCIpdGhyb3cgbmV3IEVycm9yKGBBYmlsaXR5IGxpbWl0cyAoJHtvfSkgbXVzdCBiZSBhbiBhcnJheSBvZiBvYmplY3RzLCBmb3VuZDogJHtpfWApfSl9KX0pfWZ1bmN0aW9uIFdyKHQsZSxuLHI9e30pe3JldHVybiBuPy5zb3J0KChvLHMpPT5vLmxvY2FsZUNvbXBhcmUocykpLHthdHQ6e1t0XTpobihlLG4scil9fX1mdW5jdGlvbiBZcih0LGUsbil7dmFyIHI7dC5hdHRbZV09bG4oe30sbik7Y29uc3Qgbz0ocj1PYmplY3Qua2V5cyh0LmF0dCkpPT1udWxsP3ZvaWQgMDpyLnNvcnQoKGksZik9PmkubG9jYWxlQ29tcGFyZShmKSkscz17YXR0Ont9fTtyZXR1cm4gby5yZWR1Y2UoKGksZik9PihpLmF0dFtmXT10LmF0dFtmXSxpKSxzKX1mdW5jdGlvbiBobih0LGUsbj17fSl7ZT1lPy5zb3J0KChvLHMpPT5vLmxvY2FsZUNvbXBhcmUocykpO2NvbnN0IHI9ZS5tYXAobz0+KHtbYCR7dH0vJHtvfWBdOltuXX0pKTtyZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwuLi5yKX1mdW5jdGlvbiBOZSh0KXtyZXR1cm4gYnQodCksYHVybjpyZWNhcDoke0dyKHQpLnJlcGxhY2UoLz0vZyxcIlwiKX1gfWZ1bmN0aW9uIEx0KHQpe2NvbnN0IGU9WnIodC5yZXBsYWNlKFwidXJuOnJlY2FwOlwiLFwiXCIpKTtyZXR1cm4gYnQoZSksZX1mdW5jdGlvbiBFZih0LGUsbil7Y29uc3Qgcj1Xcih0LGUsbik7cmV0dXJuIE5lKHIpfWZ1bmN0aW9uIHBuKHQpe3JldHVybiB0JiZ0LmluY2x1ZGVzKFwidXJuOnJlY2FwOlwiKX1mdW5jdGlvbiBCZih0LGUpe2NvbnN0IG49THQodCkscj1MdChlKSxvPVhyKG4scik7cmV0dXJuIE5lKG8pfWZ1bmN0aW9uIFhyKHQsZSl7YnQodCksYnQoZSk7Y29uc3Qgbj1PYmplY3Qua2V5cyh0LmF0dCkuY29uY2F0KE9iamVjdC5rZXlzKGUuYXR0KSkuc29ydCgobyxzKT0+by5sb2NhbGVDb21wYXJlKHMpKSxyPXthdHQ6e319O3JldHVybiBuLmZvckVhY2gobz0+e3ZhciBzLGk7T2JqZWN0LmtleXMoKChzPXQuYXR0KT09bnVsbD92b2lkIDA6c1tvXSl8fHt9KS5jb25jYXQoT2JqZWN0LmtleXMoKChpPWUuYXR0KT09bnVsbD92b2lkIDA6aVtvXSl8fHt9KSkuc29ydCgoZixjKT0+Zi5sb2NhbGVDb21wYXJlKGMpKS5mb3JFYWNoKGY9Pnt2YXIgYyx1O3IuYXR0W29dPURyKGxuKHt9LHIuYXR0W29dKSx7W2ZdOigoYz10LmF0dFtvXSk9PW51bGw/dm9pZCAwOmNbZl0pfHwoKHU9ZS5hdHRbb10pPT1udWxsP3ZvaWQgMDp1W2ZdKX0pfSl9KSxyfWZ1bmN0aW9uIGduKHQ9XCJcIixlKXtidChlKTtjb25zdCBuPVwiSSBmdXJ0aGVyIGF1dGhvcml6ZSB0aGUgc3RhdGVkIFVSSSB0byBwZXJmb3JtIHRoZSBmb2xsb3dpbmcgYWN0aW9ucyBvbiBteSBiZWhhbGY6IFwiO2lmKHQuaW5jbHVkZXMobikpcmV0dXJuIHQ7Y29uc3Qgcj1bXTtsZXQgbz0wO09iamVjdC5rZXlzKGUuYXR0KS5mb3JFYWNoKGY9Pntjb25zdCBjPU9iamVjdC5rZXlzKGUuYXR0W2ZdKS5tYXAobD0+KHthYmlsaXR5Omwuc3BsaXQoXCIvXCIpWzBdLGFjdGlvbjpsLnNwbGl0KFwiL1wiKVsxXX0pKTtjLnNvcnQoKGwsaCk9PmwuYWN0aW9uLmxvY2FsZUNvbXBhcmUoaC5hY3Rpb24pKTtjb25zdCB1PXt9O2MuZm9yRWFjaChsPT57dVtsLmFiaWxpdHldfHwodVtsLmFiaWxpdHldPVtdKSx1W2wuYWJpbGl0eV0ucHVzaChsLmFjdGlvbil9KTtjb25zdCBhPU9iamVjdC5rZXlzKHUpLm1hcChsPT4obysrLGAoJHtvfSkgJyR7bH0nOiAnJHt1W2xdLmpvaW4oXCInLCAnXCIpfScgZm9yICcke2Z9Jy5gKSk7ci5wdXNoKGEuam9pbihcIiwgXCIpLnJlcGxhY2UoXCIuLFwiLFwiLlwiKSl9KTtjb25zdCBzPXIuam9pbihcIiBcIiksaT1gJHtufSR7c31gO3JldHVybmAke3Q/dCtcIiBcIjpcIlwifSR7aX1gfWZ1bmN0aW9uIElmKHQpe3ZhciBlO2NvbnN0IG49THQodCk7YnQobik7Y29uc3Qgcj0oZT1uLmF0dCk9PW51bGw/dm9pZCAwOmUuZWlwMTU1O3JldHVybiByP09iamVjdC5rZXlzKHIpLm1hcChvPT5vLnNwbGl0KFwiL1wiKVsxXSk6W119ZnVuY3Rpb24gQWYodCl7Y29uc3QgZT1MdCh0KTtidChlKTtjb25zdCBuPVtdO3JldHVybiBPYmplY3QudmFsdWVzKGUuYXR0KS5mb3JFYWNoKHI9PntPYmplY3QudmFsdWVzKHIpLmZvckVhY2gobz0+e3ZhciBzOyhzPW8/LlswXSkhPW51bGwmJnMuY2hhaW5zJiZuLnB1c2gob1swXS5jaGFpbnMpfSl9KSxbLi4ubmV3IFNldChuLmZsYXQoKSldfWZ1bmN0aW9uIEpyKHQsZSl7aWYoIWUpcmV0dXJuIHQ7Y29uc3Qgbj1MdChlKTtyZXR1cm4gYnQobiksZ24odCxuKX1mdW5jdGlvbiBPZSh0KXtpZighdClyZXR1cm47Y29uc3QgZT10Py5bdC5sZW5ndGgtMV07cmV0dXJuIHBuKGUpP2U6dm9pZCAwfS8qISBub2JsZS1jaXBoZXJzIC0gTUlUIExpY2Vuc2UgKGMpIDIwMjMgUGF1bCBNaWxsZXIgKHBhdWxtaWxsci5jb20pICovZnVuY3Rpb24gUXIodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBVaW50OEFycmF5fHxBcnJheUJ1ZmZlci5pc1ZpZXcodCkmJnQuY29uc3RydWN0b3IubmFtZT09PVwiVWludDhBcnJheVwifWZ1bmN0aW9uIGJuKHQpe2lmKHR5cGVvZiB0IT1cImJvb2xlYW5cIil0aHJvdyBuZXcgRXJyb3IoYGJvb2xlYW4gZXhwZWN0ZWQsIG5vdCAke3R9YCl9ZnVuY3Rpb24geW4odCl7aWYoIU51bWJlci5pc1NhZmVJbnRlZ2VyKHQpfHx0PDApdGhyb3cgbmV3IEVycm9yKFwicG9zaXRpdmUgaW50ZWdlciBleHBlY3RlZCwgZ290IFwiK3QpfWZ1bmN0aW9uIG50KHQsLi4uZSl7aWYoIVFyKHQpKXRocm93IG5ldyBFcnJvcihcIlVpbnQ4QXJyYXkgZXhwZWN0ZWRcIik7aWYoZS5sZW5ndGg+MCYmIWUuaW5jbHVkZXModC5sZW5ndGgpKXRocm93IG5ldyBFcnJvcihcIlVpbnQ4QXJyYXkgZXhwZWN0ZWQgb2YgbGVuZ3RoIFwiK2UrXCIsIGdvdCBsZW5ndGg9XCIrdC5sZW5ndGgpfWZ1bmN0aW9uIHRvKHQsZT0hMCl7aWYodC5kZXN0cm95ZWQpdGhyb3cgbmV3IEVycm9yKFwiSGFzaCBpbnN0YW5jZSBoYXMgYmVlbiBkZXN0cm95ZWRcIik7aWYoZSYmdC5maW5pc2hlZCl0aHJvdyBuZXcgRXJyb3IoXCJIYXNoI2RpZ2VzdCgpIGhhcyBhbHJlYWR5IGJlZW4gY2FsbGVkXCIpfWZ1bmN0aW9uIFNmKHQsZSl7bnQodCk7Y29uc3Qgbj1lLm91dHB1dExlbjtpZih0Lmxlbmd0aDxuKXRocm93IG5ldyBFcnJvcihcImRpZ2VzdEludG8oKSBleHBlY3RzIG91dHB1dCBidWZmZXIgb2YgbGVuZ3RoIGF0IGxlYXN0IFwiK24pfWZ1bmN0aW9uIGp0KHQpe3JldHVybiBuZXcgVWludDMyQXJyYXkodC5idWZmZXIsdC5ieXRlT2Zmc2V0LE1hdGguZmxvb3IodC5ieXRlTGVuZ3RoLzQpKX1mdW5jdGlvbiBXdCguLi50KXtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl0W2VdLmZpbGwoMCl9ZnVuY3Rpb24gTmYodCl7cmV0dXJuIG5ldyBEYXRhVmlldyh0LmJ1ZmZlcix0LmJ5dGVPZmZzZXQsdC5ieXRlTGVuZ3RoKX1jb25zdCBPZj1uZXcgVWludDhBcnJheShuZXcgVWludDMyQXJyYXkoWzI4NzQ1NDAyMF0pLmJ1ZmZlcilbMF09PT02ODtmdW5jdGlvbiBVZih0KXtpZih0eXBlb2YgdCE9XCJzdHJpbmdcIil0aHJvdyBuZXcgRXJyb3IoXCJzdHJpbmcgZXhwZWN0ZWRcIik7cmV0dXJuIG5ldyBVaW50OEFycmF5KG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZSh0KSl9ZnVuY3Rpb24gbW4odCl7aWYodHlwZW9mIHQ9PVwic3RyaW5nXCIpdD1VZih0KTtlbHNlIGlmKFFyKHQpKXQ9d24odCk7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXCJVaW50OEFycmF5IGV4cGVjdGVkLCBnb3QgXCIrdHlwZW9mIHQpO3JldHVybiB0fWZ1bmN0aW9uIF9mKHQsZSl7aWYoZT09bnVsbHx8dHlwZW9mIGUhPVwib2JqZWN0XCIpdGhyb3cgbmV3IEVycm9yKFwib3B0aW9ucyBtdXN0IGJlIGRlZmluZWRcIik7cmV0dXJuIE9iamVjdC5hc3NpZ24odCxlKX1mdW5jdGlvbiBUZih0LGUpe2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpcmV0dXJuITE7bGV0IG49MDtmb3IobGV0IHI9MDtyPHQubGVuZ3RoO3IrKylufD10W3JdXmVbcl07cmV0dXJuIG49PT0wfWNvbnN0IFJmPSh0LGUpPT57ZnVuY3Rpb24gbihyLC4uLm8pe2lmKG50KHIpLCFPZil0aHJvdyBuZXcgRXJyb3IoXCJOb24gbGl0dGxlLWVuZGlhbiBoYXJkd2FyZSBpcyBub3QgeWV0IHN1cHBvcnRlZFwiKTtpZih0Lm5vbmNlTGVuZ3RoIT09dm9pZCAwKXtjb25zdCBhPW9bMF07aWYoIWEpdGhyb3cgbmV3IEVycm9yKFwibm9uY2UgLyBpdiByZXF1aXJlZFwiKTt0LnZhclNpemVOb25jZT9udChhKTpudChhLHQubm9uY2VMZW5ndGgpfWNvbnN0IHM9dC50YWdMZW5ndGg7cyYmb1sxXSE9PXZvaWQgMCYmbnQob1sxXSk7Y29uc3QgaT1lKHIsLi4ubyksZj0oYSxsKT0+e2lmKGwhPT12b2lkIDApe2lmKGEhPT0yKXRocm93IG5ldyBFcnJvcihcImNpcGhlciBvdXRwdXQgbm90IHN1cHBvcnRlZFwiKTtudChsKX19O2xldCBjPSExO3JldHVybntlbmNyeXB0KGEsbCl7aWYoYyl0aHJvdyBuZXcgRXJyb3IoXCJjYW5ub3QgZW5jcnlwdCgpIHR3aWNlIHdpdGggc2FtZSBrZXkgKyBub25jZVwiKTtyZXR1cm4gYz0hMCxudChhKSxmKGkuZW5jcnlwdC5sZW5ndGgsbCksaS5lbmNyeXB0KGEsbCl9LGRlY3J5cHQoYSxsKXtpZihudChhKSxzJiZhLmxlbmd0aDxzKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgY2lwaGVydGV4dCBsZW5ndGg6IHNtYWxsZXIgdGhhbiB0YWdMZW5ndGg9XCIrcyk7cmV0dXJuIGYoaS5kZWNyeXB0Lmxlbmd0aCxsKSxpLmRlY3J5cHQoYSxsKX19fXJldHVybiBPYmplY3QuYXNzaWduKG4sdCksbn07ZnVuY3Rpb24gZW8odCxlLG49ITApe2lmKGU9PT12b2lkIDApcmV0dXJuIG5ldyBVaW50OEFycmF5KHQpO2lmKGUubGVuZ3RoIT09dCl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIG91dHB1dCBsZW5ndGgsIGV4cGVjdGVkIFwiK3QrXCIsIGdvdDogXCIrZS5sZW5ndGgpO2lmKG4mJiFDZihlKSl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIG91dHB1dCwgbXVzdCBiZSBhbGlnbmVkXCIpO3JldHVybiBlfWZ1bmN0aW9uIG5vKHQsZSxuLHIpe2lmKHR5cGVvZiB0LnNldEJpZ1VpbnQ2ND09XCJmdW5jdGlvblwiKXJldHVybiB0LnNldEJpZ1VpbnQ2NChlLG4scik7Y29uc3Qgbz1CaWdJbnQoMzIpLHM9QmlnSW50KDQyOTQ5NjcyOTUpLGk9TnVtYmVyKG4+Pm8mcyksZj1OdW1iZXIobiZzKSxjPXI/NDowLHU9cj8wOjQ7dC5zZXRVaW50MzIoZStjLGksciksdC5zZXRVaW50MzIoZSt1LGYscil9ZnVuY3Rpb24gJGYodCxlLG4pe2JuKG4pO2NvbnN0IHI9bmV3IFVpbnQ4QXJyYXkoMTYpLG89TmYocik7cmV0dXJuIG5vKG8sMCxCaWdJbnQoZSksbiksbm8obyw4LEJpZ0ludCh0KSxuKSxyfWZ1bmN0aW9uIENmKHQpe3JldHVybiB0LmJ5dGVPZmZzZXQlND09PTB9ZnVuY3Rpb24gd24odCl7cmV0dXJuIFVpbnQ4QXJyYXkuZnJvbSh0KX1jb25zdCBybz10PT5VaW50OEFycmF5LmZyb20odC5zcGxpdChcIlwiKS5tYXAoZT0+ZS5jaGFyQ29kZUF0KDApKSksTGY9cm8oXCJleHBhbmQgMTYtYnl0ZSBrXCIpLGpmPXJvKFwiZXhwYW5kIDMyLWJ5dGUga1wiKSxrZj1qdChMZiksUGY9anQoamYpO2Z1bmN0aW9uIE0odCxlKXtyZXR1cm4gdDw8ZXx0Pj4+MzItZX1mdW5jdGlvbiB4bih0KXtyZXR1cm4gdC5ieXRlT2Zmc2V0JTQ9PT0wfWNvbnN0IFVlPTY0LEhmPTE2LG9vPTIqKjMyLTEsc289bmV3IFVpbnQzMkFycmF5O2Z1bmN0aW9uIERmKHQsZSxuLHIsbyxzLGksZil7Y29uc3QgYz1vLmxlbmd0aCx1PW5ldyBVaW50OEFycmF5KFVlKSxhPWp0KHUpLGw9eG4obykmJnhuKHMpLGg9bD9qdChvKTpzbyxnPWw/anQocyk6c287Zm9yKGxldCBtPTA7bTxjO2krKyl7aWYodChlLG4scixhLGksZiksaT49b28pdGhyb3cgbmV3IEVycm9yKFwiYXJ4OiBjb3VudGVyIG92ZXJmbG93XCIpO2NvbnN0IGI9TWF0aC5taW4oVWUsYy1tKTtpZihsJiZiPT09VWUpe2NvbnN0IHY9bS80O2lmKG0lNCE9PTApdGhyb3cgbmV3IEVycm9yKFwiYXJ4OiBpbnZhbGlkIGJsb2NrIHBvc2l0aW9uXCIpO2ZvcihsZXQgTD0wLFY7TDxIZjtMKyspVj12K0wsZ1tWXT1oW1ZdXmFbTF07bSs9VWU7Y29udGludWV9Zm9yKGxldCB2PTAsTDt2PGI7disrKUw9bSt2LHNbTF09b1tMXV51W3ZdO20rPWJ9fWZ1bmN0aW9uIE1mKHQsZSl7Y29uc3R7YWxsb3dTaG9ydEtleXM6bixleHRlbmROb25jZUZuOnIsY291bnRlckxlbmd0aDpvLGNvdW50ZXJSaWdodDpzLHJvdW5kczppfT1fZih7YWxsb3dTaG9ydEtleXM6ITEsY291bnRlckxlbmd0aDo4LGNvdW50ZXJSaWdodDohMSxyb3VuZHM6MjB9LGUpO2lmKHR5cGVvZiB0IT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IEVycm9yKFwiY29yZSBtdXN0IGJlIGEgZnVuY3Rpb25cIik7cmV0dXJuIHluKG8pLHluKGkpLGJuKHMpLGJuKG4pLChmLGMsdSxhLGw9MCk9PntudChmKSxudChjKSxudCh1KTtjb25zdCBoPXUubGVuZ3RoO2lmKGE9PT12b2lkIDAmJihhPW5ldyBVaW50OEFycmF5KGgpKSxudChhKSx5bihsKSxsPDB8fGw+PW9vKXRocm93IG5ldyBFcnJvcihcImFyeDogY291bnRlciBvdmVyZmxvd1wiKTtpZihhLmxlbmd0aDxoKXRocm93IG5ldyBFcnJvcihgYXJ4OiBvdXRwdXQgKCR7YS5sZW5ndGh9KSBpcyBzaG9ydGVyIHRoYW4gZGF0YSAoJHtofSlgKTtjb25zdCBnPVtdO2xldCBtPWYubGVuZ3RoLGIsdjtpZihtPT09MzIpZy5wdXNoKGI9d24oZikpLHY9UGY7ZWxzZSBpZihtPT09MTYmJm4pYj1uZXcgVWludDhBcnJheSgzMiksYi5zZXQoZiksYi5zZXQoZiwxNiksdj1rZixnLnB1c2goYik7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoYGFyeDogaW52YWxpZCAzMi1ieXRlIGtleSwgZ290IGxlbmd0aD0ke219YCk7eG4oYyl8fGcucHVzaChjPXduKGMpKTtjb25zdCBMPWp0KGIpO2lmKHIpe2lmKGMubGVuZ3RoIT09MjQpdGhyb3cgbmV3IEVycm9yKFwiYXJ4OiBleHRlbmRlZCBub25jZSBtdXN0IGJlIDI0IGJ5dGVzXCIpO3IodixMLGp0KGMuc3ViYXJyYXkoMCwxNikpLEwpLGM9Yy5zdWJhcnJheSgxNil9Y29uc3QgVj0xNi1vO2lmKFYhPT1jLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoYGFyeDogbm9uY2UgbXVzdCBiZSAke1Z9IG9yIDE2IGJ5dGVzYCk7aWYoViE9PTEyKXtjb25zdCBIPW5ldyBVaW50OEFycmF5KDEyKTtILnNldChjLHM/MDoxMi1jLmxlbmd0aCksYz1ILGcucHVzaChjKX1jb25zdCBDPWp0KGMpO3JldHVybiBEZih0LHYsTCxDLHUsYSxsLGkpLFd0KC4uLmcpLGF9fWNvbnN0IEc9KHQsZSk9PnRbZSsrXSYyNTV8KHRbZSsrXSYyNTUpPDw4O2NsYXNzIFZme2NvbnN0cnVjdG9yKGUpe3RoaXMuYmxvY2tMZW49MTYsdGhpcy5vdXRwdXRMZW49MTYsdGhpcy5idWZmZXI9bmV3IFVpbnQ4QXJyYXkoMTYpLHRoaXMucj1uZXcgVWludDE2QXJyYXkoMTApLHRoaXMuaD1uZXcgVWludDE2QXJyYXkoMTApLHRoaXMucGFkPW5ldyBVaW50MTZBcnJheSg4KSx0aGlzLnBvcz0wLHRoaXMuZmluaXNoZWQ9ITEsZT1tbihlKSxudChlLDMyKTtjb25zdCBuPUcoZSwwKSxyPUcoZSwyKSxvPUcoZSw0KSxzPUcoZSw2KSxpPUcoZSw4KSxmPUcoZSwxMCksYz1HKGUsMTIpLHU9RyhlLDE0KTt0aGlzLnJbMF09biY4MTkxLHRoaXMuclsxXT0obj4+PjEzfHI8PDMpJjgxOTEsdGhpcy5yWzJdPShyPj4+MTB8bzw8NikmNzkzOSx0aGlzLnJbM109KG8+Pj43fHM8PDkpJjgxOTEsdGhpcy5yWzRdPShzPj4+NHxpPDwxMikmMjU1LHRoaXMucls1XT1pPj4+MSY4MTkwLHRoaXMucls2XT0oaT4+PjE0fGY8PDIpJjgxOTEsdGhpcy5yWzddPShmPj4+MTF8Yzw8NSkmODA2NSx0aGlzLnJbOF09KGM+Pj44fHU8PDgpJjgxOTEsdGhpcy5yWzldPXU+Pj41JjEyNztmb3IobGV0IGE9MDthPDg7YSsrKXRoaXMucGFkW2FdPUcoZSwxNisyKmEpfXByb2Nlc3MoZSxuLHI9ITEpe2NvbnN0IG89cj8wOjIwNDgse2g6cyxyOml9PXRoaXMsZj1pWzBdLGM9aVsxXSx1PWlbMl0sYT1pWzNdLGw9aVs0XSxoPWlbNV0sZz1pWzZdLG09aVs3XSxiPWlbOF0sdj1pWzldLEw9RyhlLG4rMCksVj1HKGUsbisyKSxDPUcoZSxuKzQpLEg9RyhlLG4rNiksXz1HKGUsbis4KSxrPUcoZSxuKzEwKSxQPUcoZSxuKzEyKSxSPUcoZSxuKzE0KTtsZXQgZD1zWzBdKyhMJjgxOTEpLHc9c1sxXSsoKEw+Pj4xM3xWPDwzKSY4MTkxKSxwPXNbMl0rKChWPj4+MTB8Qzw8NikmODE5MSkseT1zWzNdKygoQz4+Pjd8SDw8OSkmODE5MSkseD1zWzRdKygoSD4+PjR8Xzw8MTIpJjgxOTEpLEI9c1s1XSsoXz4+PjEmODE5MSksRT1zWzZdKygoXz4+PjE0fGs8PDIpJjgxOTEpLEk9c1s3XSsoKGs+Pj4xMXxQPDw1KSY4MTkxKSxTPXNbOF0rKChQPj4+OHxSPDw4KSY4MTkxKSxPPXNbOV0rKFI+Pj41fG8pLEE9MCxUPUErZCpmK3cqKDUqdikrcCooNSpiKSt5Kig1Km0pK3gqKDUqZyk7QT1UPj4+MTMsVCY9ODE5MSxUKz1CKig1KmgpK0UqKDUqbCkrSSooNSphKStTKig1KnUpK08qKDUqYyksQSs9VD4+PjEzLFQmPTgxOTE7bGV0IFU9QStkKmMrdypmK3AqKDUqdikreSooNSpiKSt4Kig1Km0pO0E9VT4+PjEzLFUmPTgxOTEsVSs9QiooNSpnKStFKig1KmgpK0kqKDUqbCkrUyooNSphKStPKig1KnUpLEErPVU+Pj4xMyxVJj04MTkxO2xldCAkPUErZCp1K3cqYytwKmYreSooNSp2KSt4Kig1KmIpO0E9JD4+PjEzLCQmPTgxOTEsJCs9QiooNSptKStFKig1KmcpK0kqKDUqaCkrUyooNSpsKStPKig1KmEpLEErPSQ+Pj4xMywkJj04MTkxO2xldCBEPUErZCphK3cqdStwKmMreSpmK3gqKDUqdik7QT1EPj4+MTMsRCY9ODE5MSxEKz1CKig1KmIpK0UqKDUqbSkrSSooNSpnKStTKig1KmgpK08qKDUqbCksQSs9RD4+PjEzLEQmPTgxOTE7bGV0IHE9QStkKmwrdyphK3AqdSt5KmMreCpmO0E9cT4+PjEzLHEmPTgxOTEscSs9QiooNSp2KStFKig1KmIpK0kqKDUqbSkrUyooNSpnKStPKig1KmgpLEErPXE+Pj4xMyxxJj04MTkxO2xldCBqPUErZCpoK3cqbCtwKmEreSp1K3gqYztBPWo+Pj4xMyxqJj04MTkxLGorPUIqZitFKig1KnYpK0kqKDUqYikrUyooNSptKStPKig1KmcpLEErPWo+Pj4xMyxqJj04MTkxO2xldCBLPUErZCpnK3cqaCtwKmwreSphK3gqdTtBPUs+Pj4xMyxLJj04MTkxLEsrPUIqYytFKmYrSSooNSp2KStTKig1KmIpK08qKDUqbSksQSs9Sz4+PjEzLEsmPTgxOTE7bGV0IGV0PUErZCptK3cqZytwKmgreSpsK3gqYTtBPWV0Pj4+MTMsZXQmPTgxOTEsZXQrPUIqdStFKmMrSSpmK1MqKDUqdikrTyooNSpiKSxBKz1ldD4+PjEzLGV0Jj04MTkxO2xldCBaPUErZCpiK3cqbStwKmcreSpoK3gqbDtBPVo+Pj4xMyxaJj04MTkxLForPUIqYStFKnUrSSpjK1MqZitPKig1KnYpLEErPVo+Pj4xMyxaJj04MTkxO2xldCB6PUErZCp2K3cqYitwKm0reSpnK3gqaDtBPXo+Pj4xMyx6Jj04MTkxLHorPUIqbCtFKmErSSp1K1MqYytPKmYsQSs9ej4+PjEzLHomPTgxOTEsQT0oQTw8MikrQXwwLEE9QStUfDAsVD1BJjgxOTEsQT1BPj4+MTMsVSs9QSxzWzBdPVQsc1sxXT1VLHNbMl09JCxzWzNdPUQsc1s0XT1xLHNbNV09aixzWzZdPUssc1s3XT1ldCxzWzhdPVosc1s5XT16fWZpbmFsaXplKCl7Y29uc3R7aDplLHBhZDpufT10aGlzLHI9bmV3IFVpbnQxNkFycmF5KDEwKTtsZXQgbz1lWzFdPj4+MTM7ZVsxXSY9ODE5MTtmb3IobGV0IGY9MjtmPDEwO2YrKyllW2ZdKz1vLG89ZVtmXT4+PjEzLGVbZl0mPTgxOTE7ZVswXSs9byo1LG89ZVswXT4+PjEzLGVbMF0mPTgxOTEsZVsxXSs9byxvPWVbMV0+Pj4xMyxlWzFdJj04MTkxLGVbMl0rPW8sclswXT1lWzBdKzUsbz1yWzBdPj4+MTMsclswXSY9ODE5MTtmb3IobGV0IGY9MTtmPDEwO2YrKylyW2ZdPWVbZl0rbyxvPXJbZl0+Pj4xMyxyW2ZdJj04MTkxO3JbOV0tPTgxOTI7bGV0IHM9KG9eMSktMTtmb3IobGV0IGY9MDtmPDEwO2YrKylyW2ZdJj1zO3M9fnM7Zm9yKGxldCBmPTA7ZjwxMDtmKyspZVtmXT1lW2ZdJnN8cltmXTtlWzBdPShlWzBdfGVbMV08PDEzKSY2NTUzNSxlWzFdPShlWzFdPj4+M3xlWzJdPDwxMCkmNjU1MzUsZVsyXT0oZVsyXT4+PjZ8ZVszXTw8NykmNjU1MzUsZVszXT0oZVszXT4+Pjl8ZVs0XTw8NCkmNjU1MzUsZVs0XT0oZVs0XT4+PjEyfGVbNV08PDF8ZVs2XTw8MTQpJjY1NTM1LGVbNV09KGVbNl0+Pj4yfGVbN108PDExKSY2NTUzNSxlWzZdPShlWzddPj4+NXxlWzhdPDw4KSY2NTUzNSxlWzddPShlWzhdPj4+OHxlWzldPDw1KSY2NTUzNTtsZXQgaT1lWzBdK25bMF07ZVswXT1pJjY1NTM1O2ZvcihsZXQgZj0xO2Y8ODtmKyspaT0oZVtmXStuW2ZdfDApKyhpPj4+MTYpfDAsZVtmXT1pJjY1NTM1O1d0KHIpfXVwZGF0ZShlKXt0byh0aGlzKSxlPW1uKGUpLG50KGUpO2NvbnN0e2J1ZmZlcjpuLGJsb2NrTGVuOnJ9PXRoaXMsbz1lLmxlbmd0aDtmb3IobGV0IHM9MDtzPG87KXtjb25zdCBpPU1hdGgubWluKHItdGhpcy5wb3Msby1zKTtpZihpPT09cil7Zm9yKDtyPD1vLXM7cys9cil0aGlzLnByb2Nlc3MoZSxzKTtjb250aW51ZX1uLnNldChlLnN1YmFycmF5KHMscytpKSx0aGlzLnBvcyksdGhpcy5wb3MrPWkscys9aSx0aGlzLnBvcz09PXImJih0aGlzLnByb2Nlc3MobiwwLCExKSx0aGlzLnBvcz0wKX1yZXR1cm4gdGhpc31kZXN0cm95KCl7V3QodGhpcy5oLHRoaXMucix0aGlzLmJ1ZmZlcix0aGlzLnBhZCl9ZGlnZXN0SW50byhlKXt0byh0aGlzKSxTZihlLHRoaXMpLHRoaXMuZmluaXNoZWQ9ITA7Y29uc3R7YnVmZmVyOm4saDpyfT10aGlzO2xldHtwb3M6b309dGhpcztpZihvKXtmb3IobltvKytdPTE7bzwxNjtvKyspbltvXT0wO3RoaXMucHJvY2VzcyhuLDAsITApfXRoaXMuZmluYWxpemUoKTtsZXQgcz0wO2ZvcihsZXQgaT0wO2k8ODtpKyspZVtzKytdPXJbaV0+Pj4wLGVbcysrXT1yW2ldPj4+ODtyZXR1cm4gZX1kaWdlc3QoKXtjb25zdHtidWZmZXI6ZSxvdXRwdXRMZW46bn09dGhpczt0aGlzLmRpZ2VzdEludG8oZSk7Y29uc3Qgcj1lLnNsaWNlKDAsbik7cmV0dXJuIHRoaXMuZGVzdHJveSgpLHJ9fWZ1bmN0aW9uIHFmKHQpe2NvbnN0IGU9KHIsbyk9PnQobykudXBkYXRlKG1uKHIpKS5kaWdlc3QoKSxuPXQobmV3IFVpbnQ4QXJyYXkoMzIpKTtyZXR1cm4gZS5vdXRwdXRMZW49bi5vdXRwdXRMZW4sZS5ibG9ja0xlbj1uLmJsb2NrTGVuLGUuY3JlYXRlPXI9PnQociksZX1jb25zdCBLZj1xZih0PT5uZXcgVmYodCkpO2Z1bmN0aW9uIEZmKHQsZSxuLHIsbyxzPTIwKXtsZXQgaT10WzBdLGY9dFsxXSxjPXRbMl0sdT10WzNdLGE9ZVswXSxsPWVbMV0saD1lWzJdLGc9ZVszXSxtPWVbNF0sYj1lWzVdLHY9ZVs2XSxMPWVbN10sVj1vLEM9blswXSxIPW5bMV0sXz1uWzJdLGs9aSxQPWYsUj1jLGQ9dSx3PWEscD1sLHk9aCx4PWcsQj1tLEU9YixJPXYsUz1MLE89VixBPUMsVD1ILFU9Xztmb3IobGV0IEQ9MDtEPHM7RCs9MilrPWsrd3wwLE89TShPXmssMTYpLEI9QitPfDAsdz1NKHdeQiwxMiksaz1rK3d8MCxPPU0oT15rLDgpLEI9QitPfDAsdz1NKHdeQiw3KSxQPVArcHwwLEE9TShBXlAsMTYpLEU9RStBfDAscD1NKHBeRSwxMiksUD1QK3B8MCxBPU0oQV5QLDgpLEU9RStBfDAscD1NKHBeRSw3KSxSPVIreXwwLFQ9TShUXlIsMTYpLEk9SStUfDAseT1NKHleSSwxMiksUj1SK3l8MCxUPU0oVF5SLDgpLEk9SStUfDAseT1NKHleSSw3KSxkPWQreHwwLFU9TShVXmQsMTYpLFM9UytVfDAseD1NKHheUywxMiksZD1kK3h8MCxVPU0oVV5kLDgpLFM9UytVfDAseD1NKHheUyw3KSxrPWsrcHwwLFU9TShVXmssMTYpLEk9SStVfDAscD1NKHBeSSwxMiksaz1rK3B8MCxVPU0oVV5rLDgpLEk9SStVfDAscD1NKHBeSSw3KSxQPVAreXwwLE89TShPXlAsMTYpLFM9UytPfDAseT1NKHleUywxMiksUD1QK3l8MCxPPU0oT15QLDgpLFM9UytPfDAseT1NKHleUyw3KSxSPVIreHwwLEE9TShBXlIsMTYpLEI9QitBfDAseD1NKHheQiwxMiksUj1SK3h8MCxBPU0oQV5SLDgpLEI9QitBfDAseD1NKHheQiw3KSxkPWQrd3wwLFQ9TShUXmQsMTYpLEU9RStUfDAsdz1NKHdeRSwxMiksZD1kK3d8MCxUPU0oVF5kLDgpLEU9RStUfDAsdz1NKHdeRSw3KTtsZXQgJD0wO3JbJCsrXT1pK2t8MCxyWyQrK109ZitQfDAsclskKytdPWMrUnwwLHJbJCsrXT11K2R8MCxyWyQrK109YSt3fDAsclskKytdPWwrcHwwLHJbJCsrXT1oK3l8MCxyWyQrK109Zyt4fDAsclskKytdPW0rQnwwLHJbJCsrXT1iK0V8MCxyWyQrK109ditJfDAsclskKytdPUwrU3wwLHJbJCsrXT1WK098MCxyWyQrK109QytBfDAsclskKytdPUgrVHwwLHJbJCsrXT1fK1V8MH1jb25zdCB6Zj1NZihGZix7Y291bnRlclJpZ2h0OiExLGNvdW50ZXJMZW5ndGg6NCxhbGxvd1Nob3J0S2V5czohMX0pLEdmPW5ldyBVaW50OEFycmF5KDE2KSxpbz0odCxlKT0+e3QudXBkYXRlKGUpO2NvbnN0IG49ZS5sZW5ndGglMTY7biYmdC51cGRhdGUoR2Yuc3ViYXJyYXkobikpfSxaZj1uZXcgVWludDhBcnJheSgzMik7ZnVuY3Rpb24gZm8odCxlLG4scixvKXtjb25zdCBzPXQoZSxuLFpmKSxpPUtmLmNyZWF0ZShzKTtvJiZpbyhpLG8pLGlvKGkscik7Y29uc3QgZj0kZihyLmxlbmd0aCxvP28ubGVuZ3RoOjAsITApO2kudXBkYXRlKGYpO2NvbnN0IGM9aS5kaWdlc3QoKTtyZXR1cm4gV3QocyxmKSxjfWNvbnN0IFdmPXQ9PihlLG4scik9Pih7ZW5jcnlwdChzLGkpe2NvbnN0IGY9cy5sZW5ndGg7aT1lbyhmKzE2LGksITEpLGkuc2V0KHMpO2NvbnN0IGM9aS5zdWJhcnJheSgwLC0xNik7dChlLG4sYyxjLDEpO2NvbnN0IHU9Zm8odCxlLG4sYyxyKTtyZXR1cm4gaS5zZXQodSxmKSxXdCh1KSxpfSxkZWNyeXB0KHMsaSl7aT1lbyhzLmxlbmd0aC0xNixpLCExKTtjb25zdCBmPXMuc3ViYXJyYXkoMCwtMTYpLGM9cy5zdWJhcnJheSgtMTYpLHU9Zm8odCxlLG4sZixyKTtpZighVGYoYyx1KSl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHRhZ1wiKTtyZXR1cm4gaS5zZXQocy5zdWJhcnJheSgwLC0xNikpLHQoZSxuLGksaSwxKSxXdCh1KSxpfX0pLGNvPVJmKHtibG9ja1NpemU6NjQsbm9uY2VMZW5ndGg6MTIsdGFnTGVuZ3RoOjE2fSxXZih6ZikpO2NsYXNzIGFvIGV4dGVuZHMgSWV7Y29uc3RydWN0b3IoZSxuKXtzdXBlcigpLHRoaXMuZmluaXNoZWQ9ITEsdGhpcy5kZXN0cm95ZWQ9ITEscm4oZSk7Y29uc3Qgcj1odChuKTtpZih0aGlzLmlIYXNoPWUuY3JlYXRlKCksdHlwZW9mIHRoaXMuaUhhc2gudXBkYXRlIT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgaW5zdGFuY2Ugb2YgY2xhc3Mgd2hpY2ggZXh0ZW5kcyB1dGlscy5IYXNoXCIpO3RoaXMuYmxvY2tMZW49dGhpcy5pSGFzaC5ibG9ja0xlbix0aGlzLm91dHB1dExlbj10aGlzLmlIYXNoLm91dHB1dExlbjtjb25zdCBvPXRoaXMuYmxvY2tMZW4scz1uZXcgVWludDhBcnJheShvKTtzLnNldChyLmxlbmd0aD5vP2UuY3JlYXRlKCkudXBkYXRlKHIpLmRpZ2VzdCgpOnIpO2ZvcihsZXQgaT0wO2k8cy5sZW5ndGg7aSsrKXNbaV1ePTU0O3RoaXMuaUhhc2gudXBkYXRlKHMpLHRoaXMub0hhc2g9ZS5jcmVhdGUoKTtmb3IobGV0IGk9MDtpPHMubGVuZ3RoO2krKylzW2ldXj0xMDY7dGhpcy5vSGFzaC51cGRhdGUocyksdXQocyl9dXBkYXRlKGUpe3JldHVybiBOdCh0aGlzKSx0aGlzLmlIYXNoLnVwZGF0ZShlKSx0aGlzfWRpZ2VzdEludG8oZSl7TnQodGhpcyksYXQoZSx0aGlzLm91dHB1dExlbiksdGhpcy5maW5pc2hlZD0hMCx0aGlzLmlIYXNoLmRpZ2VzdEludG8oZSksdGhpcy5vSGFzaC51cGRhdGUoZSksdGhpcy5vSGFzaC5kaWdlc3RJbnRvKGUpLHRoaXMuZGVzdHJveSgpfWRpZ2VzdCgpe2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkodGhpcy5vSGFzaC5vdXRwdXRMZW4pO3JldHVybiB0aGlzLmRpZ2VzdEludG8oZSksZX1fY2xvbmVJbnRvKGUpe2V8fChlPU9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLHt9KSk7Y29uc3R7b0hhc2g6bixpSGFzaDpyLGZpbmlzaGVkOm8sZGVzdHJveWVkOnMsYmxvY2tMZW46aSxvdXRwdXRMZW46Zn09dGhpcztyZXR1cm4gZT1lLGUuZmluaXNoZWQ9byxlLmRlc3Ryb3llZD1zLGUuYmxvY2tMZW49aSxlLm91dHB1dExlbj1mLGUub0hhc2g9bi5fY2xvbmVJbnRvKGUub0hhc2gpLGUuaUhhc2g9ci5fY2xvbmVJbnRvKGUuaUhhc2gpLGV9Y2xvbmUoKXtyZXR1cm4gdGhpcy5fY2xvbmVJbnRvKCl9ZGVzdHJveSgpe3RoaXMuZGVzdHJveWVkPSEwLHRoaXMub0hhc2guZGVzdHJveSgpLHRoaXMuaUhhc2guZGVzdHJveSgpfX1jb25zdCBfZT0odCxlLG4pPT5uZXcgYW8odCxlKS51cGRhdGUobikuZGlnZXN0KCk7X2UuY3JlYXRlPSh0LGUpPT5uZXcgYW8odCxlKTtmdW5jdGlvbiBZZih0LGUsbil7cmV0dXJuIHJuKHQpLG49PT12b2lkIDAmJihuPW5ldyBVaW50OEFycmF5KHQub3V0cHV0TGVuKSksX2UodCxodChuKSxodChlKSl9Y29uc3Qgdm49VWludDhBcnJheS5mcm9tKFswXSksdW89VWludDhBcnJheS5vZigpO2Z1bmN0aW9uIFhmKHQsZSxuLHI9MzIpe3JuKHQpLG10KHIpO2NvbnN0IG89dC5vdXRwdXRMZW47aWYocj4yNTUqbyl0aHJvdyBuZXcgRXJyb3IoXCJMZW5ndGggc2hvdWxkIGJlIDw9IDI1NSpIYXNoTGVuXCIpO2NvbnN0IHM9TWF0aC5jZWlsKHIvbyk7bj09PXZvaWQgMCYmKG49dW8pO2NvbnN0IGk9bmV3IFVpbnQ4QXJyYXkocypvKSxmPV9lLmNyZWF0ZSh0LGUpLGM9Zi5fY2xvbmVJbnRvKCksdT1uZXcgVWludDhBcnJheShmLm91dHB1dExlbik7Zm9yKGxldCBhPTA7YTxzO2ErKyl2blswXT1hKzEsYy51cGRhdGUoYT09PTA/dW86dSkudXBkYXRlKG4pLnVwZGF0ZSh2bikuZGlnZXN0SW50byh1KSxpLnNldCh1LG8qYSksZi5fY2xvbmVJbnRvKGMpO3JldHVybiBmLmRlc3Ryb3koKSxjLmRlc3Ryb3koKSx1dCh1LHZuKSxpLnNsaWNlKDAscil9Y29uc3QgSmY9KHQsZSxuLHIsbyk9PlhmKHQsWWYodCxlLG4pLHIsbyksVGU9QWUsRW49QmlnSW50KDApLEJuPUJpZ0ludCgxKTtmdW5jdGlvbiBSZSh0LGUpe2lmKHR5cGVvZiBlIT1cImJvb2xlYW5cIil0aHJvdyBuZXcgRXJyb3IodCtcIiBib29sZWFuIGV4cGVjdGVkLCBnb3QgXCIrZSl9ZnVuY3Rpb24gJGUodCl7Y29uc3QgZT10LnRvU3RyaW5nKDE2KTtyZXR1cm4gZS5sZW5ndGgmMT9cIjBcIitlOmV9ZnVuY3Rpb24gbG8odCl7aWYodHlwZW9mIHQhPVwic3RyaW5nXCIpdGhyb3cgbmV3IEVycm9yKFwiaGV4IHN0cmluZyBleHBlY3RlZCwgZ290IFwiK3R5cGVvZiB0KTtyZXR1cm4gdD09PVwiXCI/RW46QmlnSW50KFwiMHhcIit0KX1mdW5jdGlvbiBDZSh0KXtyZXR1cm4gbG8oY2UodCkpfWZ1bmN0aW9uIExlKHQpe3JldHVybiBhdCh0KSxsbyhjZShVaW50OEFycmF5LmZyb20odCkucmV2ZXJzZSgpKSl9ZnVuY3Rpb24gSW4odCxlKXtyZXR1cm4gZm4odC50b1N0cmluZygxNikucGFkU3RhcnQoZSoyLFwiMFwiKSl9ZnVuY3Rpb24gQW4odCxlKXtyZXR1cm4gSW4odCxlKS5yZXZlcnNlKCl9ZnVuY3Rpb24gcnQodCxlLG4pe2xldCByO2lmKHR5cGVvZiBlPT1cInN0cmluZ1wiKXRyeXtyPWZuKGUpfWNhdGNoKHMpe3Rocm93IG5ldyBFcnJvcih0K1wiIG11c3QgYmUgaGV4IHN0cmluZyBvciBVaW50OEFycmF5LCBjYXVzZTogXCIrcyl9ZWxzZSBpZihubihlKSlyPVVpbnQ4QXJyYXkuZnJvbShlKTtlbHNlIHRocm93IG5ldyBFcnJvcih0K1wiIG11c3QgYmUgaGV4IHN0cmluZyBvciBVaW50OEFycmF5XCIpO2NvbnN0IG89ci5sZW5ndGg7aWYodHlwZW9mIG49PVwibnVtYmVyXCImJm8hPT1uKXRocm93IG5ldyBFcnJvcih0K1wiIG9mIGxlbmd0aCBcIituK1wiIGV4cGVjdGVkLCBnb3QgXCIrbyk7cmV0dXJuIHJ9Y29uc3QgU249dD0+dHlwZW9mIHQ9PVwiYmlnaW50XCImJkVuPD10O2Z1bmN0aW9uIFFmKHQsZSxuKXtyZXR1cm4gU24odCkmJlNuKGUpJiZTbihuKSYmZTw9dCYmdDxufWZ1bmN0aW9uIE5uKHQsZSxuLHIpe2lmKCFRZihlLG4scikpdGhyb3cgbmV3IEVycm9yKFwiZXhwZWN0ZWQgdmFsaWQgXCIrdCtcIjogXCIrbitcIiA8PSBuIDwgXCIrcitcIiwgZ290IFwiK2UpfWZ1bmN0aW9uIHRjKHQpe2xldCBlO2ZvcihlPTA7dD5Fbjt0Pj49Qm4sZSs9MSk7cmV0dXJuIGV9Y29uc3QgamU9dD0+KEJuPDxCaWdJbnQodCkpLUJuO2Z1bmN0aW9uIGVjKHQsZSxuKXtpZih0eXBlb2YgdCE9XCJudW1iZXJcInx8dDwyKXRocm93IG5ldyBFcnJvcihcImhhc2hMZW4gbXVzdCBiZSBhIG51bWJlclwiKTtpZih0eXBlb2YgZSE9XCJudW1iZXJcInx8ZTwyKXRocm93IG5ldyBFcnJvcihcInFCeXRlTGVuIG11c3QgYmUgYSBudW1iZXJcIik7aWYodHlwZW9mIG4hPVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgRXJyb3IoXCJobWFjRm4gbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO2NvbnN0IHI9Zz0+bmV3IFVpbnQ4QXJyYXkoZyksbz1nPT5VaW50OEFycmF5Lm9mKGcpO2xldCBzPXIodCksaT1yKHQpLGY9MDtjb25zdCBjPSgpPT57cy5maWxsKDEpLGkuZmlsbCgwKSxmPTB9LHU9KC4uLmcpPT5uKGkscywuLi5nKSxhPShnPXIoMCkpPT57aT11KG8oMCksZykscz11KCksZy5sZW5ndGghPT0wJiYoaT11KG8oMSksZykscz11KCkpfSxsPSgpPT57aWYoZisrPj0xZTMpdGhyb3cgbmV3IEVycm9yKFwiZHJiZzogdHJpZWQgMTAwMCB2YWx1ZXNcIik7bGV0IGc9MDtjb25zdCBtPVtdO2Zvcig7ZzxlOyl7cz11KCk7Y29uc3QgYj1zLnNsaWNlKCk7bS5wdXNoKGIpLGcrPXMubGVuZ3RofXJldHVybiBIdCguLi5tKX07cmV0dXJuKGcsbSk9PntjKCksYShnKTtsZXQgYjtmb3IoOyEoYj1tKGwoKSkpOylhKCk7cmV0dXJuIGMoKSxifX1mdW5jdGlvbiBrZSh0LGUsbj17fSl7aWYoIXR8fHR5cGVvZiB0IT1cIm9iamVjdFwiKXRocm93IG5ldyBFcnJvcihcImV4cGVjdGVkIHZhbGlkIG9wdGlvbnMgb2JqZWN0XCIpO2Z1bmN0aW9uIHIobyxzLGkpe2NvbnN0IGY9dFtvXTtpZihpJiZmPT09dm9pZCAwKXJldHVybjtjb25zdCBjPXR5cGVvZiBmO2lmKGMhPT1zfHxmPT09bnVsbCl0aHJvdyBuZXcgRXJyb3IoYHBhcmFtIFwiJHtvfVwiIGlzIGludmFsaWQ6IGV4cGVjdGVkICR7c30sIGdvdCAke2N9YCl9T2JqZWN0LmVudHJpZXMoZSkuZm9yRWFjaCgoW28sc10pPT5yKG8scywhMSkpLE9iamVjdC5lbnRyaWVzKG4pLmZvckVhY2goKFtvLHNdKT0+cihvLHMsITApKX1mdW5jdGlvbiBobyh0KXtjb25zdCBlPW5ldyBXZWFrTWFwO3JldHVybihuLC4uLnIpPT57Y29uc3Qgbz1lLmdldChuKTtpZihvIT09dm9pZCAwKXJldHVybiBvO2NvbnN0IHM9dChuLC4uLnIpO3JldHVybiBlLnNldChuLHMpLHN9fWNvbnN0IG90PUJpZ0ludCgwKSxRPUJpZ0ludCgxKSxEdD1CaWdJbnQoMiksbmM9QmlnSW50KDMpLHBvPUJpZ0ludCg0KSxnbz1CaWdJbnQoNSksYm89QmlnSW50KDgpO2Z1bmN0aW9uIGx0KHQsZSl7Y29uc3Qgbj10JWU7cmV0dXJuIG4+PW90P246ZStufWZ1bmN0aW9uIHB0KHQsZSxuKXtsZXQgcj10O2Zvcig7ZS0tID5vdDspcio9cixyJT1uO3JldHVybiByfWZ1bmN0aW9uIHlvKHQsZSl7aWYodD09PW90KXRocm93IG5ldyBFcnJvcihcImludmVydDogZXhwZWN0ZWQgbm9uLXplcm8gbnVtYmVyXCIpO2lmKGU8PW90KXRocm93IG5ldyBFcnJvcihcImludmVydDogZXhwZWN0ZWQgcG9zaXRpdmUgbW9kdWx1cywgZ290IFwiK2UpO2xldCBuPWx0KHQsZSkscj1lLG89b3Qscz1RO2Zvcig7biE9PW90Oyl7Y29uc3QgZj1yL24sYz1yJW4sdT1vLXMqZjtyPW4sbj1jLG89cyxzPXV9aWYociE9PVEpdGhyb3cgbmV3IEVycm9yKFwiaW52ZXJ0OiBkb2VzIG5vdCBleGlzdFwiKTtyZXR1cm4gbHQobyxlKX1mdW5jdGlvbiBtbyh0LGUpe2NvbnN0IG49KHQuT1JERVIrUSkvcG8scj10LnBvdyhlLG4pO2lmKCF0LmVxbCh0LnNxcihyKSxlKSl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBzcXVhcmUgcm9vdFwiKTtyZXR1cm4gcn1mdW5jdGlvbiByYyh0LGUpe2NvbnN0IG49KHQuT1JERVItZ28pL2JvLHI9dC5tdWwoZSxEdCksbz10LnBvdyhyLG4pLHM9dC5tdWwoZSxvKSxpPXQubXVsKHQubXVsKHMsRHQpLG8pLGY9dC5tdWwocyx0LnN1YihpLHQuT05FKSk7aWYoIXQuZXFsKHQuc3FyKGYpLGUpKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIHNxdWFyZSByb290XCIpO3JldHVybiBmfWZ1bmN0aW9uIG9jKHQpe2lmKHQ8QmlnSW50KDMpKXRocm93IG5ldyBFcnJvcihcInNxcnQgaXMgbm90IGRlZmluZWQgZm9yIHNtYWxsIGZpZWxkXCIpO2xldCBlPXQtUSxuPTA7Zm9yKDtlJUR0PT09b3Q7KWUvPUR0LG4rKztsZXQgcj1EdDtjb25zdCBvPVl0KHQpO2Zvcig7eG8obyxyKT09PTE7KWlmKHIrKz4xZTMpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgc3F1YXJlIHJvb3Q6IHByb2JhYmx5IG5vbi1wcmltZSBQXCIpO2lmKG49PT0xKXJldHVybiBtbztsZXQgcz1vLnBvdyhyLGUpO2NvbnN0IGk9KGUrUSkvRHQ7cmV0dXJuIGZ1bmN0aW9uKGMsdSl7aWYoYy5pczAodSkpcmV0dXJuIHU7aWYoeG8oYyx1KSE9PTEpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgc3F1YXJlIHJvb3RcIik7bGV0IGE9bixsPWMubXVsKGMuT05FLHMpLGg9Yy5wb3codSxlKSxnPWMucG93KHUsaSk7Zm9yKDshYy5lcWwoaCxjLk9ORSk7KXtpZihjLmlzMChoKSlyZXR1cm4gYy5aRVJPO2xldCBtPTEsYj1jLnNxcihoKTtmb3IoOyFjLmVxbChiLGMuT05FKTspaWYobSsrLGI9Yy5zcXIoYiksbT09PWEpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgc3F1YXJlIHJvb3RcIik7Y29uc3Qgdj1RPDxCaWdJbnQoYS1tLTEpLEw9Yy5wb3cobCx2KTthPW0sbD1jLnNxcihMKSxoPWMubXVsKGgsbCksZz1jLm11bChnLEwpfXJldHVybiBnfX1mdW5jdGlvbiBzYyh0KXtyZXR1cm4gdCVwbz09PW5jP21vOnQlYm89PT1nbz9yYzpvYyh0KX1jb25zdCBpYz1bXCJjcmVhdGVcIixcImlzVmFsaWRcIixcImlzMFwiLFwibmVnXCIsXCJpbnZcIixcInNxcnRcIixcInNxclwiLFwiZXFsXCIsXCJhZGRcIixcInN1YlwiLFwibXVsXCIsXCJwb3dcIixcImRpdlwiLFwiYWRkTlwiLFwic3ViTlwiLFwibXVsTlwiLFwic3FyTlwiXTtmdW5jdGlvbiBmYyh0KXtjb25zdCBlPXtPUkRFUjpcImJpZ2ludFwiLE1BU0s6XCJiaWdpbnRcIixCWVRFUzpcIm51bWJlclwiLEJJVFM6XCJudW1iZXJcIn0sbj1pYy5yZWR1Y2UoKHIsbyk9PihyW29dPVwiZnVuY3Rpb25cIixyKSxlKTtyZXR1cm4ga2UodCxuKSx0fWZ1bmN0aW9uIGNjKHQsZSxuKXtpZihuPG90KXRocm93IG5ldyBFcnJvcihcImludmFsaWQgZXhwb25lbnQsIG5lZ2F0aXZlcyB1bnN1cHBvcnRlZFwiKTtpZihuPT09b3QpcmV0dXJuIHQuT05FO2lmKG49PT1RKXJldHVybiBlO2xldCByPXQuT05FLG89ZTtmb3IoO24+b3Q7KW4mUSYmKHI9dC5tdWwocixvKSksbz10LnNxcihvKSxuPj49UTtyZXR1cm4gcn1mdW5jdGlvbiB3byh0LGUsbj0hMSl7Y29uc3Qgcj1uZXcgQXJyYXkoZS5sZW5ndGgpLmZpbGwobj90LlpFUk86dm9pZCAwKSxvPWUucmVkdWNlKChpLGYsYyk9PnQuaXMwKGYpP2k6KHJbY109aSx0Lm11bChpLGYpKSx0Lk9ORSkscz10LmludihvKTtyZXR1cm4gZS5yZWR1Y2VSaWdodCgoaSxmLGMpPT50LmlzMChmKT9pOihyW2NdPXQubXVsKGkscltjXSksdC5tdWwoaSxmKSkscykscn1mdW5jdGlvbiB4byh0LGUpe2NvbnN0IG49KHQuT1JERVItUSkvRHQscj10LnBvdyhlLG4pLG89dC5lcWwocix0Lk9ORSkscz10LmVxbChyLHQuWkVSTyksaT10LmVxbChyLHQubmVnKHQuT05FKSk7aWYoIW8mJiFzJiYhaSl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIExlZ2VuZHJlIHN5bWJvbCByZXN1bHRcIik7cmV0dXJuIG8/MTpzPzA6LTF9ZnVuY3Rpb24gYWModCxlKXtlIT09dm9pZCAwJiZtdChlKTtjb25zdCBuPWUhPT12b2lkIDA/ZTp0LnRvU3RyaW5nKDIpLmxlbmd0aCxyPU1hdGguY2VpbChuLzgpO3JldHVybntuQml0TGVuZ3RoOm4sbkJ5dGVMZW5ndGg6cn19ZnVuY3Rpb24gWXQodCxlLG49ITEscj17fSl7aWYodDw9b3QpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBmaWVsZDogZXhwZWN0ZWQgT1JERVIgPiAwLCBnb3QgXCIrdCk7bGV0IG8scztpZih0eXBlb2YgZT09XCJvYmplY3RcIiYmZSE9bnVsbCl7aWYoci5zcXJ0fHxuKXRocm93IG5ldyBFcnJvcihcImNhbm5vdCBzcGVjaWZ5IG9wdHMgaW4gdHdvIGFyZ3VtZW50c1wiKTtjb25zdCBhPWU7YS5CSVRTJiYobz1hLkJJVFMpLGEuc3FydCYmKHM9YS5zcXJ0KSx0eXBlb2YgYS5pc0xFPT1cImJvb2xlYW5cIiYmKG49YS5pc0xFKX1lbHNlIHR5cGVvZiBlPT1cIm51bWJlclwiJiYobz1lKSxyLnNxcnQmJihzPXIuc3FydCk7Y29uc3R7bkJpdExlbmd0aDppLG5CeXRlTGVuZ3RoOmZ9PWFjKHQsbyk7aWYoZj4yMDQ4KXRocm93IG5ldyBFcnJvcihcImludmFsaWQgZmllbGQ6IGV4cGVjdGVkIE9SREVSIG9mIDw9IDIwNDggYnl0ZXNcIik7bGV0IGM7Y29uc3QgdT1PYmplY3QuZnJlZXplKHtPUkRFUjp0LGlzTEU6bixCSVRTOmksQllURVM6ZixNQVNLOmplKGkpLFpFUk86b3QsT05FOlEsY3JlYXRlOmE9Pmx0KGEsdCksaXNWYWxpZDphPT57aWYodHlwZW9mIGEhPVwiYmlnaW50XCIpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBmaWVsZCBlbGVtZW50OiBleHBlY3RlZCBiaWdpbnQsIGdvdCBcIit0eXBlb2YgYSk7cmV0dXJuIG90PD1hJiZhPHR9LGlzMDphPT5hPT09b3QsaXNWYWxpZE5vdDA6YT0+IXUuaXMwKGEpJiZ1LmlzVmFsaWQoYSksaXNPZGQ6YT0+KGEmUSk9PT1RLG5lZzphPT5sdCgtYSx0KSxlcWw6KGEsbCk9PmE9PT1sLHNxcjphPT5sdChhKmEsdCksYWRkOihhLGwpPT5sdChhK2wsdCksc3ViOihhLGwpPT5sdChhLWwsdCksbXVsOihhLGwpPT5sdChhKmwsdCkscG93OihhLGwpPT5jYyh1LGEsbCksZGl2OihhLGwpPT5sdChhKnlvKGwsdCksdCksc3FyTjphPT5hKmEsYWRkTjooYSxsKT0+YStsLHN1Yk46KGEsbCk9PmEtbCxtdWxOOihhLGwpPT5hKmwsaW52OmE9PnlvKGEsdCksc3FydDpzfHwoYT0+KGN8fChjPXNjKHQpKSxjKHUsYSkpKSx0b0J5dGVzOmE9Pm4/QW4oYSxmKTpJbihhLGYpLGZyb21CeXRlczphPT57aWYoYS5sZW5ndGghPT1mKXRocm93IG5ldyBFcnJvcihcIkZpZWxkLmZyb21CeXRlczogZXhwZWN0ZWQgXCIrZitcIiBieXRlcywgZ290IFwiK2EubGVuZ3RoKTtyZXR1cm4gbj9MZShhKTpDZShhKX0saW52ZXJ0QmF0Y2g6YT0+d28odSxhKSxjbW92OihhLGwsaCk9Pmg/bDphfSk7cmV0dXJuIE9iamVjdC5mcmVlemUodSl9ZnVuY3Rpb24gdm8odCl7aWYodHlwZW9mIHQhPVwiYmlnaW50XCIpdGhyb3cgbmV3IEVycm9yKFwiZmllbGQgb3JkZXIgbXVzdCBiZSBiaWdpbnRcIik7Y29uc3QgZT10LnRvU3RyaW5nKDIpLmxlbmd0aDtyZXR1cm4gTWF0aC5jZWlsKGUvOCl9ZnVuY3Rpb24gRW8odCl7Y29uc3QgZT12byh0KTtyZXR1cm4gZStNYXRoLmNlaWwoZS8yKX1mdW5jdGlvbiB1Yyh0LGUsbj0hMSl7Y29uc3Qgcj10Lmxlbmd0aCxvPXZvKGUpLHM9RW8oZSk7aWYocjwxNnx8cjxzfHxyPjEwMjQpdGhyb3cgbmV3IEVycm9yKFwiZXhwZWN0ZWQgXCIrcytcIi0xMDI0IGJ5dGVzIG9mIGlucHV0LCBnb3QgXCIrcik7Y29uc3QgaT1uP0xlKHQpOkNlKHQpLGY9bHQoaSxlLVEpK1E7cmV0dXJuIG4/QW4oZixvKTpJbihmLG8pfWNvbnN0IFh0PUJpZ0ludCgwKSxNdD1CaWdJbnQoMSk7ZnVuY3Rpb24gbGUodCxlKXtjb25zdCBuPWUubmVnYXRlKCk7cmV0dXJuIHQ/bjplfWZ1bmN0aW9uIGxjKHQsZSxuKXtjb25zdCByPWU9PT1cInB6XCI/aT0+aS5wejppPT5pLmV6LG89d28odC5GcCxuLm1hcChyKSk7cmV0dXJuIG4ubWFwKChpLGYpPT5pLnRvQWZmaW5lKG9bZl0pKS5tYXAodC5mcm9tQWZmaW5lKX1mdW5jdGlvbiBCbyh0LGUpe2lmKCFOdW1iZXIuaXNTYWZlSW50ZWdlcih0KXx8dDw9MHx8dD5lKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgd2luZG93IHNpemUsIGV4cGVjdGVkIFsxLi5cIitlK1wiXSwgZ290IFc9XCIrdCl9ZnVuY3Rpb24gT24odCxlKXtCbyh0LGUpO2NvbnN0IG49TWF0aC5jZWlsKGUvdCkrMSxyPTIqKih0LTEpLG89MioqdCxzPWplKHQpLGk9QmlnSW50KHQpO3JldHVybnt3aW5kb3dzOm4sd2luZG93U2l6ZTpyLG1hc2s6cyxtYXhOdW1iZXI6byxzaGlmdEJ5Oml9fWZ1bmN0aW9uIElvKHQsZSxuKXtjb25zdHt3aW5kb3dTaXplOnIsbWFzazpvLG1heE51bWJlcjpzLHNoaWZ0Qnk6aX09bjtsZXQgZj1OdW1iZXIodCZvKSxjPXQ+Pmk7Zj5yJiYoZi09cyxjKz1NdCk7Y29uc3QgdT1lKnIsYT11K01hdGguYWJzKGYpLTEsbD1mPT09MCxoPWY8MCxnPWUlMiE9PTA7cmV0dXJue25leHROOmMsb2Zmc2V0OmEsaXNaZXJvOmwsaXNOZWc6aCxpc05lZ0Y6ZyxvZmZzZXRGOnV9fWZ1bmN0aW9uIGRjKHQsZSl7aWYoIUFycmF5LmlzQXJyYXkodCkpdGhyb3cgbmV3IEVycm9yKFwiYXJyYXkgZXhwZWN0ZWRcIik7dC5mb3JFYWNoKChuLHIpPT57aWYoIShuIGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBwb2ludCBhdCBpbmRleCBcIityKX0pfWZ1bmN0aW9uIGhjKHQsZSl7aWYoIUFycmF5LmlzQXJyYXkodCkpdGhyb3cgbmV3IEVycm9yKFwiYXJyYXkgb2Ygc2NhbGFycyBleHBlY3RlZFwiKTt0LmZvckVhY2goKG4scik9PntpZighZS5pc1ZhbGlkKG4pKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgc2NhbGFyIGF0IGluZGV4IFwiK3IpfSl9Y29uc3QgVW49bmV3IFdlYWtNYXAsQW89bmV3IFdlYWtNYXA7ZnVuY3Rpb24gX24odCl7cmV0dXJuIEFvLmdldCh0KXx8MX1mdW5jdGlvbiBTbyh0KXtpZih0IT09WHQpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCB3TkFGXCIpfWZ1bmN0aW9uIHBjKHQsZSl7cmV0dXJue2NvbnN0VGltZU5lZ2F0ZTpsZSxoYXNQcmVjb21wdXRlcyhuKXtyZXR1cm4gX24obikhPT0xfSx1bnNhZmVMYWRkZXIobixyLG89dC5aRVJPKXtsZXQgcz1uO2Zvcig7cj5YdDspciZNdCYmKG89by5hZGQocykpLHM9cy5kb3VibGUoKSxyPj49TXQ7cmV0dXJuIG99LHByZWNvbXB1dGVXaW5kb3cobixyKXtjb25zdHt3aW5kb3dzOm8sd2luZG93U2l6ZTpzfT1PbihyLGUpLGk9W107bGV0IGY9bixjPWY7Zm9yKGxldCB1PTA7dTxvO3UrKyl7Yz1mLGkucHVzaChjKTtmb3IobGV0IGE9MTthPHM7YSsrKWM9Yy5hZGQoZiksaS5wdXNoKGMpO2Y9Yy5kb3VibGUoKX1yZXR1cm4gaX0sd05BRihuLHIsbyl7bGV0IHM9dC5aRVJPLGk9dC5CQVNFO2NvbnN0IGY9T24obixlKTtmb3IobGV0IGM9MDtjPGYud2luZG93cztjKyspe2NvbnN0e25leHROOnUsb2Zmc2V0OmEsaXNaZXJvOmwsaXNOZWc6aCxpc05lZ0Y6ZyxvZmZzZXRGOm19PUlvKG8sYyxmKTtvPXUsbD9pPWkuYWRkKGxlKGcsclttXSkpOnM9cy5hZGQobGUoaCxyW2FdKSl9cmV0dXJuIFNvKG8pLHtwOnMsZjppfX0sd05BRlVuc2FmZShuLHIsbyxzPXQuWkVSTyl7Y29uc3QgaT1PbihuLGUpO2ZvcihsZXQgZj0wO2Y8aS53aW5kb3dzJiZvIT09WHQ7ZisrKXtjb25zdHtuZXh0TjpjLG9mZnNldDp1LGlzWmVybzphLGlzTmVnOmx9PUlvKG8sZixpKTtpZihvPWMsIWEpe2NvbnN0IGg9clt1XTtzPXMuYWRkKGw/aC5uZWdhdGUoKTpoKX19cmV0dXJuIFNvKG8pLHN9LGdldFByZWNvbXB1dGVzKG4scixvKXtsZXQgcz1Vbi5nZXQocik7cmV0dXJuIHN8fChzPXRoaXMucHJlY29tcHV0ZVdpbmRvdyhyLG4pLG4hPT0xJiYodHlwZW9mIG89PVwiZnVuY3Rpb25cIiYmKHM9byhzKSksVW4uc2V0KHIscykpKSxzfSx3TkFGQ2FjaGVkKG4scixvKXtjb25zdCBzPV9uKG4pO3JldHVybiB0aGlzLndOQUYocyx0aGlzLmdldFByZWNvbXB1dGVzKHMsbixvKSxyKX0sd05BRkNhY2hlZFVuc2FmZShuLHIsbyxzKXtjb25zdCBpPV9uKG4pO3JldHVybiBpPT09MT90aGlzLnVuc2FmZUxhZGRlcihuLHIscyk6dGhpcy53TkFGVW5zYWZlKGksdGhpcy5nZXRQcmVjb21wdXRlcyhpLG4sbykscixzKX0sc2V0V2luZG93U2l6ZShuLHIpe0JvKHIsZSksQW8uc2V0KG4sciksVW4uZGVsZXRlKG4pfX19ZnVuY3Rpb24gZ2ModCxlLG4scil7bGV0IG89ZSxzPXQuWkVSTyxpPXQuWkVSTztmb3IoO24+WHR8fHI+WHQ7KW4mTXQmJihzPXMuYWRkKG8pKSxyJk10JiYoaT1pLmFkZChvKSksbz1vLmRvdWJsZSgpLG4+Pj1NdCxyPj49TXQ7cmV0dXJue3AxOnMscDI6aX19ZnVuY3Rpb24gYmModCxlLG4scil7ZGMobix0KSxoYyhyLGUpO2NvbnN0IG89bi5sZW5ndGgscz1yLmxlbmd0aDtpZihvIT09cyl0aHJvdyBuZXcgRXJyb3IoXCJhcnJheXMgb2YgcG9pbnRzIGFuZCBzY2FsYXJzIG11c3QgaGF2ZSBlcXVhbCBsZW5ndGhcIik7Y29uc3QgaT10LlpFUk8sZj10YyhCaWdJbnQobykpO2xldCBjPTE7Zj4xMj9jPWYtMzpmPjQ/Yz1mLTI6Zj4wJiYoYz0yKTtjb25zdCB1PWplKGMpLGE9bmV3IEFycmF5KE51bWJlcih1KSsxKS5maWxsKGkpLGw9TWF0aC5mbG9vcigoZS5CSVRTLTEpL2MpKmM7bGV0IGg9aTtmb3IobGV0IGc9bDtnPj0wO2ctPWMpe2EuZmlsbChpKTtmb3IobGV0IGI9MDtiPHM7YisrKXtjb25zdCB2PXJbYl0sTD1OdW1iZXIodj4+QmlnSW50KGcpJnUpO2FbTF09YVtMXS5hZGQobltiXSl9bGV0IG09aTtmb3IobGV0IGI9YS5sZW5ndGgtMSx2PWk7Yj4wO2ItLSl2PXYuYWRkKGFbYl0pLG09bS5hZGQodik7aWYoaD1oLmFkZChtKSxnIT09MClmb3IobGV0IGI9MDtiPGM7YisrKWg9aC5kb3VibGUoKX1yZXR1cm4gaH1mdW5jdGlvbiBObyh0LGUpe2lmKGUpe2lmKGUuT1JERVIhPT10KXRocm93IG5ldyBFcnJvcihcIkZpZWxkLk9SREVSIG11c3QgbWF0Y2ggb3JkZXI6IEZwID09IHAsIEZuID09IG5cIik7cmV0dXJuIGZjKGUpLGV9ZWxzZSByZXR1cm4gWXQodCl9ZnVuY3Rpb24geWModCxlLG49e30pe2lmKCFlfHx0eXBlb2YgZSE9XCJvYmplY3RcIil0aHJvdyBuZXcgRXJyb3IoYGV4cGVjdGVkIHZhbGlkICR7dH0gQ1VSVkUgb2JqZWN0YCk7Zm9yKGNvbnN0IGYgb2ZbXCJwXCIsXCJuXCIsXCJoXCJdKXtjb25zdCBjPWVbZl07aWYoISh0eXBlb2YgYz09XCJiaWdpbnRcIiYmYz5YdCkpdGhyb3cgbmV3IEVycm9yKGBDVVJWRS4ke2Z9IG11c3QgYmUgcG9zaXRpdmUgYmlnaW50YCl9Y29uc3Qgcj1ObyhlLnAsbi5GcCksbz1ObyhlLm4sbi5GbiksaT1bXCJHeFwiLFwiR3lcIixcImFcIix0PT09XCJ3ZWllcnN0cmFzc1wiP1wiYlwiOlwiZFwiXTtmb3IoY29uc3QgZiBvZiBpKWlmKCFyLmlzVmFsaWQoZVtmXSkpdGhyb3cgbmV3IEVycm9yKGBDVVJWRS4ke2Z9IG11c3QgYmUgdmFsaWQgZmllbGQgZWxlbWVudCBvZiBDVVJWRS5GcGApO3JldHVybntGcDpyLEZuOm99fUJpZ0ludCgwKSxCaWdJbnQoMSksQmlnSW50KDIpLEJpZ0ludCg4KTtjb25zdCBkZT1CaWdJbnQoMCksSnQ9QmlnSW50KDEpLFBlPUJpZ0ludCgyKTtmdW5jdGlvbiBtYyh0KXtyZXR1cm4ga2UodCx7YWRqdXN0U2NhbGFyQnl0ZXM6XCJmdW5jdGlvblwiLHBvd1BtaW51czI6XCJmdW5jdGlvblwifSksT2JqZWN0LmZyZWV6ZSh7Li4udH0pfWZ1bmN0aW9uIHdjKHQpe2NvbnN0IGU9bWModCkse1A6bix0eXBlOnIsYWRqdXN0U2NhbGFyQnl0ZXM6byxwb3dQbWludXMyOnMscmFuZG9tQnl0ZXM6aX09ZSxmPXI9PT1cIngyNTUxOVwiO2lmKCFmJiZyIT09XCJ4NDQ4XCIpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCB0eXBlXCIpO2NvbnN0IGM9aXx8WnQsdT1mPzI1NTo0NDgsYT1mPzMyOjU2LGw9QmlnSW50KGY/OTo1KSxoPUJpZ0ludChmPzEyMTY2NTozOTA4MSksZz1mP1BlKipCaWdJbnQoMjU0KTpQZSoqQmlnSW50KDQ0NyksbT1mP0JpZ0ludCg4KSpQZSoqQmlnSW50KDI1MSktSnQ6QmlnSW50KDQpKlBlKipCaWdJbnQoNDQ1KS1KdCxiPWcrbStKdCx2PWQ9Pmx0KGQsbiksTD1WKGwpO2Z1bmN0aW9uIFYoZCl7cmV0dXJuIEFuKHYoZCksYSl9ZnVuY3Rpb24gQyhkKXtjb25zdCB3PXJ0KFwidSBjb29yZGluYXRlXCIsZCxhKTtyZXR1cm4gZiYmKHdbMzFdJj0xMjcpLHYoTGUodykpfWZ1bmN0aW9uIEgoZCl7cmV0dXJuIExlKG8ocnQoXCJzY2FsYXJcIixkLGEpKSl9ZnVuY3Rpb24gXyhkLHcpe2NvbnN0IHA9UihDKHcpLEgoZCkpO2lmKHA9PT1kZSl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHByaXZhdGUgb3IgcHVibGljIGtleSByZWNlaXZlZFwiKTtyZXR1cm4gVihwKX1mdW5jdGlvbiBrKGQpe3JldHVybiBfKGQsTCl9ZnVuY3Rpb24gUChkLHcscCl7Y29uc3QgeT12KGQqKHctcCkpO3JldHVybiB3PXYody15KSxwPXYocCt5KSx7eF8yOncseF8zOnB9fWZ1bmN0aW9uIFIoZCx3KXtObihcInVcIixkLGRlLG4pLE5uKFwic2NhbGFyXCIsdyxnLGIpO2NvbnN0IHA9dyx5PWQ7bGV0IHg9SnQsQj1kZSxFPWQsST1KdCxTPWRlO2ZvcihsZXQgQT1CaWdJbnQodS0xKTtBPj1kZTtBLS0pe2NvbnN0IFQ9cD4+QSZKdDtTXj1ULHt4XzI6eCx4XzM6RX09UChTLHgsRSkse3hfMjpCLHhfMzpJfT1QKFMsQixJKSxTPVQ7Y29uc3QgVT14K0IsJD12KFUqVSksRD14LUIscT12KEQqRCksaj0kLXEsSz1FK0ksZXQ9RS1JLFo9dihldCpVKSx6PXYoSypEKSxGdD1aK3oseXQ9Wi16O0U9dihGdCpGdCksST12KHkqdih5dCp5dCkpLHg9digkKnEpLEI9dihqKigkK3YoaCpqKSkpfSh7eF8yOngseF8zOkV9PVAoUyx4LEUpKSx7eF8yOkIseF8zOkl9PVAoUyxCLEkpO2NvbnN0IE89cyhCKTtyZXR1cm4gdih4Kk8pfXJldHVybntzY2FsYXJNdWx0Ol8sc2NhbGFyTXVsdEJhc2U6ayxnZXRTaGFyZWRTZWNyZXQ6KGQsdyk9Pl8oZCx3KSxnZXRQdWJsaWNLZXk6ZD0+ayhkKSx1dGlsczp7cmFuZG9tUHJpdmF0ZUtleTooKT0+YyhhKX0sR3VCeXRlczpMLnNsaWNlKCl9fUJpZ0ludCgwKTtjb25zdCB4Yz1CaWdJbnQoMSksT289QmlnSW50KDIpLHZjPUJpZ0ludCgzKSxFYz1CaWdJbnQoNSksQmM9QmlnSW50KDgpLFVvPXtwOkJpZ0ludChcIjB4N2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZlZFwiKSxuOkJpZ0ludChcIjB4MTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxNGRlZjlkZWEyZjc5Y2Q2NTgxMjYzMWE1Y2Y1ZDNlZFwiKSxoOkJjLGE6QmlnSW50KFwiMHg3ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVjXCIpLGQ6QmlnSW50KFwiMHg1MjAzNmNlZTJiNmZmZTczOGNjNzQwNzk3Nzc5ZTg5ODAwNzAwYTRkNDE0MWQ4YWI3NWViNGRjYTEzNTk3OGEzXCIpLEd4OkJpZ0ludChcIjB4MjE2OTM2ZDNjZDZlNTNmZWMwYTRlMjMxZmRkNmRjNWM2OTJjYzc2MDk1MjVhN2IyYzk1NjJkNjA4ZjI1ZDUxYVwiKSxHeTpCaWdJbnQoXCIweDY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NThcIil9O2Z1bmN0aW9uIEljKHQpe2NvbnN0IGU9QmlnSW50KDEwKSxuPUJpZ0ludCgyMCkscj1CaWdJbnQoNDApLG89QmlnSW50KDgwKSxzPVVvLnAsZj10KnQlcyp0JXMsYz1wdChmLE9vLHMpKmYlcyx1PXB0KGMseGMscykqdCVzLGE9cHQodSxFYyxzKSp1JXMsbD1wdChhLGUscykqYSVzLGg9cHQobCxuLHMpKmwlcyxnPXB0KGgscixzKSpoJXMsbT1wdChnLG8scykqZyVzLGI9cHQobSxvLHMpKmclcyx2PXB0KGIsZSxzKSphJXM7cmV0dXJue3Bvd19wXzVfODpwdCh2LE9vLHMpKnQlcyxiMjpmfX1mdW5jdGlvbiBBYyh0KXtyZXR1cm4gdFswXSY9MjQ4LHRbMzFdJj0xMjcsdFszMV18PTY0LHR9Y29uc3QgVG49KCgpPT57Y29uc3QgdD1Vby5wO3JldHVybiB3Yyh7UDp0LHR5cGU6XCJ4MjU1MTlcIixwb3dQbWludXMyOmU9Pntjb25zdHtwb3dfcF81Xzg6bixiMjpyfT1JYyhlKTtyZXR1cm4gbHQocHQobix2Yyx0KSpyLHQpfSxhZGp1c3RTY2FsYXJCeXRlczpBY30pfSkoKTtmdW5jdGlvbiBfbyh0KXt0Lmxvd1MhPT12b2lkIDAmJlJlKFwibG93U1wiLHQubG93UyksdC5wcmVoYXNoIT09dm9pZCAwJiZSZShcInByZWhhc2hcIix0LnByZWhhc2gpfWNsYXNzIFNjIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoZT1cIlwiKXtzdXBlcihlKX19Y29uc3QgdnQ9e0VycjpTYyxfdGx2OntlbmNvZGU6KHQsZSk9Pntjb25zdHtFcnI6bn09dnQ7aWYodDwwfHx0PjI1Nil0aHJvdyBuZXcgbihcInRsdi5lbmNvZGU6IHdyb25nIHRhZ1wiKTtpZihlLmxlbmd0aCYxKXRocm93IG5ldyBuKFwidGx2LmVuY29kZTogdW5wYWRkZWQgZGF0YVwiKTtjb25zdCByPWUubGVuZ3RoLzIsbz0kZShyKTtpZihvLmxlbmd0aC8yJjEyOCl0aHJvdyBuZXcgbihcInRsdi5lbmNvZGU6IGxvbmcgZm9ybSBsZW5ndGggdG9vIGJpZ1wiKTtjb25zdCBzPXI+MTI3PyRlKG8ubGVuZ3RoLzJ8MTI4KTpcIlwiO3JldHVybiAkZSh0KStzK28rZX0sZGVjb2RlKHQsZSl7Y29uc3R7RXJyOm59PXZ0O2xldCByPTA7aWYodDwwfHx0PjI1Nil0aHJvdyBuZXcgbihcInRsdi5lbmNvZGU6IHdyb25nIHRhZ1wiKTtpZihlLmxlbmd0aDwyfHxlW3IrK10hPT10KXRocm93IG5ldyBuKFwidGx2LmRlY29kZTogd3JvbmcgdGx2XCIpO2NvbnN0IG89ZVtyKytdLHM9ISEobyYxMjgpO2xldCBpPTA7aWYoIXMpaT1vO2Vsc2V7Y29uc3QgYz1vJjEyNztpZighYyl0aHJvdyBuZXcgbihcInRsdi5kZWNvZGUobG9uZyk6IGluZGVmaW5pdGUgbGVuZ3RoIG5vdCBzdXBwb3J0ZWRcIik7aWYoYz40KXRocm93IG5ldyBuKFwidGx2LmRlY29kZShsb25nKTogYnl0ZSBsZW5ndGggaXMgdG9vIGJpZ1wiKTtjb25zdCB1PWUuc3ViYXJyYXkocixyK2MpO2lmKHUubGVuZ3RoIT09Yyl0aHJvdyBuZXcgbihcInRsdi5kZWNvZGU6IGxlbmd0aCBieXRlcyBub3QgY29tcGxldGVcIik7aWYodVswXT09PTApdGhyb3cgbmV3IG4oXCJ0bHYuZGVjb2RlKGxvbmcpOiB6ZXJvIGxlZnRtb3N0IGJ5dGVcIik7Zm9yKGNvbnN0IGEgb2YgdSlpPWk8PDh8YTtpZihyKz1jLGk8MTI4KXRocm93IG5ldyBuKFwidGx2LmRlY29kZShsb25nKTogbm90IG1pbmltYWwgZW5jb2RpbmdcIil9Y29uc3QgZj1lLnN1YmFycmF5KHIscitpKTtpZihmLmxlbmd0aCE9PWkpdGhyb3cgbmV3IG4oXCJ0bHYuZGVjb2RlOiB3cm9uZyB2YWx1ZSBsZW5ndGhcIik7cmV0dXJue3Y6ZixsOmUuc3ViYXJyYXkocitpKX19fSxfaW50OntlbmNvZGUodCl7Y29uc3R7RXJyOmV9PXZ0O2lmKHQ8aGUpdGhyb3cgbmV3IGUoXCJpbnRlZ2VyOiBuZWdhdGl2ZSBpbnRlZ2VycyBhcmUgbm90IGFsbG93ZWRcIik7bGV0IG49JGUodCk7aWYoTnVtYmVyLnBhcnNlSW50KG5bMF0sMTYpJjgmJihuPVwiMDBcIituKSxuLmxlbmd0aCYxKXRocm93IG5ldyBlKFwidW5leHBlY3RlZCBERVIgcGFyc2luZyBhc3NlcnRpb246IHVucGFkZGVkIGhleFwiKTtyZXR1cm4gbn0sZGVjb2RlKHQpe2NvbnN0e0VycjplfT12dDtpZih0WzBdJjEyOCl0aHJvdyBuZXcgZShcImludmFsaWQgc2lnbmF0dXJlIGludGVnZXI6IG5lZ2F0aXZlXCIpO2lmKHRbMF09PT0wJiYhKHRbMV0mMTI4KSl0aHJvdyBuZXcgZShcImludmFsaWQgc2lnbmF0dXJlIGludGVnZXI6IHVubmVjZXNzYXJ5IGxlYWRpbmcgemVyb1wiKTtyZXR1cm4gQ2UodCl9fSx0b1NpZyh0KXtjb25zdHtFcnI6ZSxfaW50Om4sX3RsdjpyfT12dCxvPXJ0KFwic2lnbmF0dXJlXCIsdCkse3Y6cyxsOml9PXIuZGVjb2RlKDQ4LG8pO2lmKGkubGVuZ3RoKXRocm93IG5ldyBlKFwiaW52YWxpZCBzaWduYXR1cmU6IGxlZnQgYnl0ZXMgYWZ0ZXIgcGFyc2luZ1wiKTtjb25zdHt2OmYsbDpjfT1yLmRlY29kZSgyLHMpLHt2OnUsbDphfT1yLmRlY29kZSgyLGMpO2lmKGEubGVuZ3RoKXRocm93IG5ldyBlKFwiaW52YWxpZCBzaWduYXR1cmU6IGxlZnQgYnl0ZXMgYWZ0ZXIgcGFyc2luZ1wiKTtyZXR1cm57cjpuLmRlY29kZShmKSxzOm4uZGVjb2RlKHUpfX0saGV4RnJvbVNpZyh0KXtjb25zdHtfdGx2OmUsX2ludDpufT12dCxyPWUuZW5jb2RlKDIsbi5lbmNvZGUodC5yKSksbz1lLmVuY29kZSgyLG4uZW5jb2RlKHQucykpLHM9citvO3JldHVybiBlLmVuY29kZSg0OCxzKX19LGhlPUJpZ0ludCgwKSxwZT1CaWdJbnQoMSksTmM9QmlnSW50KDIpLEhlPUJpZ0ludCgzKSxPYz1CaWdJbnQoNCk7ZnVuY3Rpb24gVWModCxlLG4pe2Z1bmN0aW9uIHIobyl7Y29uc3Qgcz10LnNxcihvKSxpPXQubXVsKHMsbyk7cmV0dXJuIHQuYWRkKHQuYWRkKGksdC5tdWwobyxlKSksbil9cmV0dXJuIHJ9ZnVuY3Rpb24gVG8odCxlLG4pe2NvbnN0e0JZVEVTOnJ9PXQ7ZnVuY3Rpb24gbyhzKXtsZXQgaTtpZih0eXBlb2Ygcz09XCJiaWdpbnRcIilpPXM7ZWxzZXtsZXQgZj1ydChcInByaXZhdGUga2V5XCIscyk7aWYoZSl7aWYoIWUuaW5jbHVkZXMoZi5sZW5ndGgqMikpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBwcml2YXRlIGtleVwiKTtjb25zdCBjPW5ldyBVaW50OEFycmF5KHIpO2Muc2V0KGYsYy5sZW5ndGgtZi5sZW5ndGgpLGY9Y310cnl7aT10LmZyb21CeXRlcyhmKX1jYXRjaHt0aHJvdyBuZXcgRXJyb3IoYGludmFsaWQgcHJpdmF0ZSBrZXk6IGV4cGVjdGVkIHVpOGEgb2Ygc2l6ZSAke3J9LCBnb3QgJHt0eXBlb2Ygc31gKX19aWYobiYmKGk9dC5jcmVhdGUoaSkpLCF0LmlzVmFsaWROb3QwKGkpKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgcHJpdmF0ZSBrZXk6IG91dCBvZiByYW5nZSBbMS4uTi0xXVwiKTtyZXR1cm4gaX1yZXR1cm4gb31mdW5jdGlvbiBfYyh0LGU9e30pe2NvbnN0e0ZwOm4sRm46cn09eWMoXCJ3ZWllcnN0cmFzc1wiLHQsZSkse2g6byxuOnN9PXQ7a2UoZSx7fSx7YWxsb3dJbmZpbml0eVBvaW50OlwiYm9vbGVhblwiLGNsZWFyQ29mYWN0b3I6XCJmdW5jdGlvblwiLGlzVG9yc2lvbkZyZWU6XCJmdW5jdGlvblwiLGZyb21CeXRlczpcImZ1bmN0aW9uXCIsdG9CeXRlczpcImZ1bmN0aW9uXCIsZW5kbzpcIm9iamVjdFwiLHdyYXBQcml2YXRlS2V5OlwiYm9vbGVhblwifSk7Y29uc3R7ZW5kbzppfT1lO2lmKGkmJighbi5pczAodC5hKXx8dHlwZW9mIGkuYmV0YSE9XCJiaWdpbnRcInx8dHlwZW9mIGkuc3BsaXRTY2FsYXIhPVwiZnVuY3Rpb25cIikpdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGVuZG86IGV4cGVjdGVkIFwiYmV0YVwiOiBiaWdpbnQgYW5kIFwic3BsaXRTY2FsYXJcIjogZnVuY3Rpb24nKTtmdW5jdGlvbiBmKCl7aWYoIW4uaXNPZGQpdGhyb3cgbmV3IEVycm9yKFwiY29tcHJlc3Npb24gaXMgbm90IHN1cHBvcnRlZDogRmllbGQgZG9lcyBub3QgaGF2ZSAuaXNPZGQoKVwiKX1mdW5jdGlvbiBjKFIsZCx3KXtjb25zdHt4OnAseX09ZC50b0FmZmluZSgpLHg9bi50b0J5dGVzKHApO2lmKFJlKFwiaXNDb21wcmVzc2VkXCIsdyksdyl7ZigpO2NvbnN0IEI9IW4uaXNPZGQoeSk7cmV0dXJuIEh0KFJvKEIpLHgpfWVsc2UgcmV0dXJuIEh0KFVpbnQ4QXJyYXkub2YoNCkseCxuLnRvQnl0ZXMoeSkpfWZ1bmN0aW9uIHUoUil7YXQoUik7Y29uc3QgZD1uLkJZVEVTLHc9ZCsxLHA9MipkKzEseT1SLmxlbmd0aCx4PVJbMF0sQj1SLnN1YmFycmF5KDEpO2lmKHk9PT13JiYoeD09PTJ8fHg9PT0zKSl7Y29uc3QgRT1uLmZyb21CeXRlcyhCKTtpZighbi5pc1ZhbGlkKEUpKXRocm93IG5ldyBFcnJvcihcImJhZCBwb2ludDogaXMgbm90IG9uIGN1cnZlLCB3cm9uZyB4XCIpO2NvbnN0IEk9aChFKTtsZXQgUzt0cnl7Uz1uLnNxcnQoSSl9Y2F0Y2goVCl7Y29uc3QgVT1UIGluc3RhbmNlb2YgRXJyb3I/XCI6IFwiK1QubWVzc2FnZTpcIlwiO3Rocm93IG5ldyBFcnJvcihcImJhZCBwb2ludDogaXMgbm90IG9uIGN1cnZlLCBzcXJ0IGVycm9yXCIrVSl9ZigpO2NvbnN0IE89bi5pc09kZChTKTtyZXR1cm4oeCYxKT09PTEhPT1PJiYoUz1uLm5lZyhTKSkse3g6RSx5OlN9fWVsc2UgaWYoeT09PXAmJng9PT00KXtjb25zdCBFPW4uZnJvbUJ5dGVzKEIuc3ViYXJyYXkoZCowLGQqMSkpLEk9bi5mcm9tQnl0ZXMoQi5zdWJhcnJheShkKjEsZCoyKSk7aWYoIWcoRSxJKSl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgcG9pbnQ6IGlzIG5vdCBvbiBjdXJ2ZVwiKTtyZXR1cm57eDpFLHk6SX19ZWxzZSB0aHJvdyBuZXcgRXJyb3IoYGJhZCBwb2ludDogZ290IGxlbmd0aCAke3l9LCBleHBlY3RlZCBjb21wcmVzc2VkPSR7d30gb3IgdW5jb21wcmVzc2VkPSR7cH1gKX1jb25zdCBhPWUudG9CeXRlc3x8YyxsPWUuZnJvbUJ5dGVzfHx1LGg9VWMobix0LmEsdC5iKTtmdW5jdGlvbiBnKFIsZCl7Y29uc3Qgdz1uLnNxcihkKSxwPWgoUik7cmV0dXJuIG4uZXFsKHcscCl9aWYoIWcodC5HeCx0Lkd5KSl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgY3VydmUgcGFyYW1zOiBnZW5lcmF0b3IgcG9pbnRcIik7Y29uc3QgbT1uLm11bChuLnBvdyh0LmEsSGUpLE9jKSxiPW4ubXVsKG4uc3FyKHQuYiksQmlnSW50KDI3KSk7aWYobi5pczAobi5hZGQobSxiKSkpdGhyb3cgbmV3IEVycm9yKFwiYmFkIGN1cnZlIHBhcmFtczogYSBvciBiXCIpO2Z1bmN0aW9uIHYoUixkLHc9ITEpe2lmKCFuLmlzVmFsaWQoZCl8fHcmJm4uaXMwKGQpKXRocm93IG5ldyBFcnJvcihgYmFkIHBvaW50IGNvb3JkaW5hdGUgJHtSfWApO3JldHVybiBkfWZ1bmN0aW9uIEwoUil7aWYoIShSIGluc3RhbmNlb2YgXykpdGhyb3cgbmV3IEVycm9yKFwiUHJvamVjdGl2ZVBvaW50IGV4cGVjdGVkXCIpfWNvbnN0IFY9aG8oKFIsZCk9Pntjb25zdHtweDp3LHB5OnAscHo6eX09UjtpZihuLmVxbCh5LG4uT05FKSlyZXR1cm57eDp3LHk6cH07Y29uc3QgeD1SLmlzMCgpO2Q9PW51bGwmJihkPXg/bi5PTkU6bi5pbnYoeSkpO2NvbnN0IEI9bi5tdWwodyxkKSxFPW4ubXVsKHAsZCksST1uLm11bCh5LGQpO2lmKHgpcmV0dXJue3g6bi5aRVJPLHk6bi5aRVJPfTtpZighbi5lcWwoSSxuLk9ORSkpdGhyb3cgbmV3IEVycm9yKFwiaW52WiB3YXMgaW52YWxpZFwiKTtyZXR1cm57eDpCLHk6RX19KSxDPWhvKFI9PntpZihSLmlzMCgpKXtpZihlLmFsbG93SW5maW5pdHlQb2ludCYmIW4uaXMwKFIucHkpKXJldHVybjt0aHJvdyBuZXcgRXJyb3IoXCJiYWQgcG9pbnQ6IFpFUk9cIil9Y29uc3R7eDpkLHk6d309Ui50b0FmZmluZSgpO2lmKCFuLmlzVmFsaWQoZCl8fCFuLmlzVmFsaWQodykpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHBvaW50OiB4IG9yIHkgbm90IGZpZWxkIGVsZW1lbnRzXCIpO2lmKCFnKGQsdykpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHBvaW50OiBlcXVhdGlvbiBsZWZ0ICE9IHJpZ2h0XCIpO2lmKCFSLmlzVG9yc2lvbkZyZWUoKSl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgcG9pbnQ6IG5vdCBpbiBwcmltZS1vcmRlciBzdWJncm91cFwiKTtyZXR1cm4hMH0pO2Z1bmN0aW9uIEgoUixkLHcscCx5KXtyZXR1cm4gdz1uZXcgXyhuLm11bCh3LnB4LFIpLHcucHksdy5weiksZD1sZShwLGQpLHc9bGUoeSx3KSxkLmFkZCh3KX1jbGFzcyBfe2NvbnN0cnVjdG9yKGQsdyxwKXt0aGlzLnB4PXYoXCJ4XCIsZCksdGhpcy5weT12KFwieVwiLHcsITApLHRoaXMucHo9dihcInpcIixwKSxPYmplY3QuZnJlZXplKHRoaXMpfXN0YXRpYyBmcm9tQWZmaW5lKGQpe2NvbnN0e3g6dyx5OnB9PWR8fHt9O2lmKCFkfHwhbi5pc1ZhbGlkKHcpfHwhbi5pc1ZhbGlkKHApKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgYWZmaW5lIHBvaW50XCIpO2lmKGQgaW5zdGFuY2VvZiBfKXRocm93IG5ldyBFcnJvcihcInByb2plY3RpdmUgcG9pbnQgbm90IGFsbG93ZWRcIik7cmV0dXJuIG4uaXMwKHcpJiZuLmlzMChwKT9fLlpFUk86bmV3IF8odyxwLG4uT05FKX1nZXQgeCgpe3JldHVybiB0aGlzLnRvQWZmaW5lKCkueH1nZXQgeSgpe3JldHVybiB0aGlzLnRvQWZmaW5lKCkueX1zdGF0aWMgbm9ybWFsaXplWihkKXtyZXR1cm4gbGMoXyxcInB6XCIsZCl9c3RhdGljIGZyb21CeXRlcyhkKXtyZXR1cm4gYXQoZCksXy5mcm9tSGV4KGQpfXN0YXRpYyBmcm9tSGV4KGQpe2NvbnN0IHc9Xy5mcm9tQWZmaW5lKGwocnQoXCJwb2ludEhleFwiLGQpKSk7cmV0dXJuIHcuYXNzZXJ0VmFsaWRpdHkoKSx3fXN0YXRpYyBmcm9tUHJpdmF0ZUtleShkKXtjb25zdCB3PVRvKHIsZS5hbGxvd2VkUHJpdmF0ZUtleUxlbmd0aHMsZS53cmFwUHJpdmF0ZUtleSk7cmV0dXJuIF8uQkFTRS5tdWx0aXBseSh3KGQpKX1zdGF0aWMgbXNtKGQsdyl7cmV0dXJuIGJjKF8scixkLHcpfXByZWNvbXB1dGUoZD04LHc9ITApe3JldHVybiBQLnNldFdpbmRvd1NpemUodGhpcyxkKSx3fHx0aGlzLm11bHRpcGx5KEhlKSx0aGlzfV9zZXRXaW5kb3dTaXplKGQpe3RoaXMucHJlY29tcHV0ZShkKX1hc3NlcnRWYWxpZGl0eSgpe0ModGhpcyl9aGFzRXZlblkoKXtjb25zdHt5OmR9PXRoaXMudG9BZmZpbmUoKTtpZighbi5pc09kZCl0aHJvdyBuZXcgRXJyb3IoXCJGaWVsZCBkb2Vzbid0IHN1cHBvcnQgaXNPZGRcIik7cmV0dXJuIW4uaXNPZGQoZCl9ZXF1YWxzKGQpe0woZCk7Y29uc3R7cHg6dyxweTpwLHB6Onl9PXRoaXMse3B4OngscHk6QixwejpFfT1kLEk9bi5lcWwobi5tdWwodyxFKSxuLm11bCh4LHkpKSxTPW4uZXFsKG4ubXVsKHAsRSksbi5tdWwoQix5KSk7cmV0dXJuIEkmJlN9bmVnYXRlKCl7cmV0dXJuIG5ldyBfKHRoaXMucHgsbi5uZWcodGhpcy5weSksdGhpcy5weil9ZG91YmxlKCl7Y29uc3R7YTpkLGI6d309dCxwPW4ubXVsKHcsSGUpLHtweDp5LHB5OngscHo6Qn09dGhpcztsZXQgRT1uLlpFUk8sST1uLlpFUk8sUz1uLlpFUk8sTz1uLm11bCh5LHkpLEE9bi5tdWwoeCx4KSxUPW4ubXVsKEIsQiksVT1uLm11bCh5LHgpO3JldHVybiBVPW4uYWRkKFUsVSksUz1uLm11bCh5LEIpLFM9bi5hZGQoUyxTKSxFPW4ubXVsKGQsUyksST1uLm11bChwLFQpLEk9bi5hZGQoRSxJKSxFPW4uc3ViKEEsSSksST1uLmFkZChBLEkpLEk9bi5tdWwoRSxJKSxFPW4ubXVsKFUsRSksUz1uLm11bChwLFMpLFQ9bi5tdWwoZCxUKSxVPW4uc3ViKE8sVCksVT1uLm11bChkLFUpLFU9bi5hZGQoVSxTKSxTPW4uYWRkKE8sTyksTz1uLmFkZChTLE8pLE89bi5hZGQoTyxUKSxPPW4ubXVsKE8sVSksST1uLmFkZChJLE8pLFQ9bi5tdWwoeCxCKSxUPW4uYWRkKFQsVCksTz1uLm11bChULFUpLEU9bi5zdWIoRSxPKSxTPW4ubXVsKFQsQSksUz1uLmFkZChTLFMpLFM9bi5hZGQoUyxTKSxuZXcgXyhFLEksUyl9YWRkKGQpe0woZCk7Y29uc3R7cHg6dyxweTpwLHB6Onl9PXRoaXMse3B4OngscHk6QixwejpFfT1kO2xldCBJPW4uWkVSTyxTPW4uWkVSTyxPPW4uWkVSTztjb25zdCBBPXQuYSxUPW4ubXVsKHQuYixIZSk7bGV0IFU9bi5tdWwodyx4KSwkPW4ubXVsKHAsQiksRD1uLm11bCh5LEUpLHE9bi5hZGQodyxwKSxqPW4uYWRkKHgsQik7cT1uLm11bChxLGopLGo9bi5hZGQoVSwkKSxxPW4uc3ViKHEsaiksaj1uLmFkZCh3LHkpO2xldCBLPW4uYWRkKHgsRSk7cmV0dXJuIGo9bi5tdWwoaixLKSxLPW4uYWRkKFUsRCksaj1uLnN1YihqLEspLEs9bi5hZGQocCx5KSxJPW4uYWRkKEIsRSksSz1uLm11bChLLEkpLEk9bi5hZGQoJCxEKSxLPW4uc3ViKEssSSksTz1uLm11bChBLGopLEk9bi5tdWwoVCxEKSxPPW4uYWRkKEksTyksST1uLnN1YigkLE8pLE89bi5hZGQoJCxPKSxTPW4ubXVsKEksTyksJD1uLmFkZChVLFUpLCQ9bi5hZGQoJCxVKSxEPW4ubXVsKEEsRCksaj1uLm11bChULGopLCQ9bi5hZGQoJCxEKSxEPW4uc3ViKFUsRCksRD1uLm11bChBLEQpLGo9bi5hZGQoaixEKSxVPW4ubXVsKCQsaiksUz1uLmFkZChTLFUpLFU9bi5tdWwoSyxqKSxJPW4ubXVsKHEsSSksST1uLnN1YihJLFUpLFU9bi5tdWwocSwkKSxPPW4ubXVsKEssTyksTz1uLmFkZChPLFUpLG5ldyBfKEksUyxPKX1zdWJ0cmFjdChkKXtyZXR1cm4gdGhpcy5hZGQoZC5uZWdhdGUoKSl9aXMwKCl7cmV0dXJuIHRoaXMuZXF1YWxzKF8uWkVSTyl9bXVsdGlwbHkoZCl7Y29uc3R7ZW5kbzp3fT1lO2lmKCFyLmlzVmFsaWROb3QwKGQpKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgc2NhbGFyOiBvdXQgb2YgcmFuZ2VcIik7bGV0IHAseTtjb25zdCB4PUI9PlAud05BRkNhY2hlZCh0aGlzLEIsXy5ub3JtYWxpemVaKTtpZih3KXtjb25zdHtrMW5lZzpCLGsxOkUsazJuZWc6SSxrMjpTfT13LnNwbGl0U2NhbGFyKGQpLHtwOk8sZjpBfT14KEUpLHtwOlQsZjpVfT14KFMpO3k9QS5hZGQoVSkscD1IKHcuYmV0YSxPLFQsQixJKX1lbHNle2NvbnN0e3A6QixmOkV9PXgoZCk7cD1CLHk9RX1yZXR1cm4gXy5ub3JtYWxpemVaKFtwLHldKVswXX1tdWx0aXBseVVuc2FmZShkKXtjb25zdHtlbmRvOnd9PWUscD10aGlzO2lmKCFyLmlzVmFsaWQoZCkpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzY2FsYXI6IG91dCBvZiByYW5nZVwiKTtpZihkPT09aGV8fHAuaXMwKCkpcmV0dXJuIF8uWkVSTztpZihkPT09cGUpcmV0dXJuIHA7aWYoUC5oYXNQcmVjb21wdXRlcyh0aGlzKSlyZXR1cm4gdGhpcy5tdWx0aXBseShkKTtpZih3KXtjb25zdHtrMW5lZzp5LGsxOngsazJuZWc6QixrMjpFfT13LnNwbGl0U2NhbGFyKGQpLHtwMTpJLHAyOlN9PWdjKF8scCx4LEUpO3JldHVybiBIKHcuYmV0YSxJLFMseSxCKX1lbHNlIHJldHVybiBQLndOQUZDYWNoZWRVbnNhZmUocCxkKX1tdWx0aXBseUFuZEFkZFVuc2FmZShkLHcscCl7Y29uc3QgeT10aGlzLm11bHRpcGx5VW5zYWZlKHcpLmFkZChkLm11bHRpcGx5VW5zYWZlKHApKTtyZXR1cm4geS5pczAoKT92b2lkIDA6eX10b0FmZmluZShkKXtyZXR1cm4gVih0aGlzLGQpfWlzVG9yc2lvbkZyZWUoKXtjb25zdHtpc1RvcnNpb25GcmVlOmR9PWU7cmV0dXJuIG89PT1wZT8hMDpkP2QoXyx0aGlzKTpQLndOQUZDYWNoZWRVbnNhZmUodGhpcyxzKS5pczAoKX1jbGVhckNvZmFjdG9yKCl7Y29uc3R7Y2xlYXJDb2ZhY3RvcjpkfT1lO3JldHVybiBvPT09cGU/dGhpczpkP2QoXyx0aGlzKTp0aGlzLm11bHRpcGx5VW5zYWZlKG8pfXRvQnl0ZXMoZD0hMCl7cmV0dXJuIFJlKFwiaXNDb21wcmVzc2VkXCIsZCksdGhpcy5hc3NlcnRWYWxpZGl0eSgpLGEoXyx0aGlzLGQpfXRvUmF3Qnl0ZXMoZD0hMCl7cmV0dXJuIHRoaXMudG9CeXRlcyhkKX10b0hleChkPSEwKXtyZXR1cm4gY2UodGhpcy50b0J5dGVzKGQpKX10b1N0cmluZygpe3JldHVybmA8UG9pbnQgJHt0aGlzLmlzMCgpP1wiWkVST1wiOnRoaXMudG9IZXgoKX0+YH19Xy5CQVNFPW5ldyBfKHQuR3gsdC5HeSxuLk9ORSksXy5aRVJPPW5ldyBfKG4uWkVSTyxuLk9ORSxuLlpFUk8pLF8uRnA9bixfLkZuPXI7Y29uc3Qgaz1yLkJJVFMsUD1wYyhfLGUuZW5kbz9NYXRoLmNlaWwoay8yKTprKTtyZXR1cm4gX31mdW5jdGlvbiBSbyh0KXtyZXR1cm4gVWludDhBcnJheS5vZih0PzI6Myl9ZnVuY3Rpb24gVGModCxlLG49e30pe2tlKGUse2hhc2g6XCJmdW5jdGlvblwifSx7aG1hYzpcImZ1bmN0aW9uXCIsbG93UzpcImJvb2xlYW5cIixyYW5kb21CeXRlczpcImZ1bmN0aW9uXCIsYml0czJpbnQ6XCJmdW5jdGlvblwiLGJpdHMyaW50X21vZE46XCJmdW5jdGlvblwifSk7Y29uc3Qgcj1lLnJhbmRvbUJ5dGVzfHxadCxvPWUuaG1hY3x8KChwLC4uLnkpPT5fZShlLmhhc2gscCxIdCguLi55KSkpLHtGcDpzLEZuOml9PXQse09SREVSOmYsQklUUzpjfT1pO2Z1bmN0aW9uIHUocCl7Y29uc3QgeT1mPj5wZTtyZXR1cm4gcD55fWZ1bmN0aW9uIGEocCl7cmV0dXJuIHUocCk/aS5uZWcocCk6cH1mdW5jdGlvbiBsKHAseSl7aWYoIWkuaXNWYWxpZE5vdDAoeSkpdGhyb3cgbmV3IEVycm9yKGBpbnZhbGlkIHNpZ25hdHVyZSAke3B9OiBvdXQgb2YgcmFuZ2UgMS4uQ1VSVkUubmApfWNsYXNzIGh7Y29uc3RydWN0b3IoeSx4LEIpe2woXCJyXCIseSksbChcInNcIix4KSx0aGlzLnI9eSx0aGlzLnM9eCxCIT1udWxsJiYodGhpcy5yZWNvdmVyeT1CKSxPYmplY3QuZnJlZXplKHRoaXMpfXN0YXRpYyBmcm9tQ29tcGFjdCh5KXtjb25zdCB4PWkuQllURVMsQj1ydChcImNvbXBhY3RTaWduYXR1cmVcIix5LHgqMik7cmV0dXJuIG5ldyBoKGkuZnJvbUJ5dGVzKEIuc3ViYXJyYXkoMCx4KSksaS5mcm9tQnl0ZXMoQi5zdWJhcnJheSh4LHgqMikpKX1zdGF0aWMgZnJvbURFUih5KXtjb25zdHtyOngsczpCfT12dC50b1NpZyhydChcIkRFUlwiLHkpKTtyZXR1cm4gbmV3IGgoeCxCKX1hc3NlcnRWYWxpZGl0eSgpe31hZGRSZWNvdmVyeUJpdCh5KXtyZXR1cm4gbmV3IGgodGhpcy5yLHRoaXMucyx5KX1yZWNvdmVyUHVibGljS2V5KHkpe2NvbnN0IHg9cy5PUkRFUix7cjpCLHM6RSxyZWNvdmVyeTpJfT10aGlzO2lmKEk9PW51bGx8fCFbMCwxLDIsM10uaW5jbHVkZXMoSSkpdGhyb3cgbmV3IEVycm9yKFwicmVjb3ZlcnkgaWQgaW52YWxpZFwiKTtpZihmKk5jPHgmJkk+MSl0aHJvdyBuZXcgRXJyb3IoXCJyZWNvdmVyeSBpZCBpcyBhbWJpZ3VvdXMgZm9yIGg+MSBjdXJ2ZVwiKTtjb25zdCBPPUk9PT0yfHxJPT09Mz9CK2Y6QjtpZighcy5pc1ZhbGlkKE8pKXRocm93IG5ldyBFcnJvcihcInJlY292ZXJ5IGlkIDIgb3IgMyBpbnZhbGlkXCIpO2NvbnN0IEE9cy50b0J5dGVzKE8pLFQ9dC5mcm9tSGV4KEh0KFJvKChJJjEpPT09MCksQSkpLFU9aS5pbnYoTyksJD1DKHJ0KFwibXNnSGFzaFwiLHkpKSxEPWkuY3JlYXRlKC0kKlUpLHE9aS5jcmVhdGUoRSpVKSxqPXQuQkFTRS5tdWx0aXBseVVuc2FmZShEKS5hZGQoVC5tdWx0aXBseVVuc2FmZShxKSk7aWYoai5pczAoKSl0aHJvdyBuZXcgRXJyb3IoXCJwb2ludCBhdCBpbmZpbmlmeVwiKTtyZXR1cm4gai5hc3NlcnRWYWxpZGl0eSgpLGp9aGFzSGlnaFMoKXtyZXR1cm4gdSh0aGlzLnMpfW5vcm1hbGl6ZVMoKXtyZXR1cm4gdGhpcy5oYXNIaWdoUygpP25ldyBoKHRoaXMucixpLm5lZyh0aGlzLnMpLHRoaXMucmVjb3ZlcnkpOnRoaXN9dG9CeXRlcyh5KXtpZih5PT09XCJjb21wYWN0XCIpcmV0dXJuIEh0KGkudG9CeXRlcyh0aGlzLnIpLGkudG9CeXRlcyh0aGlzLnMpKTtpZih5PT09XCJkZXJcIilyZXR1cm4gZm4odnQuaGV4RnJvbVNpZyh0aGlzKSk7dGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBmb3JtYXRcIil9dG9ERVJSYXdCeXRlcygpe3JldHVybiB0aGlzLnRvQnl0ZXMoXCJkZXJcIil9dG9ERVJIZXgoKXtyZXR1cm4gY2UodGhpcy50b0J5dGVzKFwiZGVyXCIpKX10b0NvbXBhY3RSYXdCeXRlcygpe3JldHVybiB0aGlzLnRvQnl0ZXMoXCJjb21wYWN0XCIpfXRvQ29tcGFjdEhleCgpe3JldHVybiBjZSh0aGlzLnRvQnl0ZXMoXCJjb21wYWN0XCIpKX19Y29uc3QgZz1UbyhpLG4uYWxsb3dlZFByaXZhdGVLZXlMZW5ndGhzLG4ud3JhcFByaXZhdGVLZXkpLG09e2lzVmFsaWRQcml2YXRlS2V5KHApe3RyeXtyZXR1cm4gZyhwKSwhMH1jYXRjaHtyZXR1cm4hMX19LG5vcm1Qcml2YXRlS2V5VG9TY2FsYXI6ZyxyYW5kb21Qcml2YXRlS2V5OigpPT57Y29uc3QgcD1mO3JldHVybiB1YyhyKEVvKHApKSxwKX0scHJlY29tcHV0ZShwPTgseT10LkJBU0Upe3JldHVybiB5LnByZWNvbXB1dGUocCwhMSl9fTtmdW5jdGlvbiBiKHAseT0hMCl7cmV0dXJuIHQuZnJvbVByaXZhdGVLZXkocCkudG9CeXRlcyh5KX1mdW5jdGlvbiB2KHApe2lmKHR5cGVvZiBwPT1cImJpZ2ludFwiKXJldHVybiExO2lmKHAgaW5zdGFuY2VvZiB0KXJldHVybiEwO2NvbnN0IHg9cnQoXCJrZXlcIixwKS5sZW5ndGgsQj1zLkJZVEVTLEU9QisxLEk9MipCKzE7aWYoIShuLmFsbG93ZWRQcml2YXRlS2V5TGVuZ3Roc3x8aS5CWVRFUz09PUUpKXJldHVybiB4PT09RXx8eD09PUl9ZnVuY3Rpb24gTChwLHkseD0hMCl7aWYodihwKT09PSEwKXRocm93IG5ldyBFcnJvcihcImZpcnN0IGFyZyBtdXN0IGJlIHByaXZhdGUga2V5XCIpO2lmKHYoeSk9PT0hMSl0aHJvdyBuZXcgRXJyb3IoXCJzZWNvbmQgYXJnIG11c3QgYmUgcHVibGljIGtleVwiKTtyZXR1cm4gdC5mcm9tSGV4KHkpLm11bHRpcGx5KGcocCkpLnRvQnl0ZXMoeCl9Y29uc3QgVj1lLmJpdHMyaW50fHxmdW5jdGlvbihwKXtpZihwLmxlbmd0aD44MTkyKXRocm93IG5ldyBFcnJvcihcImlucHV0IGlzIHRvbyBsYXJnZVwiKTtjb25zdCB5PUNlKHApLHg9cC5sZW5ndGgqOC1jO3JldHVybiB4PjA/eT4+QmlnSW50KHgpOnl9LEM9ZS5iaXRzMmludF9tb2ROfHxmdW5jdGlvbihwKXtyZXR1cm4gaS5jcmVhdGUoVihwKSl9LEg9amUoYyk7ZnVuY3Rpb24gXyhwKXtyZXR1cm4gTm4oXCJudW0gPCAyXlwiK2MscCxoZSxIKSxpLnRvQnl0ZXMocCl9ZnVuY3Rpb24gayhwLHkseD1QKXtpZihbXCJyZWNvdmVyZWRcIixcImNhbm9uaWNhbFwiXS5zb21lKHE9PnEgaW4geCkpdGhyb3cgbmV3IEVycm9yKFwic2lnbigpIGxlZ2FjeSBvcHRpb25zIG5vdCBzdXBwb3J0ZWRcIik7Y29uc3R7aGFzaDpCfT1lO2xldHtsb3dTOkUscHJlaGFzaDpJLGV4dHJhRW50cm9weTpTfT14O0U9PW51bGwmJihFPSEwKSxwPXJ0KFwibXNnSGFzaFwiLHApLF9vKHgpLEkmJihwPXJ0KFwicHJlaGFzaGVkIG1zZ0hhc2hcIixCKHApKSk7Y29uc3QgTz1DKHApLEE9Zyh5KSxUPVtfKEEpLF8oTyldO2lmKFMhPW51bGwmJlMhPT0hMSl7Y29uc3QgcT1TPT09ITA/cihzLkJZVEVTKTpTO1QucHVzaChydChcImV4dHJhRW50cm9weVwiLHEpKX1jb25zdCBVPUh0KC4uLlQpLCQ9TztmdW5jdGlvbiBEKHEpe2NvbnN0IGo9VihxKTtpZighaS5pc1ZhbGlkTm90MChqKSlyZXR1cm47Y29uc3QgSz1pLmludihqKSxldD10LkJBU0UubXVsdGlwbHkoaikudG9BZmZpbmUoKSxaPWkuY3JlYXRlKGV0LngpO2lmKFo9PT1oZSlyZXR1cm47Y29uc3Qgej1pLmNyZWF0ZShLKmkuY3JlYXRlKCQrWipBKSk7aWYoej09PWhlKXJldHVybjtsZXQgRnQ9KGV0Lng9PT1aPzA6Mil8TnVtYmVyKGV0LnkmcGUpLHl0PXo7cmV0dXJuIEUmJnUoeikmJih5dD1hKHopLEZ0Xj0xKSxuZXcgaChaLHl0LEZ0KX1yZXR1cm57c2VlZDpVLGsyc2lnOkR9fWNvbnN0IFA9e2xvd1M6ZS5sb3dTLHByZWhhc2g6ITF9LFI9e2xvd1M6ZS5sb3dTLHByZWhhc2g6ITF9O2Z1bmN0aW9uIGQocCx5LHg9UCl7Y29uc3R7c2VlZDpCLGsyc2lnOkV9PWsocCx5LHgpO3JldHVybiBlYyhlLmhhc2gub3V0cHV0TGVuLGkuQllURVMsbykoQixFKX10LkJBU0UucHJlY29tcHV0ZSg4KTtmdW5jdGlvbiB3KHAseSx4LEI9Uil7Y29uc3QgRT1wO3k9cnQoXCJtc2dIYXNoXCIseSkseD1ydChcInB1YmxpY0tleVwiLHgpLF9vKEIpO2NvbnN0e2xvd1M6SSxwcmVoYXNoOlMsZm9ybWF0Ok99PUI7aWYoXCJzdHJpY3RcImluIEIpdGhyb3cgbmV3IEVycm9yKFwib3B0aW9ucy5zdHJpY3Qgd2FzIHJlbmFtZWQgdG8gbG93U1wiKTtpZihPIT09dm9pZCAwJiYhW1wiY29tcGFjdFwiLFwiZGVyXCIsXCJqc1wiXS5pbmNsdWRlcyhPKSl0aHJvdyBuZXcgRXJyb3IoJ2Zvcm1hdCBtdXN0IGJlIFwiY29tcGFjdFwiLCBcImRlclwiIG9yIFwianNcIicpO2NvbnN0IEE9dHlwZW9mIEU9PVwic3RyaW5nXCJ8fG5uKEUpLFQ9IUEmJiFPJiZ0eXBlb2YgRT09XCJvYmplY3RcIiYmRSE9PW51bGwmJnR5cGVvZiBFLnI9PVwiYmlnaW50XCImJnR5cGVvZiBFLnM9PVwiYmlnaW50XCI7aWYoIUEmJiFUKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgc2lnbmF0dXJlLCBleHBlY3RlZCBVaW50OEFycmF5LCBoZXggc3RyaW5nIG9yIFNpZ25hdHVyZSBpbnN0YW5jZVwiKTtsZXQgVSwkO3RyeXtpZihUKWlmKE89PT12b2lkIDB8fE89PT1cImpzXCIpVT1uZXcgaChFLnIsRS5zKTtlbHNlIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgZm9ybWF0XCIpO2lmKEEpe3RyeXtPIT09XCJjb21wYWN0XCImJihVPWguZnJvbURFUihFKSl9Y2F0Y2goeXQpe2lmKCEoeXQgaW5zdGFuY2VvZiB2dC5FcnIpKXRocm93IHl0fSFVJiZPIT09XCJkZXJcIiYmKFU9aC5mcm9tQ29tcGFjdChFKSl9JD10LmZyb21IZXgoeCl9Y2F0Y2h7cmV0dXJuITF9aWYoIVV8fEkmJlUuaGFzSGlnaFMoKSlyZXR1cm4hMTtTJiYoeT1lLmhhc2goeSkpO2NvbnN0e3I6RCxzOnF9PVUsaj1DKHkpLEs9aS5pbnYocSksZXQ9aS5jcmVhdGUoaipLKSxaPWkuY3JlYXRlKEQqSyksej10LkJBU0UubXVsdGlwbHlVbnNhZmUoZXQpLmFkZCgkLm11bHRpcGx5VW5zYWZlKFopKTtyZXR1cm4gei5pczAoKT8hMTppLmNyZWF0ZSh6LngpPT09RH1yZXR1cm4gT2JqZWN0LmZyZWV6ZSh7Z2V0UHVibGljS2V5OmIsZ2V0U2hhcmVkU2VjcmV0Okwsc2lnbjpkLHZlcmlmeTp3LHV0aWxzOm0sUG9pbnQ6dCxTaWduYXR1cmU6aH0pfWZ1bmN0aW9uIFJjKHQpe2NvbnN0IGU9e2E6dC5hLGI6dC5iLHA6dC5GcC5PUkRFUixuOnQubixoOnQuaCxHeDp0Lkd4LEd5OnQuR3l9LG49dC5GcCxyPVl0KGUubix0Lm5CaXRMZW5ndGgpLG89e0ZwOm4sRm46cixhbGxvd2VkUHJpdmF0ZUtleUxlbmd0aHM6dC5hbGxvd2VkUHJpdmF0ZUtleUxlbmd0aHMsYWxsb3dJbmZpbml0eVBvaW50OnQuYWxsb3dJbmZpbml0eVBvaW50LGVuZG86dC5lbmRvLHdyYXBQcml2YXRlS2V5OnQud3JhcFByaXZhdGVLZXksaXNUb3JzaW9uRnJlZTp0LmlzVG9yc2lvbkZyZWUsY2xlYXJDb2ZhY3Rvcjp0LmNsZWFyQ29mYWN0b3IsZnJvbUJ5dGVzOnQuZnJvbUJ5dGVzLHRvQnl0ZXM6dC50b0J5dGVzfTtyZXR1cm57Q1VSVkU6ZSxjdXJ2ZU9wdHM6b319ZnVuY3Rpb24gJGModCl7Y29uc3R7Q1VSVkU6ZSxjdXJ2ZU9wdHM6bn09UmModCkscj17aGFzaDp0Lmhhc2gsaG1hYzp0LmhtYWMscmFuZG9tQnl0ZXM6dC5yYW5kb21CeXRlcyxsb3dTOnQubG93UyxiaXRzMmludDp0LmJpdHMyaW50LGJpdHMyaW50X21vZE46dC5iaXRzMmludF9tb2ROfTtyZXR1cm57Q1VSVkU6ZSxjdXJ2ZU9wdHM6bixlY2RzYU9wdHM6cn19ZnVuY3Rpb24gQ2ModCxlKXtyZXR1cm4gT2JqZWN0LmFzc2lnbih7fSxlLHtQcm9qZWN0aXZlUG9pbnQ6ZS5Qb2ludCxDVVJWRTp0fSl9ZnVuY3Rpb24gTGModCl7Y29uc3R7Q1VSVkU6ZSxjdXJ2ZU9wdHM6bixlY2RzYU9wdHM6cn09JGModCksbz1fYyhlLG4pLHM9VGMobyxyLG4pO3JldHVybiBDYyh0LHMpfWZ1bmN0aW9uIFJuKHQsZSl7Y29uc3Qgbj1yPT5MYyh7Li4udCxoYXNoOnJ9KTtyZXR1cm57Li4ubihlKSxjcmVhdGU6bn19Y29uc3QgJG89e3A6QmlnSW50KFwiMHhmZmZmZmZmZjAwMDAwMDAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmXCIpLG46QmlnSW50KFwiMHhmZmZmZmZmZjAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmJjZTZmYWFkYTcxNzllODRmM2I5Y2FjMmZjNjMyNTUxXCIpLGg6QmlnSW50KDEpLGE6QmlnSW50KFwiMHhmZmZmZmZmZjAwMDAwMDAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjXCIpLGI6QmlnSW50KFwiMHg1YWM2MzVkOGFhM2E5M2U3YjNlYmJkNTU3Njk4ODZiYzY1MWQwNmIwY2M1M2IwZjYzYmNlM2MzZTI3ZDI2MDRiXCIpLEd4OkJpZ0ludChcIjB4NmIxN2QxZjJlMTJjNDI0N2Y4YmNlNmU1NjNhNDQwZjI3NzAzN2Q4MTJkZWIzM2EwZjRhMTM5NDVkODk4YzI5NlwiKSxHeTpCaWdJbnQoXCIweDRmZTM0MmUyZmUxYTdmOWI4ZWU3ZWI0YTdjMGY5ZTE2MmJjZTMzNTc2YjMxNWVjZWNiYjY0MDY4MzdiZjUxZjVcIil9LENvPXtwOkJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZWZmZmZmZmZmMDAwMDAwMDAwMDAwMDAwMGZmZmZmZmZmXCIpLG46QmlnSW50KFwiMHhmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjNzYzNGQ4MWY0MzcyZGRmNTgxYTBkYjI0OGIwYTc3YWVjZWMxOTZhY2NjNTI5NzNcIiksaDpCaWdJbnQoMSksYTpCaWdJbnQoXCIweGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVmZmZmZmZmZjAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmY1wiKSxiOkJpZ0ludChcIjB4YjMzMTJmYTdlMjNlZTdlNDk4OGUwNTZiZTNmODJkMTkxODFkOWM2ZWZlODE0MTEyMDMxNDA4OGY1MDEzODc1YWM2NTYzOThkOGEyZWQxOWQyYTg1YzhlZGQzZWMyYWVmXCIpLEd4OkJpZ0ludChcIjB4YWE4N2NhMjJiZThiMDUzNzhlYjFjNzFlZjMyMGFkNzQ2ZTFkM2I2MjhiYTc5Yjk4NTlmNzQxZTA4MjU0MmEzODU1MDJmMjVkYmY1NTI5NmMzYTU0NWUzODcyNzYwYWI3XCIpLEd5OkJpZ0ludChcIjB4MzYxN2RlNGE5NjI2MmM2ZjVkOWU5OGJmOTI5MmRjMjlmOGY0MWRiZDI4OWExNDdjZTlkYTMxMTNiNWYwYjhjMDBhNjBiMWNlMWQ3ZTgxOWQ3YTQzMWQ3YzkwZWEwZTVmXCIpfSxMbz17cDpCaWdJbnQoXCIweDFmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmXCIpLG46QmlnSW50KFwiMHgwMWZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYTUxODY4NzgzYmYyZjk2NmI3ZmNjMDE0OGY3MDlhNWQwM2JiNWM5Yjg4OTljNDdhZWJiNmZiNzFlOTEzODY0MDlcIiksaDpCaWdJbnQoMSksYTpCaWdJbnQoXCIweDFmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjXCIpLGI6QmlnSW50KFwiMHgwMDUxOTUzZWI5NjE4ZTFjOWExZjkyOWEyMWEwYjY4NTQwZWVhMmRhNzI1Yjk5YjMxNWYzYjhiNDg5OTE4ZWYxMDllMTU2MTkzOTUxZWM3ZTkzN2IxNjUyYzBiZDNiYjFiZjA3MzU3M2RmODgzZDJjMzRmMWVmNDUxZmQ0NmI1MDNmMDBcIiksR3g6QmlnSW50KFwiMHgwMGM2ODU4ZTA2YjcwNDA0ZTljZDllM2VjYjY2MjM5NWI0NDI5YzY0ODEzOTA1M2ZiNTIxZjgyOGFmNjA2YjRkM2RiYWExNGI1ZTc3ZWZlNzU5MjhmZTFkYzEyN2EyZmZhOGRlMzM0OGIzYzE4NTZhNDI5YmY5N2U3ZTMxYzJlNWJkNjZcIiksR3k6QmlnSW50KFwiMHgwMTE4MzkyOTZhNzg5YTNiYzAwNDVjOGE1ZmI0MmM3ZDFiZDk5OGY1NDQ0OTU3OWI0NDY4MTdhZmJkMTcyNzNlNjYyYzk3ZWU3Mjk5NWVmNDI2NDBjNTUwYjkwMTNmYWQwNzYxMzUzYzcwODZhMjcyYzI0MDg4YmU5NDc2OWZkMTY2NTBcIil9LGpjPVl0KCRvLnApLGtjPVl0KENvLnApLFBjPVl0KExvLnApLEhjPVJuKHsuLi4kbyxGcDpqYyxsb3dTOiExfSxBZSk7Um4oey4uLkNvLEZwOmtjLGxvd1M6ITF9LFlpKSxSbih7Li4uTG8sRnA6UGMsbG93UzohMSxhbGxvd2VkUHJpdmF0ZUtleUxlbmd0aHM6WzEzMCwxMzEsMTMyXX0sV2kpO2NvbnN0IERjPUhjLCRuPVwiYmFzZTEwXCIsdHQ9XCJiYXNlMTZcIixRdD1cImJhc2U2NHBhZFwiLERlPVwiYmFzZTY0dXJsXCIsdGU9XCJ1dGY4XCIsQ249MCxlZT0xLGdlPTIsTWM9MCxqbz0xLGJlPTEyLExuPTMyO2Z1bmN0aW9uIFZjKCl7Y29uc3QgdD1Ubi51dGlscy5yYW5kb21Qcml2YXRlS2V5KCksZT1Ubi5nZXRQdWJsaWNLZXkodCk7cmV0dXJue3ByaXZhdGVLZXk6c3QodCx0dCkscHVibGljS2V5OnN0KGUsdHQpfX1mdW5jdGlvbiBxYygpe2NvbnN0IHQ9WnQoTG4pO3JldHVybiBzdCh0LHR0KX1mdW5jdGlvbiBLYyh0LGUpe2NvbnN0IG49VG4uZ2V0U2hhcmVkU2VjcmV0KGZ0KHQsdHQpLGZ0KGUsdHQpKSxyPUpmKFRlLG4sdm9pZCAwLHZvaWQgMCxMbik7cmV0dXJuIHN0KHIsdHQpfWZ1bmN0aW9uIEZjKHQpe2NvbnN0IGU9VGUoZnQodCx0dCkpO3JldHVybiBzdChlLHR0KX1mdW5jdGlvbiB6Yyh0KXtjb25zdCBlPVRlKGZ0KHQsdGUpKTtyZXR1cm4gc3QoZSx0dCl9ZnVuY3Rpb24gam4odCl7cmV0dXJuIGZ0KGAke3R9YCwkbil9ZnVuY3Rpb24gVnQodCl7cmV0dXJuIE51bWJlcihzdCh0LCRuKSl9ZnVuY3Rpb24ga28odCl7cmV0dXJuIHQucmVwbGFjZSgvXFwrL2csXCItXCIpLnJlcGxhY2UoL1xcLy9nLFwiX1wiKS5yZXBsYWNlKC89L2csXCJcIil9ZnVuY3Rpb24gUG8odCl7Y29uc3QgZT10LnJlcGxhY2UoLy0vZyxcIitcIikucmVwbGFjZSgvXy9nLFwiL1wiKSxuPSg0LWUubGVuZ3RoJTQpJTQ7cmV0dXJuIGUrXCI9XCIucmVwZWF0KG4pfWZ1bmN0aW9uIEdjKHQpe2NvbnN0IGU9am4odHlwZW9mIHQudHlwZTxcInVcIj90LnR5cGU6Q24pO2lmKFZ0KGUpPT09ZWUmJnR5cGVvZiB0LnNlbmRlclB1YmxpY0tleT5cInVcIil0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHNlbmRlciBwdWJsaWMga2V5IGZvciB0eXBlIDEgZW52ZWxvcGVcIik7Y29uc3Qgbj10eXBlb2YgdC5zZW5kZXJQdWJsaWNLZXk8XCJ1XCI/ZnQodC5zZW5kZXJQdWJsaWNLZXksdHQpOnZvaWQgMCxyPXR5cGVvZiB0Lml2PFwidVwiP2Z0KHQuaXYsdHQpOlp0KGJlKSxvPWZ0KHQuc3ltS2V5LHR0KSxzPWNvKG8scikuZW5jcnlwdChmdCh0Lm1lc3NhZ2UsdGUpKSxpPWtuKHt0eXBlOmUsc2VhbGVkOnMsaXY6cixzZW5kZXJQdWJsaWNLZXk6bn0pO3JldHVybiB0LmVuY29kaW5nPT09RGU/a28oaSk6aX1mdW5jdGlvbiBaYyh0KXtjb25zdCBlPWZ0KHQuc3ltS2V5LHR0KSx7c2VhbGVkOm4saXY6cn09TWUoe2VuY29kZWQ6dC5lbmNvZGVkLGVuY29kaW5nOnQuZW5jb2Rpbmd9KSxvPWNvKGUscikuZGVjcnlwdChuKTtpZihvPT09bnVsbCl0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZGVjcnlwdFwiKTtyZXR1cm4gc3Qobyx0ZSl9ZnVuY3Rpb24gV2ModCxlKXtjb25zdCBuPWpuKGdlKSxyPVp0KGJlKSxvPWZ0KHQsdGUpLHM9a24oe3R5cGU6bixzZWFsZWQ6byxpdjpyfSk7cmV0dXJuIGU9PT1EZT9rbyhzKTpzfWZ1bmN0aW9uIFljKHQsZSl7Y29uc3R7c2VhbGVkOm59PU1lKHtlbmNvZGVkOnQsZW5jb2Rpbmc6ZX0pO3JldHVybiBzdChuLHRlKX1mdW5jdGlvbiBrbih0KXtpZihWdCh0LnR5cGUpPT09Z2UpcmV0dXJuIHN0KG9lKFt0LnR5cGUsdC5zZWFsZWRdKSxRdCk7aWYoVnQodC50eXBlKT09PWVlKXtpZih0eXBlb2YgdC5zZW5kZXJQdWJsaWNLZXk+XCJ1XCIpdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBzZW5kZXIgcHVibGljIGtleSBmb3IgdHlwZSAxIGVudmVsb3BlXCIpO3JldHVybiBzdChvZShbdC50eXBlLHQuc2VuZGVyUHVibGljS2V5LHQuaXYsdC5zZWFsZWRdKSxRdCl9cmV0dXJuIHN0KG9lKFt0LnR5cGUsdC5pdix0LnNlYWxlZF0pLFF0KX1mdW5jdGlvbiBNZSh0KXtjb25zdCBlPSh0LmVuY29kaW5nfHxRdCk9PT1EZT9Qbyh0LmVuY29kZWQpOnQuZW5jb2RlZCxuPWZ0KGUsUXQpLHI9bi5zbGljZShNYyxqbyksbz1qbztpZihWdChyKT09PWVlKXtjb25zdCBjPW8rTG4sdT1jK2JlLGE9bi5zbGljZShvLGMpLGw9bi5zbGljZShjLHUpLGg9bi5zbGljZSh1KTtyZXR1cm57dHlwZTpyLHNlYWxlZDpoLGl2Omwsc2VuZGVyUHVibGljS2V5OmF9fWlmKFZ0KHIpPT09Z2Upe2NvbnN0IGM9bi5zbGljZShvKSx1PVp0KGJlKTtyZXR1cm57dHlwZTpyLHNlYWxlZDpjLGl2OnV9fWNvbnN0IHM9bytiZSxpPW4uc2xpY2UobyxzKSxmPW4uc2xpY2Uocyk7cmV0dXJue3R5cGU6cixzZWFsZWQ6ZixpdjppfX1mdW5jdGlvbiBYYyh0LGUpe2NvbnN0IG49TWUoe2VuY29kZWQ6dCxlbmNvZGluZzplPy5lbmNvZGluZ30pO3JldHVybiBIbyh7dHlwZTpWdChuLnR5cGUpLHNlbmRlclB1YmxpY0tleTp0eXBlb2Ygbi5zZW5kZXJQdWJsaWNLZXk8XCJ1XCI/c3Qobi5zZW5kZXJQdWJsaWNLZXksdHQpOnZvaWQgMCxyZWNlaXZlclB1YmxpY0tleTplPy5yZWNlaXZlclB1YmxpY0tleX0pfWZ1bmN0aW9uIEhvKHQpe2NvbnN0IGU9dD8udHlwZXx8Q247aWYoZT09PWVlKXtpZih0eXBlb2YgdD8uc2VuZGVyUHVibGljS2V5PlwidVwiKXRocm93IG5ldyBFcnJvcihcIm1pc3Npbmcgc2VuZGVyIHB1YmxpYyBrZXlcIik7aWYodHlwZW9mIHQ/LnJlY2VpdmVyUHVibGljS2V5PlwidVwiKXRocm93IG5ldyBFcnJvcihcIm1pc3NpbmcgcmVjZWl2ZXIgcHVibGljIGtleVwiKX1yZXR1cm57dHlwZTplLHNlbmRlclB1YmxpY0tleTp0Py5zZW5kZXJQdWJsaWNLZXkscmVjZWl2ZXJQdWJsaWNLZXk6dD8ucmVjZWl2ZXJQdWJsaWNLZXl9fWZ1bmN0aW9uIEpjKHQpe3JldHVybiB0LnR5cGU9PT1lZSYmdHlwZW9mIHQuc2VuZGVyUHVibGljS2V5PT1cInN0cmluZ1wiJiZ0eXBlb2YgdC5yZWNlaXZlclB1YmxpY0tleT09XCJzdHJpbmdcIn1mdW5jdGlvbiBRYyh0KXtyZXR1cm4gdC50eXBlPT09Z2V9ZnVuY3Rpb24gRG8odCl7Y29uc3QgZT1CdWZmZXIuZnJvbSh0LngsXCJiYXNlNjRcIiksbj1CdWZmZXIuZnJvbSh0LnksXCJiYXNlNjRcIik7cmV0dXJuIG9lKFtuZXcgVWludDhBcnJheShbNF0pLGUsbl0pfWZ1bmN0aW9uIHRhKHQsZSl7Y29uc3RbbixyLG9dPXQuc3BsaXQoXCIuXCIpLHM9QnVmZmVyLmZyb20oUG8obyksXCJiYXNlNjRcIik7aWYocy5sZW5ndGghPT02NCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHNpZ25hdHVyZSBsZW5ndGhcIik7Y29uc3QgaT1zLnNsaWNlKDAsMzIpLGY9cy5zbGljZSgzMiw2NCksYz1gJHtufS4ke3J9YCx1PVRlKGMpLGE9RG8oZSk7aWYoIURjLnZlcmlmeShvZShbaSxmXSksdSxhKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHNpZ25hdHVyZVwiKTtyZXR1cm4gQXModCkucGF5bG9hZH1jb25zdCBNbz1cImlyblwiO2Z1bmN0aW9uIGVhKHQpe3JldHVybiB0Py5yZWxheXx8e3Byb3RvY29sOk1vfX1mdW5jdGlvbiBuYSh0KXtjb25zdCBlPVNzW3RdO2lmKHR5cGVvZiBlPlwidVwiKXRocm93IG5ldyBFcnJvcihgUmVsYXkgUHJvdG9jb2wgbm90IHN1cHBvcnRlZDogJHt0fWApO3JldHVybiBlfWZ1bmN0aW9uIFZvKHQsZT1cIi1cIil7Y29uc3Qgbj17fSxyPVwicmVsYXlcIitlO3JldHVybiBPYmplY3Qua2V5cyh0KS5mb3JFYWNoKG89PntpZihvLnN0YXJ0c1dpdGgocikpe2NvbnN0IHM9by5yZXBsYWNlKHIsXCJcIiksaT10W29dO25bc109aX19KSxufWZ1bmN0aW9uIHJhKHQpe2lmKCF0LmluY2x1ZGVzKFwid2M6XCIpKXtjb25zdCB1PVFlKHQpO3UhPW51bGwmJnUuaW5jbHVkZXMoXCJ3YzpcIikmJih0PXUpfXQ9dC5pbmNsdWRlcyhcIndjOi8vXCIpP3QucmVwbGFjZShcIndjOi8vXCIsXCJcIik6dCx0PXQuaW5jbHVkZXMoXCJ3YzpcIik/dC5yZXBsYWNlKFwid2M6XCIsXCJcIik6dDtjb25zdCBlPXQuaW5kZXhPZihcIjpcIiksbj10LmluZGV4T2YoXCI/XCIpIT09LTE/dC5pbmRleE9mKFwiP1wiKTp2b2lkIDAscj10LnN1YnN0cmluZygwLGUpLG89dC5zdWJzdHJpbmcoZSsxLG4pLnNwbGl0KFwiQFwiKSxzPXR5cGVvZiBuPFwidVwiP3Quc3Vic3RyaW5nKG4pOlwiXCIsaT1uZXcgVVJMU2VhcmNoUGFyYW1zKHMpLGY9e307aS5mb3JFYWNoKCh1LGEpPT57ZlthXT11fSk7Y29uc3QgYz10eXBlb2YgZi5tZXRob2RzPT1cInN0cmluZ1wiP2YubWV0aG9kcy5zcGxpdChcIixcIik6dm9pZCAwO3JldHVybntwcm90b2NvbDpyLHRvcGljOnFvKG9bMF0pLHZlcnNpb246cGFyc2VJbnQob1sxXSwxMCksc3ltS2V5OmYuc3ltS2V5LHJlbGF5OlZvKGYpLG1ldGhvZHM6YyxleHBpcnlUaW1lc3RhbXA6Zi5leHBpcnlUaW1lc3RhbXA/cGFyc2VJbnQoZi5leHBpcnlUaW1lc3RhbXAsMTApOnZvaWQgMH19ZnVuY3Rpb24gcW8odCl7cmV0dXJuIHQuc3RhcnRzV2l0aChcIi8vXCIpP3Quc3Vic3RyaW5nKDIpOnR9ZnVuY3Rpb24gS28odCxlPVwiLVwiKXtjb25zdCBuPVwicmVsYXlcIixyPXt9O3JldHVybiBPYmplY3Qua2V5cyh0KS5mb3JFYWNoKG89Pntjb25zdCBzPW8saT1uK2Urczt0W3NdJiYocltpXT10W3NdKX0pLHJ9ZnVuY3Rpb24gb2EodCl7Y29uc3QgZT1uZXcgVVJMU2VhcmNoUGFyYW1zLG49S28odC5yZWxheSk7T2JqZWN0LmtleXMobikuc29ydCgpLmZvckVhY2gobz0+e2Uuc2V0KG8sbltvXSl9KSxlLnNldChcInN5bUtleVwiLHQuc3ltS2V5KSx0LmV4cGlyeVRpbWVzdGFtcCYmZS5zZXQoXCJleHBpcnlUaW1lc3RhbXBcIix0LmV4cGlyeVRpbWVzdGFtcC50b1N0cmluZygpKSx0Lm1ldGhvZHMmJmUuc2V0KFwibWV0aG9kc1wiLHQubWV0aG9kcy5qb2luKFwiLFwiKSk7Y29uc3Qgcj1lLnRvU3RyaW5nKCk7cmV0dXJuYCR7dC5wcm90b2NvbH06JHt0LnRvcGljfUAke3QudmVyc2lvbn0/JHtyfWB9ZnVuY3Rpb24gc2EodCxlLG4pe3JldHVybmAke3R9P3djX2V2PSR7bn0mdG9waWM9JHtlfWB9dmFyIGlhPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxmYT1PYmplY3QuZGVmaW5lUHJvcGVydGllcyxjYT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyxGbz1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLGFhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksdWE9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSx6bz0odCxlLG4pPT5lIGluIHQ/aWEodCxlLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTpufSk6dFtlXT1uLGxhPSh0LGUpPT57Zm9yKHZhciBuIGluIGV8fChlPXt9KSlhYS5jYWxsKGUsbikmJnpvKHQsbixlW25dKTtpZihGbylmb3IodmFyIG4gb2YgRm8oZSkpdWEuY2FsbChlLG4pJiZ6byh0LG4sZVtuXSk7cmV0dXJuIHR9LGRhPSh0LGUpPT5mYSh0LGNhKGUpKTtmdW5jdGlvbiBxdCh0KXtjb25zdCBlPVtdO3JldHVybiB0LmZvckVhY2gobj0+e2NvbnN0W3Isb109bi5zcGxpdChcIjpcIik7ZS5wdXNoKGAke3J9OiR7b31gKX0pLGV9ZnVuY3Rpb24gR28odCl7Y29uc3QgZT1bXTtyZXR1cm4gT2JqZWN0LnZhbHVlcyh0KS5mb3JFYWNoKG49PntlLnB1c2goLi4ucXQobi5hY2NvdW50cykpfSksZX1mdW5jdGlvbiBabyh0LGUpe2NvbnN0IG49W107cmV0dXJuIE9iamVjdC52YWx1ZXModCkuZm9yRWFjaChyPT57cXQoci5hY2NvdW50cykuaW5jbHVkZXMoZSkmJm4ucHVzaCguLi5yLm1ldGhvZHMpfSksbn1mdW5jdGlvbiBXbyh0LGUpe2NvbnN0IG49W107cmV0dXJuIE9iamVjdC52YWx1ZXModCkuZm9yRWFjaChyPT57cXQoci5hY2NvdW50cykuaW5jbHVkZXMoZSkmJm4ucHVzaCguLi5yLmV2ZW50cyl9KSxufWZ1bmN0aW9uIGhhKHQsZSl7Y29uc3Qgbj1pcyh0LGUpO2lmKG4pdGhyb3cgbmV3IEVycm9yKG4ubWVzc2FnZSk7Y29uc3Qgcj17fTtmb3IoY29uc3RbbyxzXW9mIE9iamVjdC5lbnRyaWVzKHQpKXJbb109e21ldGhvZHM6cy5tZXRob2RzLGV2ZW50czpzLmV2ZW50cyxjaGFpbnM6cy5hY2NvdW50cy5tYXAoaT0+YCR7aS5zcGxpdChcIjpcIilbMF19OiR7aS5zcGxpdChcIjpcIilbMV19YCl9O3JldHVybiByfWZ1bmN0aW9uIHBhKHQpe2NvbnN0e3Byb3Bvc2FsOntyZXF1aXJlZE5hbWVzcGFjZXM6ZSxvcHRpb25hbE5hbWVzcGFjZXM6bj17fX0sc3VwcG9ydGVkTmFtZXNwYWNlczpyfT10LG89eWUoZSkscz15ZShuKSxpPXt9O09iamVjdC5rZXlzKHIpLmZvckVhY2godT0+e2NvbnN0IGE9clt1XS5jaGFpbnMsbD1yW3VdLm1ldGhvZHMsaD1yW3VdLmV2ZW50cyxnPXJbdV0uYWNjb3VudHM7YS5mb3JFYWNoKG09PntpZighZy5zb21lKGI9PmIuaW5jbHVkZXMobSkpKXRocm93IG5ldyBFcnJvcihgTm8gYWNjb3VudHMgcHJvdmlkZWQgZm9yIGNoYWluICR7bX0gaW4gbmFtZXNwYWNlICR7dX1gKX0pLGlbdV09e2NoYWluczphLG1ldGhvZHM6bCxldmVudHM6aCxhY2NvdW50czpnfX0pO2NvbnN0IGY9Y3MoZSxpLFwiYXBwcm92ZSgpXCIpO2lmKGYpdGhyb3cgbmV3IEVycm9yKGYubWVzc2FnZSk7Y29uc3QgYz17fTtyZXR1cm4hT2JqZWN0LmtleXMoZSkubGVuZ3RoJiYhT2JqZWN0LmtleXMobikubGVuZ3RoP2k6KE9iamVjdC5rZXlzKG8pLmZvckVhY2godT0+e2NvbnN0IGE9clt1XS5jaGFpbnMuZmlsdGVyKG09Pnt2YXIgYix2O3JldHVybih2PShiPW9bdV0pPT1udWxsP3ZvaWQgMDpiLmNoYWlucyk9PW51bGw/dm9pZCAwOnYuaW5jbHVkZXMobSl9KSxsPXJbdV0ubWV0aG9kcy5maWx0ZXIobT0+e3ZhciBiLHY7cmV0dXJuKHY9KGI9b1t1XSk9PW51bGw/dm9pZCAwOmIubWV0aG9kcyk9PW51bGw/dm9pZCAwOnYuaW5jbHVkZXMobSl9KSxoPXJbdV0uZXZlbnRzLmZpbHRlcihtPT57dmFyIGIsdjtyZXR1cm4odj0oYj1vW3VdKT09bnVsbD92b2lkIDA6Yi5ldmVudHMpPT1udWxsP3ZvaWQgMDp2LmluY2x1ZGVzKG0pfSksZz1hLm1hcChtPT5yW3VdLmFjY291bnRzLmZpbHRlcihiPT5iLmluY2x1ZGVzKGAke219OmApKSkuZmxhdCgpO2NbdV09e2NoYWluczphLG1ldGhvZHM6bCxldmVudHM6aCxhY2NvdW50czpnfX0pLE9iamVjdC5rZXlzKHMpLmZvckVhY2godT0+e3ZhciBhLGwsaCxnLG0sYjtpZighclt1XSlyZXR1cm47Y29uc3Qgdj0obD0oYT1zW3VdKT09bnVsbD92b2lkIDA6YS5jaGFpbnMpPT1udWxsP3ZvaWQgMDpsLmZpbHRlcihIPT5yW3VdLmNoYWlucy5pbmNsdWRlcyhIKSksTD1yW3VdLm1ldGhvZHMuZmlsdGVyKEg9Pnt2YXIgXyxrO3JldHVybihrPShfPXNbdV0pPT1udWxsP3ZvaWQgMDpfLm1ldGhvZHMpPT1udWxsP3ZvaWQgMDprLmluY2x1ZGVzKEgpfSksVj1yW3VdLmV2ZW50cy5maWx0ZXIoSD0+e3ZhciBfLGs7cmV0dXJuKGs9KF89c1t1XSk9PW51bGw/dm9pZCAwOl8uZXZlbnRzKT09bnVsbD92b2lkIDA6ay5pbmNsdWRlcyhIKX0pLEM9dj8ubWFwKEg9PnJbdV0uYWNjb3VudHMuZmlsdGVyKF89Pl8uaW5jbHVkZXMoYCR7SH06YCkpKS5mbGF0KCk7Y1t1XT17Y2hhaW5zOmN0KChoPWNbdV0pPT1udWxsP3ZvaWQgMDpoLmNoYWlucyx2KSxtZXRob2RzOmN0KChnPWNbdV0pPT1udWxsP3ZvaWQgMDpnLm1ldGhvZHMsTCksZXZlbnRzOmN0KChtPWNbdV0pPT1udWxsP3ZvaWQgMDptLmV2ZW50cyxWKSxhY2NvdW50czpjdCgoYj1jW3VdKT09bnVsbD92b2lkIDA6Yi5hY2NvdW50cyxDKX19KSxjKX1mdW5jdGlvbiBQbih0KXtyZXR1cm4gdC5pbmNsdWRlcyhcIjpcIil9ZnVuY3Rpb24gWW8odCl7cmV0dXJuIFBuKHQpP3Quc3BsaXQoXCI6XCIpWzBdOnR9ZnVuY3Rpb24geWUodCl7dmFyIGUsbixyO2NvbnN0IG89e307aWYoIVZlKHQpKXJldHVybiBvO2Zvcihjb25zdFtzLGldb2YgT2JqZWN0LmVudHJpZXModCkpe2NvbnN0IGY9UG4ocyk/W3NdOmkuY2hhaW5zLGM9aS5tZXRob2RzfHxbXSx1PWkuZXZlbnRzfHxbXSxhPVlvKHMpO29bYV09ZGEobGEoe30sb1thXSkse2NoYWluczpjdChmLChlPW9bYV0pPT1udWxsP3ZvaWQgMDplLmNoYWlucyksbWV0aG9kczpjdChjLChuPW9bYV0pPT1udWxsP3ZvaWQgMDpuLm1ldGhvZHMpLGV2ZW50czpjdCh1LChyPW9bYV0pPT1udWxsP3ZvaWQgMDpyLmV2ZW50cyl9KX1yZXR1cm4gb31mdW5jdGlvbiBYbyh0KXtjb25zdCBlPXt9O3JldHVybiB0Py5mb3JFYWNoKG49Pnt2YXIgcjtjb25zdFtvLHNdPW4uc3BsaXQoXCI6XCIpO2Vbb118fChlW29dPXthY2NvdW50czpbXSxjaGFpbnM6W10sZXZlbnRzOltdLG1ldGhvZHM6W119KSxlW29dLmFjY291bnRzLnB1c2gobiksKHI9ZVtvXS5jaGFpbnMpPT1udWxsfHxyLnB1c2goYCR7b306JHtzfWApfSksZX1mdW5jdGlvbiBnYSh0LGUpe2U9ZS5tYXAocj0+ci5yZXBsYWNlKFwiZGlkOnBraDpcIixcIlwiKSk7Y29uc3Qgbj1YbyhlKTtmb3IoY29uc3RbcixvXW9mIE9iamVjdC5lbnRyaWVzKG4pKW8ubWV0aG9kcz9vLm1ldGhvZHM9Y3Qoby5tZXRob2RzLHQpOm8ubWV0aG9kcz10LG8uZXZlbnRzPVtcImNoYWluQ2hhbmdlZFwiLFwiYWNjb3VudHNDaGFuZ2VkXCJdO3JldHVybiBufWZ1bmN0aW9uIGJhKHQsZSl7dmFyIG4scixvLHMsaSxmO2NvbnN0IGM9eWUodCksdT15ZShlKSxhPXt9LGw9T2JqZWN0LmtleXMoYykuY29uY2F0KE9iamVjdC5rZXlzKHUpKTtmb3IoY29uc3QgaCBvZiBsKWFbaF09e2NoYWluczpjdCgobj1jW2hdKT09bnVsbD92b2lkIDA6bi5jaGFpbnMsKHI9dVtoXSk9PW51bGw/dm9pZCAwOnIuY2hhaW5zKSxtZXRob2RzOmN0KChvPWNbaF0pPT1udWxsP3ZvaWQgMDpvLm1ldGhvZHMsKHM9dVtoXSk9PW51bGw/dm9pZCAwOnMubWV0aG9kcyksZXZlbnRzOmN0KChpPWNbaF0pPT1udWxsP3ZvaWQgMDppLmV2ZW50cywoZj11W2hdKT09bnVsbD92b2lkIDA6Zi5ldmVudHMpfTtyZXR1cm4gYX1jb25zdCBKbz17SU5WQUxJRF9NRVRIT0Q6e21lc3NhZ2U6XCJJbnZhbGlkIG1ldGhvZC5cIixjb2RlOjEwMDF9LElOVkFMSURfRVZFTlQ6e21lc3NhZ2U6XCJJbnZhbGlkIGV2ZW50LlwiLGNvZGU6MTAwMn0sSU5WQUxJRF9VUERBVEVfUkVRVUVTVDp7bWVzc2FnZTpcIkludmFsaWQgdXBkYXRlIHJlcXVlc3QuXCIsY29kZToxMDAzfSxJTlZBTElEX0VYVEVORF9SRVFVRVNUOnttZXNzYWdlOlwiSW52YWxpZCBleHRlbmQgcmVxdWVzdC5cIixjb2RlOjEwMDR9LElOVkFMSURfU0VTU0lPTl9TRVRUTEVfUkVRVUVTVDp7bWVzc2FnZTpcIkludmFsaWQgc2Vzc2lvbiBzZXR0bGUgcmVxdWVzdC5cIixjb2RlOjEwMDV9LFVOQVVUSE9SSVpFRF9NRVRIT0Q6e21lc3NhZ2U6XCJVbmF1dGhvcml6ZWQgbWV0aG9kLlwiLGNvZGU6MzAwMX0sVU5BVVRIT1JJWkVEX0VWRU5UOnttZXNzYWdlOlwiVW5hdXRob3JpemVkIGV2ZW50LlwiLGNvZGU6MzAwMn0sVU5BVVRIT1JJWkVEX1VQREFURV9SRVFVRVNUOnttZXNzYWdlOlwiVW5hdXRob3JpemVkIHVwZGF0ZSByZXF1ZXN0LlwiLGNvZGU6MzAwM30sVU5BVVRIT1JJWkVEX0VYVEVORF9SRVFVRVNUOnttZXNzYWdlOlwiVW5hdXRob3JpemVkIGV4dGVuZCByZXF1ZXN0LlwiLGNvZGU6MzAwNH0sVVNFUl9SRUpFQ1RFRDp7bWVzc2FnZTpcIlVzZXIgcmVqZWN0ZWQuXCIsY29kZTo1ZTN9LFVTRVJfUkVKRUNURURfQ0hBSU5TOnttZXNzYWdlOlwiVXNlciByZWplY3RlZCBjaGFpbnMuXCIsY29kZTo1MDAxfSxVU0VSX1JFSkVDVEVEX01FVEhPRFM6e21lc3NhZ2U6XCJVc2VyIHJlamVjdGVkIG1ldGhvZHMuXCIsY29kZTo1MDAyfSxVU0VSX1JFSkVDVEVEX0VWRU5UUzp7bWVzc2FnZTpcIlVzZXIgcmVqZWN0ZWQgZXZlbnRzLlwiLGNvZGU6NTAwM30sVU5TVVBQT1JURURfQ0hBSU5TOnttZXNzYWdlOlwiVW5zdXBwb3J0ZWQgY2hhaW5zLlwiLGNvZGU6NTEwMH0sVU5TVVBQT1JURURfTUVUSE9EUzp7bWVzc2FnZTpcIlVuc3VwcG9ydGVkIG1ldGhvZHMuXCIsY29kZTo1MTAxfSxVTlNVUFBPUlRFRF9FVkVOVFM6e21lc3NhZ2U6XCJVbnN1cHBvcnRlZCBldmVudHMuXCIsY29kZTo1MTAyfSxVTlNVUFBPUlRFRF9BQ0NPVU5UUzp7bWVzc2FnZTpcIlVuc3VwcG9ydGVkIGFjY291bnRzLlwiLGNvZGU6NTEwM30sVU5TVVBQT1JURURfTkFNRVNQQUNFX0tFWTp7bWVzc2FnZTpcIlVuc3VwcG9ydGVkIG5hbWVzcGFjZSBrZXkuXCIsY29kZTo1MTA0fSxVU0VSX0RJU0NPTk5FQ1RFRDp7bWVzc2FnZTpcIlVzZXIgZGlzY29ubmVjdGVkLlwiLGNvZGU6NmUzfSxTRVNTSU9OX1NFVFRMRU1FTlRfRkFJTEVEOnttZXNzYWdlOlwiU2Vzc2lvbiBzZXR0bGVtZW50IGZhaWxlZC5cIixjb2RlOjdlM30sV0NfTUVUSE9EX1VOU1VQUE9SVEVEOnttZXNzYWdlOlwiVW5zdXBwb3J0ZWQgd2NfIG1ldGhvZC5cIixjb2RlOjEwMDAxfX0sUW89e05PVF9JTklUSUFMSVpFRDp7bWVzc2FnZTpcIk5vdCBpbml0aWFsaXplZC5cIixjb2RlOjF9LE5PX01BVENISU5HX0tFWTp7bWVzc2FnZTpcIk5vIG1hdGNoaW5nIGtleS5cIixjb2RlOjJ9LFJFU1RPUkVfV0lMTF9PVkVSUklERTp7bWVzc2FnZTpcIlJlc3RvcmUgd2lsbCBvdmVycmlkZS5cIixjb2RlOjN9LFJFU1VCU0NSSUJFRDp7bWVzc2FnZTpcIlJlc3Vic2NyaWJlZC5cIixjb2RlOjR9LE1JU1NJTkdfT1JfSU5WQUxJRDp7bWVzc2FnZTpcIk1pc3Npbmcgb3IgaW52YWxpZC5cIixjb2RlOjV9LEVYUElSRUQ6e21lc3NhZ2U6XCJFeHBpcmVkLlwiLGNvZGU6Nn0sVU5LTk9XTl9UWVBFOnttZXNzYWdlOlwiVW5rbm93biB0eXBlLlwiLGNvZGU6N30sTUlTTUFUQ0hFRF9UT1BJQzp7bWVzc2FnZTpcIk1pc21hdGNoZWQgdG9waWMuXCIsY29kZTo4fSxOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTOnttZXNzYWdlOlwiTm9uIGNvbmZvcm1pbmcgbmFtZXNwYWNlcy5cIixjb2RlOjl9fTtmdW5jdGlvbiBFdCh0LGUpe2NvbnN0e21lc3NhZ2U6bixjb2RlOnJ9PVFvW3RdO3JldHVybnttZXNzYWdlOmU/YCR7bn0gJHtlfWA6bixjb2RlOnJ9fWZ1bmN0aW9uIEt0KHQsZSl7Y29uc3R7bWVzc2FnZTpuLGNvZGU6cn09Sm9bdF07cmV0dXJue21lc3NhZ2U6ZT9gJHtufSAke2V9YDpuLGNvZGU6cn19ZnVuY3Rpb24gbWUodCxlKXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KT90eXBlb2YgZTxcInVcIiYmdC5sZW5ndGg/dC5ldmVyeShlKTohMDohMX1mdW5jdGlvbiBWZSh0KXtyZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpPT09T2JqZWN0LnByb3RvdHlwZSYmT2JqZWN0LmtleXModCkubGVuZ3RofWZ1bmN0aW9uIGt0KHQpe3JldHVybiB0eXBlb2YgdD5cInVcIn1mdW5jdGlvbiBpdCh0LGUpe3JldHVybiBlJiZrdCh0KT8hMDp0eXBlb2YgdD09XCJzdHJpbmdcIiYmISF0LnRyaW0oKS5sZW5ndGh9ZnVuY3Rpb24gcWUodCxlKXtyZXR1cm4gZSYma3QodCk/ITA6dHlwZW9mIHQ9PVwibnVtYmVyXCImJiFpc05hTih0KX1mdW5jdGlvbiB5YSh0LGUpe2NvbnN0e3JlcXVpcmVkTmFtZXNwYWNlczpufT1lLHI9T2JqZWN0LmtleXModC5uYW1lc3BhY2VzKSxvPU9iamVjdC5rZXlzKG4pO2xldCBzPSEwO3JldHVybiBJdChvLHIpPyhyLmZvckVhY2goaT0+e2NvbnN0e2FjY291bnRzOmYsbWV0aG9kczpjLGV2ZW50czp1fT10Lm5hbWVzcGFjZXNbaV0sYT1xdChmKSxsPW5baV07KCFJdCh2ZShpLGwpLGEpfHwhSXQobC5tZXRob2RzLGMpfHwhSXQobC5ldmVudHMsdSkpJiYocz0hMSl9KSxzKTohMX1mdW5jdGlvbiB3ZSh0KXtyZXR1cm4gaXQodCwhMSkmJnQuaW5jbHVkZXMoXCI6XCIpP3Quc3BsaXQoXCI6XCIpLmxlbmd0aD09PTI6ITF9ZnVuY3Rpb24gdHModCl7aWYoaXQodCwhMSkmJnQuaW5jbHVkZXMoXCI6XCIpKXtjb25zdCBlPXQuc3BsaXQoXCI6XCIpO2lmKGUubGVuZ3RoPT09Myl7Y29uc3Qgbj1lWzBdK1wiOlwiK2VbMV07cmV0dXJuISFlWzJdJiZ3ZShuKX19cmV0dXJuITF9ZnVuY3Rpb24gbWEodCl7ZnVuY3Rpb24gZShuKXt0cnl7cmV0dXJuIHR5cGVvZiBuZXcgVVJMKG4pPFwidVwifWNhdGNoe3JldHVybiExfX10cnl7aWYoaXQodCwhMSkpe2lmKGUodCkpcmV0dXJuITA7Y29uc3Qgbj1RZSh0KTtyZXR1cm4gZShuKX19Y2F0Y2h7fXJldHVybiExfWZ1bmN0aW9uIHdhKHQpe3ZhciBlO3JldHVybihlPXQ/LnByb3Bvc2VyKT09bnVsbD92b2lkIDA6ZS5wdWJsaWNLZXl9ZnVuY3Rpb24geGEodCl7cmV0dXJuIHQ/LnRvcGljfWZ1bmN0aW9uIHZhKHQsZSl7bGV0IG49bnVsbDtyZXR1cm4gaXQodD8ucHVibGljS2V5LCExKXx8KG49RXQoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgJHtlfSBjb250cm9sbGVyIHB1YmxpYyBrZXkgc2hvdWxkIGJlIGEgc3RyaW5nYCkpLG59ZnVuY3Rpb24gSG4odCl7bGV0IGU9ITA7cmV0dXJuIG1lKHQpP3QubGVuZ3RoJiYoZT10LmV2ZXJ5KG49Pml0KG4sITEpKSk6ZT0hMSxlfWZ1bmN0aW9uIGVzKHQsZSxuKXtsZXQgcj1udWxsO3JldHVybiBtZShlKSYmZS5sZW5ndGg/ZS5mb3JFYWNoKG89PntyfHx3ZShvKXx8KHI9S3QoXCJVTlNVUFBPUlRFRF9DSEFJTlNcIixgJHtufSwgY2hhaW4gJHtvfSBzaG91bGQgYmUgYSBzdHJpbmcgYW5kIGNvbmZvcm0gdG8gXCJuYW1lc3BhY2U6Y2hhaW5JZFwiIGZvcm1hdGApKX0pOndlKHQpfHwocj1LdChcIlVOU1VQUE9SVEVEX0NIQUlOU1wiLGAke259LCBjaGFpbnMgbXVzdCBiZSBkZWZpbmVkIGFzIFwibmFtZXNwYWNlOmNoYWluSWRcIiBlLmcuIFwiZWlwMTU1OjFcIjogey4uLn0gaW4gdGhlIG5hbWVzcGFjZSBrZXkgT1IgYXMgYW4gYXJyYXkgb2YgQ0FJUC0yIGNoYWluSWRzIGUuZy4gZWlwMTU1OiB7IGNoYWluczogW1wiZWlwMTU1OjFcIiwgXCJlaXAxNTU6NVwiXSB9YCkpLHJ9ZnVuY3Rpb24gbnModCxlLG4pe2xldCByPW51bGw7cmV0dXJuIE9iamVjdC5lbnRyaWVzKHQpLmZvckVhY2goKFtvLHNdKT0+e2lmKHIpcmV0dXJuO2NvbnN0IGk9ZXMobyx2ZShvLHMpLGAke2V9ICR7bn1gKTtpJiYocj1pKX0pLHJ9ZnVuY3Rpb24gcnModCxlKXtsZXQgbj1udWxsO3JldHVybiBtZSh0KT90LmZvckVhY2gocj0+e258fHRzKHIpfHwobj1LdChcIlVOU1VQUE9SVEVEX0FDQ09VTlRTXCIsYCR7ZX0sIGFjY291bnQgJHtyfSBzaG91bGQgYmUgYSBzdHJpbmcgYW5kIGNvbmZvcm0gdG8gXCJuYW1lc3BhY2U6Y2hhaW5JZDphZGRyZXNzXCIgZm9ybWF0YCkpfSk6bj1LdChcIlVOU1VQUE9SVEVEX0FDQ09VTlRTXCIsYCR7ZX0sIGFjY291bnRzIHNob3VsZCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzIGNvbmZvcm1pbmcgdG8gXCJuYW1lc3BhY2U6Y2hhaW5JZDphZGRyZXNzXCIgZm9ybWF0YCksbn1mdW5jdGlvbiBvcyh0LGUpe2xldCBuPW51bGw7cmV0dXJuIE9iamVjdC52YWx1ZXModCkuZm9yRWFjaChyPT57aWYobilyZXR1cm47Y29uc3Qgbz1ycyhyPy5hY2NvdW50cyxgJHtlfSBuYW1lc3BhY2VgKTtvJiYobj1vKX0pLG59ZnVuY3Rpb24gc3ModCxlKXtsZXQgbj1udWxsO3JldHVybiBIbih0Py5tZXRob2RzKT9Ibih0Py5ldmVudHMpfHwobj1LdChcIlVOU1VQUE9SVEVEX0VWRU5UU1wiLGAke2V9LCBldmVudHMgc2hvdWxkIGJlIGFuIGFycmF5IG9mIHN0cmluZ3Mgb3IgZW1wdHkgYXJyYXkgZm9yIG5vIGV2ZW50c2ApKTpuPUt0KFwiVU5TVVBQT1JURURfTUVUSE9EU1wiLGAke2V9LCBtZXRob2RzIHNob3VsZCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzIG9yIGVtcHR5IGFycmF5IGZvciBubyBtZXRob2RzYCksbn1mdW5jdGlvbiBEbih0LGUpe2xldCBuPW51bGw7cmV0dXJuIE9iamVjdC52YWx1ZXModCkuZm9yRWFjaChyPT57aWYobilyZXR1cm47Y29uc3Qgbz1zcyhyLGAke2V9LCBuYW1lc3BhY2VgKTtvJiYobj1vKX0pLG59ZnVuY3Rpb24gRWEodCxlLG4pe2xldCByPW51bGw7aWYodCYmVmUodCkpe2NvbnN0IG89RG4odCxlKTtvJiYocj1vKTtjb25zdCBzPW5zKHQsZSxuKTtzJiYocj1zKX1lbHNlIHI9RXQoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgJHtlfSwgJHtufSBzaG91bGQgYmUgYW4gb2JqZWN0IHdpdGggZGF0YWApO3JldHVybiByfWZ1bmN0aW9uIGlzKHQsZSl7bGV0IG49bnVsbDtpZih0JiZWZSh0KSl7Y29uc3Qgcj1Ebih0LGUpO3ImJihuPXIpO2NvbnN0IG89b3ModCxlKTtvJiYobj1vKX1lbHNlIG49RXQoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgJHtlfSwgbmFtZXNwYWNlcyBzaG91bGQgYmUgYW4gb2JqZWN0IHdpdGggZGF0YWApO3JldHVybiBufWZ1bmN0aW9uIGZzKHQpe3JldHVybiBpdCh0LnByb3RvY29sLCEwKX1mdW5jdGlvbiBCYSh0LGUpe2xldCBuPSExO3JldHVybiBlJiYhdD9uPSEwOnQmJm1lKHQpJiZ0Lmxlbmd0aCYmdC5mb3JFYWNoKHI9PntuPWZzKHIpfSksbn1mdW5jdGlvbiBJYSh0KXtyZXR1cm4gdHlwZW9mIHQ9PVwibnVtYmVyXCJ9ZnVuY3Rpb24gQWEodCl7cmV0dXJuIHR5cGVvZiB0PFwidVwiJiZ0eXBlb2YgdCE9PW51bGx9ZnVuY3Rpb24gU2EodCl7cmV0dXJuISghdHx8dHlwZW9mIHQhPVwib2JqZWN0XCJ8fCF0LmNvZGV8fCFxZSh0LmNvZGUsITEpfHwhdC5tZXNzYWdlfHwhaXQodC5tZXNzYWdlLCExKSl9ZnVuY3Rpb24gTmEodCl7cmV0dXJuIShrdCh0KXx8IWl0KHQubWV0aG9kLCExKSl9ZnVuY3Rpb24gT2EodCl7cmV0dXJuIShrdCh0KXx8a3QodC5yZXN1bHQpJiZrdCh0LmVycm9yKXx8IXFlKHQuaWQsITEpfHwhaXQodC5qc29ucnBjLCExKSl9ZnVuY3Rpb24gVWEodCl7cmV0dXJuIShrdCh0KXx8IWl0KHQubmFtZSwhMSkpfWZ1bmN0aW9uIF9hKHQsZSl7cmV0dXJuISghd2UoZSl8fCFHbyh0KS5pbmNsdWRlcyhlKSl9ZnVuY3Rpb24gVGEodCxlLG4pe3JldHVybiBpdChuLCExKT9abyh0LGUpLmluY2x1ZGVzKG4pOiExfWZ1bmN0aW9uIFJhKHQsZSxuKXtyZXR1cm4gaXQobiwhMSk/V28odCxlKS5pbmNsdWRlcyhuKTohMX1mdW5jdGlvbiBjcyh0LGUsbil7bGV0IHI9bnVsbDtjb25zdCBvPSRhKHQpLHM9Q2EoZSksaT1PYmplY3Qua2V5cyhvKSxmPU9iamVjdC5rZXlzKHMpLGM9YXMoT2JqZWN0LmtleXModCkpLHU9YXMoT2JqZWN0LmtleXMoZSkpLGE9Yy5maWx0ZXIobD0+IXUuaW5jbHVkZXMobCkpO3JldHVybiBhLmxlbmd0aCYmKHI9RXQoXCJOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTXCIsYCR7bn0gbmFtZXNwYWNlcyBrZXlzIGRvbid0IHNhdGlzZnkgcmVxdWlyZWROYW1lc3BhY2VzLlxuICAgICAgUmVxdWlyZWQ6ICR7YS50b1N0cmluZygpfVxuICAgICAgUmVjZWl2ZWQ6ICR7T2JqZWN0LmtleXMoZSkudG9TdHJpbmcoKX1gKSksSXQoaSxmKXx8KHI9RXQoXCJOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTXCIsYCR7bn0gbmFtZXNwYWNlcyBjaGFpbnMgZG9uJ3Qgc2F0aXNmeSByZXF1aXJlZCBuYW1lc3BhY2VzLlxuICAgICAgUmVxdWlyZWQ6ICR7aS50b1N0cmluZygpfVxuICAgICAgQXBwcm92ZWQ6ICR7Zi50b1N0cmluZygpfWApKSxPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGw9PntpZighbC5pbmNsdWRlcyhcIjpcIil8fHIpcmV0dXJuO2NvbnN0IGg9cXQoZVtsXS5hY2NvdW50cyk7aC5pbmNsdWRlcyhsKXx8KHI9RXQoXCJOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTXCIsYCR7bn0gbmFtZXNwYWNlcyBhY2NvdW50cyBkb24ndCBzYXRpc2Z5IG5hbWVzcGFjZSBhY2NvdW50cyBmb3IgJHtsfVxuICAgICAgICBSZXF1aXJlZDogJHtsfVxuICAgICAgICBBcHByb3ZlZDogJHtoLnRvU3RyaW5nKCl9YCkpfSksaS5mb3JFYWNoKGw9PntyfHwoSXQob1tsXS5tZXRob2RzLHNbbF0ubWV0aG9kcyk/SXQob1tsXS5ldmVudHMsc1tsXS5ldmVudHMpfHwocj1FdChcIk5PTl9DT05GT1JNSU5HX05BTUVTUEFDRVNcIixgJHtufSBuYW1lc3BhY2VzIGV2ZW50cyBkb24ndCBzYXRpc2Z5IG5hbWVzcGFjZSBldmVudHMgZm9yICR7bH1gKSk6cj1FdChcIk5PTl9DT05GT1JNSU5HX05BTUVTUEFDRVNcIixgJHtufSBuYW1lc3BhY2VzIG1ldGhvZHMgZG9uJ3Qgc2F0aXNmeSBuYW1lc3BhY2UgbWV0aG9kcyBmb3IgJHtsfWApKX0pLHJ9ZnVuY3Rpb24gJGEodCl7Y29uc3QgZT17fTtyZXR1cm4gT2JqZWN0LmtleXModCkuZm9yRWFjaChuPT57dmFyIHI7bi5pbmNsdWRlcyhcIjpcIik/ZVtuXT10W25dOihyPXRbbl0uY2hhaW5zKT09bnVsbHx8ci5mb3JFYWNoKG89PntlW29dPXttZXRob2RzOnRbbl0ubWV0aG9kcyxldmVudHM6dFtuXS5ldmVudHN9fSl9KSxlfWZ1bmN0aW9uIGFzKHQpe3JldHVyblsuLi5uZXcgU2V0KHQubWFwKGU9PmUuaW5jbHVkZXMoXCI6XCIpP2Uuc3BsaXQoXCI6XCIpWzBdOmUpKV19ZnVuY3Rpb24gQ2EodCl7Y29uc3QgZT17fTtyZXR1cm4gT2JqZWN0LmtleXModCkuZm9yRWFjaChuPT57aWYobi5pbmNsdWRlcyhcIjpcIikpZVtuXT10W25dO2Vsc2V7Y29uc3Qgcj1xdCh0W25dLmFjY291bnRzKTtyPy5mb3JFYWNoKG89PntlW29dPXthY2NvdW50czp0W25dLmFjY291bnRzLmZpbHRlcihzPT5zLmluY2x1ZGVzKGAke299OmApKSxtZXRob2RzOnRbbl0ubWV0aG9kcyxldmVudHM6dFtuXS5ldmVudHN9fSl9fSksZX1mdW5jdGlvbiBMYSh0LGUpe3JldHVybiBxZSh0LCExKSYmdDw9ZS5tYXgmJnQ+PWUubWlufWZ1bmN0aW9uIGphKCl7Y29uc3QgdD1QdCgpO3JldHVybiBuZXcgUHJvbWlzZShlPT57c3dpdGNoKHQpe2Nhc2UgSi5icm93c2VyOmUodXMoKSk7YnJlYWs7Y2FzZSBKLnJlYWN0TmF0aXZlOmUobHMoKSk7YnJlYWs7Y2FzZSBKLm5vZGU6ZShkcygpKTticmVhaztkZWZhdWx0OmUoITApfX0pfWZ1bmN0aW9uIHVzKCl7cmV0dXJuIHp0KCkmJm5hdmlnYXRvcj8ub25MaW5lfWFzeW5jIGZ1bmN0aW9uIGxzKCl7aWYoQnQoKSYmdHlwZW9mIGdsb2JhbDxcInVcIiYmZ2xvYmFsIT1udWxsJiZnbG9iYWwuTmV0SW5mbyl7Y29uc3QgdD1hd2FpdChnbG9iYWw9PW51bGw/dm9pZCAwOmdsb2JhbC5OZXRJbmZvLmZldGNoKCkpO3JldHVybiB0Py5pc0Nvbm5lY3RlZH1yZXR1cm4hMH1mdW5jdGlvbiBkcygpe3JldHVybiEwfWZ1bmN0aW9uIGthKHQpe3N3aXRjaChQdCgpKXtjYXNlIEouYnJvd3Nlcjpocyh0KTticmVhaztjYXNlIEoucmVhY3ROYXRpdmU6cHModCk7YnJlYWs7Y2FzZSBKLm5vZGU6YnJlYWt9fWZ1bmN0aW9uIGhzKHQpeyFCdCgpJiZ6dCgpJiYod2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvbmxpbmVcIiwoKT0+dCghMCkpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib2ZmbGluZVwiLCgpPT50KCExKSkpfWZ1bmN0aW9uIHBzKHQpe0J0KCkmJnR5cGVvZiBnbG9iYWw8XCJ1XCImJmdsb2JhbCE9bnVsbCYmZ2xvYmFsLk5ldEluZm8mJmdsb2JhbD8uTmV0SW5mby5hZGRFdmVudExpc3RlbmVyKGU9PnQoZT8uaXNDb25uZWN0ZWQpKX1mdW5jdGlvbiBQYSgpe3ZhciB0O3JldHVybiB6dCgpJiZuZSgpPygodD1uZSgpKT09bnVsbD92b2lkIDA6dC52aXNpYmlsaXR5U3RhdGUpPT09XCJ2aXNpYmxlXCI6ITB9Y29uc3QgTW49e307Y2xhc3MgSGF7c3RhdGljIGdldChlKXtyZXR1cm4gTW5bZV19c3RhdGljIHNldChlLG4pe01uW2VdPW59c3RhdGljIGRlbGV0ZShlKXtkZWxldGUgTW5bZV19fWZ1bmN0aW9uIGdzKHQpe2NvbnN0IGU9cmUuZGVjb2RlKHQpO2lmKGUubGVuZ3RoPDMzKXRocm93IG5ldyBFcnJvcihcIlRvbyBzaG9ydCB0byBjb250YWluIGEgcHVibGljIGtleVwiKTtyZXR1cm4gZS5zbGljZSgxLDMzKX1mdW5jdGlvbiBicyh7cHVibGljS2V5OnQsc2lnbmF0dXJlOmUscGF5bG9hZDpufSl7dmFyIHI7Y29uc3Qgbz1WbihuLm1ldGhvZCkscz0xMjh8cGFyc2VJbnQoKChyPW4udmVyc2lvbik9PW51bGw/dm9pZCAwOnIudG9TdHJpbmcoKSl8fFwiNFwiKSxpPU1hKG4uYWRkcmVzcyksZj1uLmVyYT09PVwiMDBcIj9uZXcgVWludDhBcnJheShbMF0pOlZuKG4uZXJhKTtpZihmLmxlbmd0aCE9PTEmJmYubGVuZ3RoIT09Mil0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGVyYSBsZW5ndGhcIik7Y29uc3QgYz1wYXJzZUludChuLm5vbmNlLDE2KSx1PW5ldyBVaW50OEFycmF5KFtjJjI1NSxjPj44JjI1NV0pLGE9QmlnSW50KGAweCR7RGEobi50aXApfWApLGw9cWEoYSksaD1uZXcgVWludDhBcnJheShbMCwuLi50LGksLi4uZSwuLi5mLC4uLnUsLi4ubCwuLi5vXSksZz1WYShoLmxlbmd0aCsxKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoWy4uLmcscywuLi5oXSl9ZnVuY3Rpb24geXModCl7Y29uc3QgZT1Wbih0KSxuPU5zKGUsdm9pZCAwLDMyKTtyZXR1cm5cIjB4XCIrQnVmZmVyLmZyb20obikudG9TdHJpbmcoXCJoZXhcIil9ZnVuY3Rpb24gVm4odCl7cmV0dXJuIG5ldyBVaW50OEFycmF5KHQucmVwbGFjZSgvXjB4LyxcIlwiKS5tYXRjaCgvLnsxLDJ9L2cpLm1hcChlPT5wYXJzZUludChlLDE2KSkpfWZ1bmN0aW9uIERhKHQpe3JldHVybiB0LnN0YXJ0c1dpdGgoXCIweFwiKT90LnNsaWNlKDIpOnR9ZnVuY3Rpb24gTWEodCl7Y29uc3QgZT1yZS5kZWNvZGUodClbMF07cmV0dXJuIGU9PT00Mj8wOmU9PT02MD8yOjF9ZnVuY3Rpb24gVmEodCl7aWYodDw2NClyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW3Q8PDJdKTtpZih0PDE2Mzg0KXtjb25zdCBlPXQ8PDJ8MTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW2UmMjU1LGU+PjgmMjU1XSl9ZWxzZSBpZih0PDE8PDMwKXtjb25zdCBlPXQ8PDJ8MjtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW2UmMjU1LGU+PjgmMjU1LGU+PjE2JjI1NSxlPj4yNCYyNTVdKX1lbHNlIHRocm93IG5ldyBFcnJvcihcIkNvbXBhY3QgZW5jb2RpbmcgPiAyXjMwIG5vdCBzdXBwb3J0ZWRcIil9ZnVuY3Rpb24gcWEodCl7aWYodDxCaWdJbnQoMSk8PEJpZ0ludCg2KSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW051bWJlcih0PDxCaWdJbnQoMikpXSk7aWYodDxCaWdJbnQoMSk8PEJpZ0ludCgxNCkpe2NvbnN0IGU9dDw8QmlnSW50KDIpfEJpZ0ludCgxKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW051bWJlcihlJkJpZ0ludCgyNTUpKSxOdW1iZXIoZT4+QmlnSW50KDgpJkJpZ0ludCgyNTUpKV0pfWVsc2UgaWYodDxCaWdJbnQoMSk8PEJpZ0ludCgzMCkpe2NvbnN0IGU9dDw8QmlnSW50KDIpfEJpZ0ludCgyKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW051bWJlcihlJkJpZ0ludCgyNTUpKSxOdW1iZXIoZT4+QmlnSW50KDgpJkJpZ0ludCgyNTUpKSxOdW1iZXIoZT4+QmlnSW50KDE2KSZCaWdJbnQoMjU1KSksTnVtYmVyKGU+PkJpZ0ludCgyNCkmQmlnSW50KDI1NSkpXSl9ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXCJCaWdJbnQgY29tcGFjdCBlbmNvZGluZyBub3Qgc3VwcG9ydGVkID4gMl4zMFwiKX1mdW5jdGlvbiBLYSh0KXtjb25zdCBlPVVpbnQ4QXJyYXkuZnJvbShCdWZmZXIuZnJvbSh0LnNpZ25hdHVyZSxcImhleFwiKSksbj1ncyh0LnRyYW5zYWN0aW9uLmFkZHJlc3MpLHI9YnMoe3B1YmxpY0tleTpuLHNpZ25hdHVyZTplLHBheWxvYWQ6dC50cmFuc2FjdGlvbn0pLG89QnVmZmVyLmZyb20ocikudG9TdHJpbmcoXCJoZXhcIik7cmV0dXJuIHlzKG8pfWV4cG9ydHskbiBhcyBCQVNFMTAsdHQgYXMgQkFTRTE2LFF0IGFzIEJBU0U2NCxEZSBhcyBCQVNFNjRVUkwsSHMgYXMgQ09MT04sV2UgYXMgREVGQVVMVF9ERVBUSCxFZSBhcyBFTVBUWV9TUEFDRSxKIGFzIEVOVl9NQVAsUW8gYXMgSU5URVJOQUxfRVJST1JTLGdpIGFzIExpbWl0ZWRTZXQsSGEgYXMgTWVtb3J5U3RvcmUsRHMgYXMgT05FX1RIT1VTQU5ELGVyIGFzIFJFQUNUX05BVElWRV9QUk9EVUNULE1vIGFzIFJFTEFZRVJfREVGQVVMVF9QUk9UT0NPTCxKbyBhcyBTREtfRVJST1JTLHJyIGFzIFNES19UWVBFLG5yIGFzIFNMQVNILENuIGFzIFRZUEVfMCxlZSBhcyBUWVBFXzEsZ2UgYXMgVFlQRV8yLHRlIGFzIFVURjgsWXIgYXMgYWRkUmVzb3VyY2VUb1JlY2FwLGJzIGFzIGFkZFNpZ25hdHVyZVRvRXh0cmluc2ljLG9yIGFzIGFwcGVuZFRvUXVlcnlTdHJpbmcsWnMgYXMgYXNzZXJ0VHlwZSxobiBhcyBhc3NpZ25BYmlsaXR5VG9BY3Rpb25zLFpyIGFzIGJhc2U2NERlY29kZSxHciBhcyBiYXNlNjRFbmNvZGUscGEgYXMgYnVpbGRBcHByb3ZlZE5hbWVzcGFjZXMsbWYgYXMgYnVpbGRBdXRoT2JqZWN0LGdhIGFzIGJ1aWxkTmFtZXNwYWNlc0Zyb21BdXRoLEpyIGFzIGJ1aWxkUmVjYXBTdGF0ZW1lbnQsS2EgYXMgYnVpbGRTaWduZWRFeHRyaW5zaWNIYXNoLGlpIGFzIGNhbGNFeHBpcnksdGkgYXMgY2FwaXRhbGl6ZSxsciBhcyBjYXBpdGFsaXplV29yZCxlaSBhcyBjcmVhdGVEZWxheWVkUHJvbWlzZSxFZiBhcyBjcmVhdGVFbmNvZGVkUmVjYXAsbmkgYXMgY3JlYXRlRXhwaXJpbmdQcm9taXNlLFdyIGFzIGNyZWF0ZVJlY2FwLEx0IGFzIGRlY29kZVJlY2FwLFZ0IGFzIGRlY29kZVR5cGVCeXRlLFljIGFzIGRlY29kZVR5cGVUd29FbnZlbG9wZSxaYyBhcyBkZWNyeXB0LHlzIGFzIGRlcml2ZUV4dHJpbnNpY0hhc2gsS2MgYXMgZGVyaXZlU3ltS2V5LE1lIGFzIGRlc2VyaWFsaXplLE5lIGFzIGVuY29kZVJlY2FwLGpuIGFzIGVuY29kZVR5cGVCeXRlLFdjIGFzIGVuY29kZVR5cGVUd29FbnZlbG9wZSxHYyBhcyBlbmNyeXB0LGNpIGFzIGVuZ2luZUV2ZW50LFFzIGFzIGVudW1pZnksc2YgYXMgZXh0cmFjdFNvbGFuYVRyYW5zYWN0aW9uSWQsWm4gYXMgZm9ybWF0QWNjb3VudElkLE9zIGFzIGZvcm1hdEFjY291bnRXaXRoQ2hhaW4sR24gYXMgZm9ybWF0Q2hhaW5JZCxkciBhcyBmb3JtYXREZWVwbGlua1VybCxYZSBhcyBmb3JtYXRFeHBpcmVyVGFyZ2V0LG9pIGFzIGZvcm1hdElkVGFyZ2V0LHFyIGFzIGZvcm1hdE1lc3NhZ2UsV3MgYXMgZm9ybWF0TWVzc2FnZUNvbnRleHQsS28gYXMgZm9ybWF0UmVsYXlQYXJhbXMsenMgYXMgZm9ybWF0UmVsYXlScGNVcmwsZ24gYXMgZm9ybWF0U3RhdGVtZW50RnJvbVJlY2FwLHJpIGFzIGZvcm1hdFRvcGljVGFyZ2V0LGNyIGFzIGZvcm1hdFVBLG9hIGFzIGZvcm1hdFVyaSxRZSBhcyBmcm9tQmFzZTY0LFZjIGFzIGdlbmVyYXRlS2V5UGFpcixxYyBhcyBnZW5lcmF0ZVJhbmRvbUJ5dGVzMzIscXQgYXMgZ2V0QWNjb3VudHNDaGFpbnMsX3MgYXMgZ2V0QWNjb3VudHNGcm9tTmFtZXNwYWNlcyxXbiBhcyBnZXRBZGRyZXNzRnJvbUFjY291bnQsVXMgYXMgZ2V0QWRkcmVzc2VzRnJvbUFjY291bnRzLGFmIGFzIGdldEFsZ29yYW5kVHJhbnNhY3Rpb25JZCxxcyBhcyBnZXRBcHBJZCxzciBhcyBnZXRBcHBNZXRhZGF0YSx1cyBhcyBnZXRCcm93c2VyT25saW5lU3RhdHVzLFluIGFzIGdldENoYWluRnJvbUFjY291bnQsWG4gYXMgZ2V0Q2hhaW5zRnJvbUFjY291bnRzLHZlIGFzIGdldENoYWluc0Zyb21OYW1lc3BhY2UsVHMgYXMgZ2V0Q2hhaW5zRnJvbU5hbWVzcGFjZXMsQWYgYXMgZ2V0Q2hhaW5zRnJvbVJlY2FwLFJzIGFzIGdldENoYWluc0Zyb21SZXF1aXJlZE5hbWVzcGFjZXMsSmUgYXMgZ2V0Q29tbW9uVmFsdWVzSW5BcnJheXMsRG8gYXMgZ2V0Q3J5cHRvS2V5RnJvbUtleURhdGEsS3IgYXMgZ2V0RGVjb2RlZFJlY2FwRnJvbVJlc291cmNlcyx1aSBhcyBnZXREZWVwTGluayxkbiBhcyBnZXREaWRBZGRyZXNzLFNlIGFzIGdldERpZEFkZHJlc3NTZWdtZW50cyxNciBhcyBnZXREaWRDaGFpbklkLFB0IGFzIGdldEVudmlyb25tZW50LEdzIGFzIGdldEh0dHBVcmwsRXQgYXMgZ2V0SW50ZXJuYWxFcnJvcixmciBhcyBnZXRKYXZhc2NyaXB0SUQsaXIgYXMgZ2V0SmF2YXNjcmlwdE9TLHVyIGFzIGdldExhc3RJdGVtcyxzYSBhcyBnZXRMaW5rTW9kZVVSTCxJZiBhcyBnZXRNZXRob2RzRnJvbVJlY2FwLFZyIGFzIGdldE5hbWVzcGFjZWREaWRDaGFpbklkLEdvIGFzIGdldE5hbWVzcGFjZXNDaGFpbnMsV28gYXMgZ2V0TmFtZXNwYWNlc0V2ZW50c0ZvckNoYWluSWQsWG8gYXMgZ2V0TmFtZXNwYWNlc0Zyb21BY2NvdW50cyxabyBhcyBnZXROYW1lc3BhY2VzTWV0aG9kc0ZvckNoYWluSWQsY2YgYXMgZ2V0TmVhclRyYW5zYWN0aW9uSWRGcm9tU2lnbmVkVHJhbnNhY3Rpb24sa3IgYXMgZ2V0TmVhclVpbnQ4QXJyYXlGcm9tQnl0ZXMsZHMgYXMgZ2V0Tm9kZU9ubGluZVN0YXR1cyx6ciBhcyBnZXRSZUNhcEFjdGlvbnMsbHMgYXMgZ2V0UmVhY3ROYXRpdmVPbmxpbmVTdGF0dXMsdmYgYXMgZ2V0UmVjYXBBYmlsaXRpZXNGcm9tUmVzb3VyY2UsT2UgYXMgZ2V0UmVjYXBGcm9tUmVzb3VyY2VzLEZyIGFzIGdldFJlY2FwUmVzb3VyY2UsRnMgYXMgZ2V0UmVsYXlDbGllbnRNZXRhZGF0YSxuYSBhcyBnZXRSZWxheVByb3RvY29sQXBpLGVhIGFzIGdldFJlbGF5UHJvdG9jb2xOYW1lLGhhIGFzIGdldFJlcXVpcmVkTmFtZXNwYWNlc0Zyb21OYW1lc3BhY2VzLEt0IGFzIGdldFNka0Vycm9yLGxpIGFzIGdldFNlYXJjaFBhcmFtRnJvbVVSTCx1ZiBhcyBnZXRTaWduRGlyZWN0SGFzaCxmZiBhcyBnZXRTdWlEaWdlc3QsR2UgYXMgZ2V0VW5pcXVlVmFsdWVzLGFpIGFzIGhhbmRsZURlZXBsaW5rUmVkaXJlY3QsSXQgYXMgaGFzT3ZlcmxhcCxhbiBhcyBoYXNoRXRoZXJldW1NZXNzYWdlLEZjIGFzIGhhc2hLZXksemMgYXMgaGFzaE1lc3NhZ2UsTXMgYXMgaXNBbmRyb2lkLFBhIGFzIGlzQXBwVmlzaWJsZSx6dCBhcyBpc0Jyb3dzZXIsUG4gYXMgaXNDYWlwTmFtZXNwYWNlLGNzIGFzIGlzQ29uZm9ybWluZ05hbWVzcGFjZXMsZmkgYXMgaXNFeHBpcmVkLGdyIGFzIGlzSWZyYW1lLFZzIGFzIGlzSW9zLFllIGFzIGlzTm9kZSxqYSBhcyBpc09ubGluZSx3YSBhcyBpc1Byb3Bvc2FsU3RydWN0LEJ0IGFzIGlzUmVhY3ROYXRpdmUscG4gYXMgaXNSZWNhcCx5YSBhcyBpc1Nlc3Npb25Db21wYXRpYmxlLHhhIGFzIGlzU2Vzc2lvblN0cnVjdCxwciBhcyBpc1RlbGVncmFtLGhpIGFzIGlzVGVzdFJ1bixKYyBhcyBpc1R5cGVPbmVFbnZlbG9wZSxRYyBhcyBpc1R5cGVUd29FbnZlbG9wZSxrdCBhcyBpc1VuZGVmaW5lZCx0cyBhcyBpc1ZhbGlkQWNjb3VudElkLHJzIGFzIGlzVmFsaWRBY2NvdW50cyxzcyBhcyBpc1ZhbGlkQWN0aW9ucyxtZSBhcyBpc1ZhbGlkQXJyYXksd2UgYXMgaXNWYWxpZENoYWluSWQsZXMgYXMgaXNWYWxpZENoYWlucyx2YSBhcyBpc1ZhbGlkQ29udHJvbGxlcixqciBhcyBpc1ZhbGlkRWlwMTI3MVNpZ25hdHVyZSxMciBhcyBpc1ZhbGlkRWlwMTkxU2lnbmF0dXJlLFNhIGFzIGlzVmFsaWRFcnJvclJlYXNvbixVYSBhcyBpc1ZhbGlkRXZlbnQsSWEgYXMgaXNWYWxpZElkLG9zIGFzIGlzVmFsaWROYW1lc3BhY2VBY2NvdW50cyxEbiBhcyBpc1ZhbGlkTmFtZXNwYWNlQWN0aW9ucyxucyBhcyBpc1ZhbGlkTmFtZXNwYWNlQ2hhaW5zLEhuIGFzIGlzVmFsaWROYW1lc3BhY2VNZXRob2RzT3JFdmVudHMsaXMgYXMgaXNWYWxpZE5hbWVzcGFjZXMsX2EgYXMgaXNWYWxpZE5hbWVzcGFjZXNDaGFpbklkLFJhIGFzIGlzVmFsaWROYW1lc3BhY2VzRXZlbnQsVGEgYXMgaXNWYWxpZE5hbWVzcGFjZXNSZXF1ZXN0LHFlIGFzIGlzVmFsaWROdW1iZXIsVmUgYXMgaXNWYWxpZE9iamVjdCxBYSBhcyBpc1ZhbGlkUGFyYW1zLGJ0IGFzIGlzVmFsaWRSZWNhcCxmcyBhcyBpc1ZhbGlkUmVsYXksQmEgYXMgaXNWYWxpZFJlbGF5cyxOYSBhcyBpc1ZhbGlkUmVxdWVzdCxMYSBhcyBpc1ZhbGlkUmVxdWVzdEV4cGlyeSxFYSBhcyBpc1ZhbGlkUmVxdWlyZWROYW1lc3BhY2VzLE9hIGFzIGlzVmFsaWRSZXNwb25zZSxpdCBhcyBpc1ZhbGlkU3RyaW5nLG1hIGFzIGlzVmFsaWRVcmwsSnMgYXMgbWFwRW50cmllcyxZcyBhcyBtYXBUb09iaixjdCBhcyBtZXJnZUFycmF5cyxCZiBhcyBtZXJnZUVuY29kZWRSZWNhcHMsWHIgYXMgbWVyZ2VSZWNhcHMsYmEgYXMgbWVyZ2VSZXF1aXJlZEFuZE9wdGlvbmFsTmFtZXNwYWNlcyx5ZSBhcyBub3JtYWxpemVOYW1lc3BhY2VzLFhzIGFzIG9ialRvTWFwLGhyIGFzIG9wZW5EZWVwbGluayx6ZSBhcyBwYXJzZUFjY291bnRJZCxGZSBhcyBwYXJzZUNoYWluSWQsYXIgYXMgcGFyc2VDb250ZXh0TmFtZXMsc2kgYXMgcGFyc2VFeHBpcmVyVGFyZ2V0LFlvIGFzIHBhcnNlTmFtZXNwYWNlS2V5LFZvIGFzIHBhcnNlUmVsYXlQYXJhbXMscW8gYXMgcGFyc2VUb3BpYyxyYSBhcyBwYXJzZVVyaSxLcyBhcyBwb3B1bGF0ZUFwcE1ldGFkYXRhLHdmIGFzIHBvcHVsYXRlQXV0aFBheWxvYWQseGYgYXMgcmVjYXBIYXNSZXNvdXJjZSxrbiBhcyBzZXJpYWxpemUscGkgYXMgc2xlZXAsZ3MgYXMgc3M1OEFkZHJlc3NUb1B1YmxpY0tleSxocyBhcyBzdWJzY3JpYmVUb0Jyb3dzZXJOZXR3b3JrQ2hhbmdlLGthIGFzIHN1YnNjcmliZVRvTmV0d29ya0NoYW5nZSxwcyBhcyBzdWJzY3JpYmVUb1JlYWN0TmF0aXZlTmV0d29ya0NoYW5nZSxiciBhcyB0b0Jhc2U2NCxkaSBhcyB1dWlkdjQsWGMgYXMgdmFsaWRhdGVEZWNvZGluZyxIbyBhcyB2YWxpZGF0ZUVuY29kaW5nLHlmIGFzIHZhbGlkYXRlU2lnbmVkQ2FjYW8sdGEgYXMgdmVyaWZ5UDI1Nkp3dCxDciBhcyB2ZXJpZnlTaWduYXR1cmV9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@walletconnect+utils@2.21.4_typescript@5.5.4_zod@3.25.75/node_modules/@walletconnect/utils/dist/index.es.js\n");

/***/ })

};
;
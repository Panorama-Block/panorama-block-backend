name: Deploy Panorama Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  RG: Core-Deploy
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Enable Container Apps extension
        run: az extension add --name containerapp --upgrade

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: Compute image names
        id: images
        run: |
          OWNER_LOWER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          echo "auth_image=ghcr.io/${OWNER_LOWER}/auth-service:${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
          echo "liquid_image=ghcr.io/${OWNER_LOWER}/liquid-swap:${IMAGE_TAG}" >> "$GITHUB_OUTPUT"

      - name: Prepare liquid-swap build context
        run: |
          mkdir -p liquid-swap-service/shared
          cp shared/token-registry.json liquid-swap-service/shared/token-registry.json

      - name: Build and push auth-service image
        env:
          IMAGE: ${{ steps.images.outputs.auth_image }}
        run: |
          docker build -t "$IMAGE" ./auth-service
          docker push "$IMAGE"

      - name: Authorize container app to pull from GHCR
        env:
          IMAGE: ${{ steps.images.outputs.auth_image }}
        run: |
          az containerapp registry set \
            --name auth-service \
            --resource-group $RG \
            --server ghcr.io \
            --username ${{ secrets.GHCR_USERNAME }} \
            --password ${{ secrets.GHCR_PASSWORD }}

      - name: Deploy auth-service
        env:
          IMAGE: ${{ steps.images.outputs.auth_image }}
        run: |
          az containerapp update \
            --name auth-service \
            --resource-group $RG \
            --image "$IMAGE"

      - name: Build and push liquid-swap image
        env:
          IMAGE: ${{ steps.images.outputs.liquid_image }}
        run: |
          docker build -t "$IMAGE" ./liquid-swap-service
          docker push "$IMAGE"

      - name: Authorize liquid-swap container app
        run: |
          az containerapp registry set \
            --name liquid-swap \
            --resource-group $RG \
            --server ghcr.io \
            --username ${{ secrets.GHCR_USERNAME }} \
            --password ${{ secrets.GHCR_PASSWORD }}

      - name: Deploy liquid-swap
        env:
          IMAGE: ${{ steps.images.outputs.liquid_image }}
        run: |
          az containerapp update \
            --name liquid-swap \
            --resource-group $RG \
            --image "$IMAGE"

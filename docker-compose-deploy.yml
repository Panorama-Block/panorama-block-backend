version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: panorama-mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_ROOT_DATABASE}
    restart: always

  redis:
    image: redis:7-alpine
    container_name: panorama-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASS}"]
    environment:
      REDIS_PASS: ${REDIS_PASS}
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: always

  # --- ThirdWeb Engine para execução de transações ---
  engine_postgres:
    image: postgres:14
    container_name: panorama-engine-postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5433:5432"
    volumes:
      - engine_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  engine:
    image: thirdweb/engine:latest
    container_name: thirdweb-engine
    depends_on:
      engine_postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      # 🔐 Essenciais
      THIRDWEB_API_SECRET_KEY: ${THIRDWEB_SECRET_KEY}
      ADMIN_WALLET_ADDRESS: ${ADMIN_WALLET_ADDRESS}
      ENCRYPTION_PASSWORD: ${ENCRYPTION_PASSWORD}
      # 💾 DB & Cache
      POSTGRES_CONNECTION_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@engine_postgres:5432/${POSTGRES_DB:-postgres}?sslmode=disable
      REDIS_URL: redis://:${REDIS_PASS}@redis:6379
      # ⚙️ Opções
      LOG_LEVEL: ${LOG_LEVEL:-info}
      PORT: ${ENGINE_PORT:-3005}
    ports:
      - "${ENGINE_PORT:-3005}:3005"
    restart: unless-stopped

  auth_service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: panorama-auth-service
    ports:
      - "${AUTH_PORT}:3001"
    environment:
      - PORT=3001
      - NODE_ENV=${NODE_ENV}
      - DEBUG=${DEBUG}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASS=${REDIS_PASS}
      - AUTH_DOMAIN=${AUTH_DOMAIN}
      - AUTH_PRIVATE_KEY=${AUTH_PRIVATE_KEY}
      - THIRDWEB_CLIENT_ID=${THIRDWEB_CLIENT_ID}
      # >>> SSL configuration
      - FULLCHAIN=${FULLCHAIN}
      - PRIVKEY=${PRIVKEY}
      - FORCE_HTTPS=${FORCE_HTTPS}
    env_file:
      - .env
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      redis:
        condition: service_started
    restart: always

  wallet_tracker_service:
    build:
      context: ./wallet-tracker-service
      dockerfile: Dockerfile
    container_name: panorama-wallet-tracker
    ports:
      - "${WALLET_TRACKER_PORT}:3000"
    environment:
      - PORT=3000
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASS=${REDIS_PASS}
      - X_RANGO_ID=${X_RANGO_ID}
      - AUTH_SERVICE_URL=https://auth_service:3001
      - DEBUG=${DEBUG}
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_started
      redis:
        condition: service_started
      auth_service:
        condition: service_started
    restart: always

  liquid_swap_service:
    build:
      context: ./liquid-swap-service
      dockerfile: Dockerfile
    container_name: panorama-liquid-swap
    ports:
      - "${LIQUID_SWAP_PORT}:3002"
    environment:
      - PORT=3002
      - NODE_ENV=${NODE_ENV}
      - DEBUG=${DEBUG}
      - AUTH_SERVICE_URL=https://auth_service:3001
      - THIRDWEB_CLIENT_ID=${THIRDWEB_CLIENT_ID}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - SWAP_SENDER_ADDRESS=${SWAP_SENDER_ADDRESS}
      - SWAP_RECEIVER_ADDRESS=${SWAP_RECEIVER_ADDRESS}
      - X_RANGO_ID=${X_RANGO_ID}
      - RPC_URL=${RPC_URL}
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL}
      - POLYGON_RPC_URL=${POLYGON_RPC_URL}
      - BSC_RPC_URL=${BSC_RPC_URL}
      - BASE_RPC_URL=${BASE_RPC_URL}
      - OPTIMISM_RPC_URL=${OPTIMISM_RPC_URL}
      - ARBITRUM_RPC_URL=${ARBITRUM_RPC_URL}
      # >>> Engine configuration
      - ENGINE_URL=http://engine:3005
      - ENGINE_ENABLED=${ENGINE_ENABLED:-true}
      - ENGINE_ACCESS_TOKEN=${ENGINE_ACCESS_TOKEN}
      - THIRDWEB_SECRET_KEY=${THIRDWEB_SECRET_KEY}
      - ADMIN_WALLET_ADDRESS=${ADMIN_WALLET_ADDRESS}
      - ENCRYPTION_PASSWORD=${ENCRYPTION_PASSWORD}
      # >>> SSL configuration
      - FULLCHAIN=${FULLCHAIN}
      - PRIVKEY=${PRIVKEY}
      - FORCE_HTTPS=${FORCE_HTTPS}
    env_file:
      - .env
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      auth_service:
        condition: service_started
      engine:
        condition: service_started
    restart: always

volumes:
  mongodb_data:
  redis_data:
  engine_pgdata:

